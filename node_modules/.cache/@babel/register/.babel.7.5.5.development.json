{
  "{\"sourceRoot\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"filename\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\index.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar Constants = _interopRequireWildcard(require(\"./lib/constants\"));\n\nvar Definitions = _interopRequireWildcard(require(\"./lib/definitions\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj[\"default\"] = obj; return newObj; } }\n\n// import * as Objects from './lib/objects'\nvar _default = {\n  Constants: Constants,\n  // Objects,\n  Definitions: Definitions\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIkNvbnN0YW50cyIsIkRlZmluaXRpb25zIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBRUE7Ozs7QUFEQTtlQUdlO0FBQ1hBLEVBQUFBLFNBQVMsRUFBVEEsU0FEVztBQUVYO0FBQ0FDLEVBQUFBLFdBQVcsRUFBWEE7QUFIVyxDIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcWmFjaCBTaGFtZXNcXERvY3VtZW50c1xcRGV2ZWxvcG1lbnRcXGpzLTItc3RpeCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIENvbnN0YW50cyBmcm9tICcuL2xpYi9jb25zdGFudHMnXHJcbi8vIGltcG9ydCAqIGFzIE9iamVjdHMgZnJvbSAnLi9saWIvb2JqZWN0cydcclxuaW1wb3J0ICogYXMgRGVmaW5pdGlvbnMgZnJvbSAnLi9saWIvZGVmaW5pdGlvbnMnXHJcblxyXG5leHBvcnQgZGVmYXVsdCB7XHJcbiAgICBDb25zdGFudHMsXHJcbiAgICAvLyBPYmplY3RzLFxyXG4gICAgRGVmaW5pdGlvbnNcclxufSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "Constants",
        "Definitions"
      ],
      "mappings": ";;;;;;;AAAA;;AAEA;;;;AADA;eAGe;AACXA,EAAAA,SAAS,EAATA,SADW;AAEX;AACAC,EAAAA,WAAW,EAAXA;AAHW,C",
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "sourcesContent": [
        "import * as Constants from './lib/constants'\r\n// import * as Objects from './lib/objects'\r\nimport * as Definitions from './lib/definitions'\r\n\r\nexport default {\r\n    Constants,\r\n    // Objects,\r\n    Definitions\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1565902584404
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\lib\\\\constants\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"filename\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\lib\\\\constants\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\constants",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\constants\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\constants\\index.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\constants\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\constants",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar General = _interopRequireWildcard(require(\"./general\"));\n\nvar Vocabulary = _interopRequireWildcard(require(\"./vocabulary\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj[\"default\"] = obj; return newObj; } }\n\nvar _default = {\n  General: General,\n  Vocabulary: Vocabulary\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIkdlbmVyYWwiLCJWb2NhYnVsYXJ5Il0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7Ozs7ZUFFZTtBQUNYQSxFQUFBQSxPQUFPLEVBQVBBLE9BRFc7QUFFWEMsRUFBQUEsVUFBVSxFQUFWQTtBQUZXLEMiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxaYWNoIFNoYW1lc1xcRG9jdW1lbnRzXFxEZXZlbG9wbWVudFxcanMtMi1zdGl4XFxsaWJcXGNvbnN0YW50cyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIEdlbmVyYWwgZnJvbSAnLi9nZW5lcmFsJ1xyXG5pbXBvcnQgKiBhcyBWb2NhYnVsYXJ5IGZyb20gJy4vdm9jYWJ1bGFyeSdcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHtcclxuICAgIEdlbmVyYWwsXHJcbiAgICBWb2NhYnVsYXJ5XHJcbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "General",
        "Vocabulary"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;eAEe;AACXA,EAAAA,OAAO,EAAPA,OADW;AAEXC,EAAAA,UAAU,EAAVA;AAFW,C",
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\constants",
      "sourcesContent": [
        "import * as General from './general'\r\nimport * as Vocabulary from './vocabulary'\r\n\r\nexport default {\r\n    General,\r\n    Vocabulary\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1565902525245
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\lib\\\\constants\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"filename\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\lib\\\\constants\\\\general.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\constants",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\constants\\general.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\constants\\general.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\constants\\general.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\constants",
        "sourceFileName": "general.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TLPs = exports.DefinitionTypes = void 0;\nvar DefinitionTypes = {\n  TLP: 'tlp',\n  STATEMENT: 'statement'\n};\nexports.DefinitionTypes = DefinitionTypes;\nvar TLPs = {\n  WHITE: 'white',\n  GREEN: 'green',\n  AMBER: 'amber',\n  RED: 'red'\n};\nexports.TLPs = TLPs;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdlbmVyYWwuanMiXSwibmFtZXMiOlsiRGVmaW5pdGlvblR5cGVzIiwiVExQIiwiU1RBVEVNRU5UIiwiVExQcyIsIldISVRFIiwiR1JFRU4iLCJBTUJFUiIsIlJFRCJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQU8sSUFBTUEsZUFBZSxHQUFHO0FBQzNCQyxFQUFBQSxHQUFHLEVBQUUsS0FEc0I7QUFFM0JDLEVBQUFBLFNBQVMsRUFBRTtBQUZnQixDQUF4Qjs7QUFLQSxJQUFNQyxJQUFJLEdBQUc7QUFDaEJDLEVBQUFBLEtBQUssRUFBRSxPQURTO0FBRWhCQyxFQUFBQSxLQUFLLEVBQUUsT0FGUztBQUdoQkMsRUFBQUEsS0FBSyxFQUFFLE9BSFM7QUFJaEJDLEVBQUFBLEdBQUcsRUFBRTtBQUpXLENBQWIiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxaYWNoIFNoYW1lc1xcRG9jdW1lbnRzXFxEZXZlbG9wbWVudFxcanMtMi1zdGl4XFxsaWJcXGNvbnN0YW50cyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBEZWZpbml0aW9uVHlwZXMgPSB7XHJcbiAgICBUTFA6ICd0bHAnLFxyXG4gICAgU1RBVEVNRU5UOiAnc3RhdGVtZW50J1xyXG59XHJcblxyXG5leHBvcnQgY29uc3QgVExQcyA9IHtcclxuICAgIFdISVRFOiAnd2hpdGUnLFxyXG4gICAgR1JFRU46ICdncmVlbicsXHJcbiAgICBBTUJFUjogJ2FtYmVyJyxcclxuICAgIFJFRDogJ3JlZCdcclxufSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "general.js"
      ],
      "names": [
        "DefinitionTypes",
        "TLP",
        "STATEMENT",
        "TLPs",
        "WHITE",
        "GREEN",
        "AMBER",
        "RED"
      ],
      "mappings": ";;;;;;AAAO,IAAMA,eAAe,GAAG;AAC3BC,EAAAA,GAAG,EAAE,KADsB;AAE3BC,EAAAA,SAAS,EAAE;AAFgB,CAAxB;;AAKA,IAAMC,IAAI,GAAG;AAChBC,EAAAA,KAAK,EAAE,OADS;AAEhBC,EAAAA,KAAK,EAAE,OAFS;AAGhBC,EAAAA,KAAK,EAAE,OAHS;AAIhBC,EAAAA,GAAG,EAAE;AAJW,CAAb",
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\constants",
      "sourcesContent": [
        "export const DefinitionTypes = {\r\n    TLP: 'tlp',\r\n    STATEMENT: 'statement'\r\n}\r\n\r\nexport const TLPs = {\r\n    WHITE: 'white',\r\n    GREEN: 'green',\r\n    AMBER: 'amber',\r\n    RED: 'red'\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1565901740061
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\lib\\\\constants\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"filename\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\lib\\\\constants\\\\vocabulary.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\constants",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\constants\\vocabulary.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\constants\\vocabulary.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\constants\\vocabulary.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\constants",
        "sourceFileName": "vocabulary.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RelationshipTypes = exports.ToolLabels = exports.ThreatActorSophistications = exports.ThreatActorRoles = exports.ThreatActorLabels = exports.ReportLabels = exports.MalwareLabels = exports.IndustrySectors = exports.IndicatorLabels = exports.IdentityClasses = exports.HashingAlgorithms = exports.AttackResourceLevels = exports.AttackMotivations = void 0;\nvar AttackMotivations = {\n  ACCIDENTAL: 'accidental',\n  COERCION: 'coercion',\n  DOMINANCE: 'dominance',\n  IDEOLOGY: 'ideology',\n  NOTORIETY: 'notoriety',\n  ORGANIZATIONAL_GAIN: 'organizational-gain',\n  PERSONAL_GAIN: 'personal-gain',\n  PERSONAL_SATISFACTION: 'personal-satisfaction',\n  REVENGE: 'revenge',\n  UNPREDICTABLE: 'unpredictable'\n};\nexports.AttackMotivations = AttackMotivations;\nvar AttackResourceLevels = {\n  INDIVIDUAL: 'individual',\n  CLUB: 'club',\n  CONTEST: 'contest',\n  TEAM: 'team',\n  ORGANIZATION: 'organization',\n  GOVERNMENT: 'government'\n};\nexports.AttackResourceLevels = AttackResourceLevels;\nvar HashingAlgorithms = {\n  MD5: 'MD5',\n  MD6: 'MD6',\n  RIPEMD_160: 'RIPEMD-160',\n  SHA_1: 'SHA-1',\n  SHA_224: 'SHA-224',\n  SHA_256: 'SHA-256',\n  SHA_384: 'SHA-384',\n  SHA_512: 'SHA-512',\n  SHA3_224: 'SHA3-224',\n  SHA3_256: 'SHA3-256',\n  SHA3_384: 'SHA3-384',\n  SHA3_512: 'SHA3-512',\n  SSDEEP: 'ssdeep',\n  WHIRLPOOL: 'WHIRLPOOL'\n};\nexports.HashingAlgorithms = HashingAlgorithms;\nvar IdentityClasses = {\n  INDIVIDUAL: 'individual',\n  GROUP: 'group',\n  ORGANIZATION: 'organization',\n  CLASS: 'class',\n  UNKNOWN: 'unknown'\n};\nexports.IdentityClasses = IdentityClasses;\nvar IndicatorLabels = {\n  ANOMALOUS_ACTIVITY: 'anomalous-activity',\n  ANONYMIZATION: 'anonymization',\n  BENIGN: 'benign',\n  COMPROMISED: 'compromised',\n  MALICIOUS_ACTIVITY: 'malicious-activity',\n  ATTRIBUTION: 'attribution'\n};\nexports.IndicatorLabels = IndicatorLabels;\nvar IndustrySectors = {\n  AGRICULTURE: 'agriculture',\n  AEROSPACE: 'aerospace',\n  AUTOMOTIVE: 'automotive',\n  COMMUNICATIONS: 'communications',\n  CONSTRUCTION: 'construction',\n  DEFENCE: 'defence',\n  EDUCATION: 'education',\n  ENERGY: 'energy',\n  ENTERTAINMENT: 'entertainment',\n  FINANCIAL_SERVICES: 'financial-services',\n  GOVERNMENT_NATIONAL: 'government-national',\n  GOVERNMENT_REGIONAL: 'government-regional',\n  GOVERNMENT_LOCAL: 'government-local',\n  GOVERNMENT_PUBLIC_SERVICES: 'government-public-services',\n  HEALTHCARE: 'healthcare',\n  HOSPITALITY_LEISURE: 'hospitality-leisure',\n  INFRASTRUCTURE: 'infrastructure',\n  INSURANCE: 'insurance',\n  MANUFACTURING: 'manufacturing',\n  MINING: 'mining',\n  NON_PROFIT: 'non-profit',\n  PHARMACEUTICALS: 'pharmaceuticals',\n  RETAIL: 'retail',\n  TECHNOLOGY: 'technology',\n  TELECOMMUNICATIONS: 'telecommunications',\n  TRANSPORTATION: 'transportation',\n  UTILITIES: 'utilities'\n};\nexports.IndustrySectors = IndustrySectors;\nvar MalwareLabels = {\n  ADWARE: 'adware',\n  BACKDOOR: 'backdoor',\n  BOT: 'bot',\n  DDOS: 'ddos',\n  DROPPER: 'dropper',\n  EXPLOT_KIT: 'explot-kit',\n  KEYLOGGER: 'keylogger',\n  RANSOMWARE: 'ransomware',\n  REMOTE_ACCESS_TROJAN: 'remote-access-trojan',\n  RESOURCE_EXPLOITATION: 'resource-exploitation',\n  ROGUE_SECURITY_SOFTWARE: 'rogue-security-software',\n  ROOTKIT: 'rootkit',\n  SCREEN_CAPTURE: 'screen-capture',\n  SPYWARE: 'spyware',\n  TROJAN: 'trojan',\n  VIRUS: 'virus',\n  WORM: 'worm'\n};\nexports.MalwareLabels = MalwareLabels;\nvar ReportLabels = {\n  THREAT_REPORT: 'threat-report',\n  ATTACK_PATTERN: 'attack-pattern',\n  CAMPAIGN: 'campaign',\n  IDENTITY: 'identity',\n  INDICATOR: 'indicator',\n  INTRUSION_SET: 'intrusion-set',\n  MALWARE: 'malware',\n  THREAT_ACTOR: 'threat-actor',\n  TOOL: 'tool',\n  VULNERABILITY: 'vulnerability'\n};\nexports.ReportLabels = ReportLabels;\nvar ThreatActorLabels = {\n  ACTIVIST: 'activist',\n  COMPETITOR: 'competitor',\n  CRIME_SYNDICATE: 'crime-syndicate',\n  CRIMINAL: 'criminal',\n  HACKER: 'hacker',\n  INSIDER_ACCIDENTAL: 'insider-accidental',\n  INSIDER_DISGRUNTLED: 'insider-disgruntled',\n  NATION_STATE: 'nation-state',\n  SENSATIONALIST: 'sensationalist',\n  SPY: 'spy',\n  TERRORIST: 'terrorist'\n};\nexports.ThreatActorLabels = ThreatActorLabels;\nvar ThreatActorRoles = {\n  AGENT: 'agent',\n  DIRECTOR: 'director',\n  INDEPENDENT: 'independent',\n  INFRASTRUCTURE_ARCHITECT: 'infrastructure-architect',\n  INFRASTRUCTURE_OPERATOR: 'infrastructure-operator',\n  MALWARE_AUTHOR: 'malware-author',\n  SPONSOR: 'sponsor'\n};\nexports.ThreatActorRoles = ThreatActorRoles;\nvar ThreatActorSophistications = {\n  NONE: 'none',\n  MINIMAL: 'minimal',\n  INTERMEDIATE: 'intermediate',\n  ADVANCED: 'advanced',\n  EXPERT: 'expert',\n  INNOVATOR: 'innovator',\n  STRATEGIC: 'strategic'\n};\nexports.ThreatActorSophistications = ThreatActorSophistications;\nvar ToolLabels = {\n  DENIAL_OF_SERVICE: 'denial-of-service',\n  EXPLOITATION: 'exploitation',\n  INFORMATION_GATHERING: 'information-gathering',\n  NETWORK_CAPTURE: 'network-capture',\n  CREDENTIAL_EXPLOITATION: 'credential-exploitation',\n  REMOTE_ACCESS: 'remote-access',\n  VULNERABILITY_SCANNING: 'vulnerability-scanning'\n};\nexports.ToolLabels = ToolLabels;\nvar RelationshipTypes = {\n  TARGETS: 'targets',\n  USES: 'uses',\n  ATTRIBUTED_TO: 'attributed-to',\n  MITIGATES: 'mitigates',\n  INDICATES: 'indicates',\n  VARIANT_OF: 'variant-of',\n  IMPERSONATES: 'impersonates'\n};\nexports.RelationshipTypes = RelationshipTypes;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "vocabulary.js"
      ],
      "names": [
        "AttackMotivations",
        "ACCIDENTAL",
        "COERCION",
        "DOMINANCE",
        "IDEOLOGY",
        "NOTORIETY",
        "ORGANIZATIONAL_GAIN",
        "PERSONAL_GAIN",
        "PERSONAL_SATISFACTION",
        "REVENGE",
        "UNPREDICTABLE",
        "AttackResourceLevels",
        "INDIVIDUAL",
        "CLUB",
        "CONTEST",
        "TEAM",
        "ORGANIZATION",
        "GOVERNMENT",
        "HashingAlgorithms",
        "MD5",
        "MD6",
        "RIPEMD_160",
        "SHA_1",
        "SHA_224",
        "SHA_256",
        "SHA_384",
        "SHA_512",
        "SHA3_224",
        "SHA3_256",
        "SHA3_384",
        "SHA3_512",
        "SSDEEP",
        "WHIRLPOOL",
        "IdentityClasses",
        "GROUP",
        "CLASS",
        "UNKNOWN",
        "IndicatorLabels",
        "ANOMALOUS_ACTIVITY",
        "ANONYMIZATION",
        "BENIGN",
        "COMPROMISED",
        "MALICIOUS_ACTIVITY",
        "ATTRIBUTION",
        "IndustrySectors",
        "AGRICULTURE",
        "AEROSPACE",
        "AUTOMOTIVE",
        "COMMUNICATIONS",
        "CONSTRUCTION",
        "DEFENCE",
        "EDUCATION",
        "ENERGY",
        "ENTERTAINMENT",
        "FINANCIAL_SERVICES",
        "GOVERNMENT_NATIONAL",
        "GOVERNMENT_REGIONAL",
        "GOVERNMENT_LOCAL",
        "GOVERNMENT_PUBLIC_SERVICES",
        "HEALTHCARE",
        "HOSPITALITY_LEISURE",
        "INFRASTRUCTURE",
        "INSURANCE",
        "MANUFACTURING",
        "MINING",
        "NON_PROFIT",
        "PHARMACEUTICALS",
        "RETAIL",
        "TECHNOLOGY",
        "TELECOMMUNICATIONS",
        "TRANSPORTATION",
        "UTILITIES",
        "MalwareLabels",
        "ADWARE",
        "BACKDOOR",
        "BOT",
        "DDOS",
        "DROPPER",
        "EXPLOT_KIT",
        "KEYLOGGER",
        "RANSOMWARE",
        "REMOTE_ACCESS_TROJAN",
        "RESOURCE_EXPLOITATION",
        "ROGUE_SECURITY_SOFTWARE",
        "ROOTKIT",
        "SCREEN_CAPTURE",
        "SPYWARE",
        "TROJAN",
        "VIRUS",
        "WORM",
        "ReportLabels",
        "THREAT_REPORT",
        "ATTACK_PATTERN",
        "CAMPAIGN",
        "IDENTITY",
        "INDICATOR",
        "INTRUSION_SET",
        "MALWARE",
        "THREAT_ACTOR",
        "TOOL",
        "VULNERABILITY",
        "ThreatActorLabels",
        "ACTIVIST",
        "COMPETITOR",
        "CRIME_SYNDICATE",
        "CRIMINAL",
        "HACKER",
        "INSIDER_ACCIDENTAL",
        "INSIDER_DISGRUNTLED",
        "NATION_STATE",
        "SENSATIONALIST",
        "SPY",
        "TERRORIST",
        "ThreatActorRoles",
        "AGENT",
        "DIRECTOR",
        "INDEPENDENT",
        "INFRASTRUCTURE_ARCHITECT",
        "INFRASTRUCTURE_OPERATOR",
        "MALWARE_AUTHOR",
        "SPONSOR",
        "ThreatActorSophistications",
        "NONE",
        "MINIMAL",
        "INTERMEDIATE",
        "ADVANCED",
        "EXPERT",
        "INNOVATOR",
        "STRATEGIC",
        "ToolLabels",
        "DENIAL_OF_SERVICE",
        "EXPLOITATION",
        "INFORMATION_GATHERING",
        "NETWORK_CAPTURE",
        "CREDENTIAL_EXPLOITATION",
        "REMOTE_ACCESS",
        "VULNERABILITY_SCANNING",
        "RelationshipTypes",
        "TARGETS",
        "USES",
        "ATTRIBUTED_TO",
        "MITIGATES",
        "INDICATES",
        "VARIANT_OF",
        "IMPERSONATES"
      ],
      "mappings": ";;;;;;AAAO,IAAMA,iBAAiB,GAAG;AAC7BC,EAAAA,UAAU,EAAE,YADiB;AAE7BC,EAAAA,QAAQ,EAAE,UAFmB;AAG7BC,EAAAA,SAAS,EAAE,WAHkB;AAI7BC,EAAAA,QAAQ,EAAE,UAJmB;AAK7BC,EAAAA,SAAS,EAAE,WALkB;AAM7BC,EAAAA,mBAAmB,EAAE,qBANQ;AAO7BC,EAAAA,aAAa,EAAE,eAPc;AAQ7BC,EAAAA,qBAAqB,EAAE,uBARM;AAS7BC,EAAAA,OAAO,EAAE,SAToB;AAU7BC,EAAAA,aAAa,EAAE;AAVc,CAA1B;;AAaA,IAAMC,oBAAoB,GAAG;AAChCC,EAAAA,UAAU,EAAE,YADoB;AAEhCC,EAAAA,IAAI,EAAE,MAF0B;AAGhCC,EAAAA,OAAO,EAAE,SAHuB;AAIhCC,EAAAA,IAAI,EAAE,MAJ0B;AAKhCC,EAAAA,YAAY,EAAE,cALkB;AAMhCC,EAAAA,UAAU,EAAE;AANoB,CAA7B;;AASA,IAAMC,iBAAiB,GAAG;AAC7BC,EAAAA,GAAG,EAAE,KADwB;AAE7BC,EAAAA,GAAG,EAAE,KAFwB;AAG7BC,EAAAA,UAAU,EAAE,YAHiB;AAI7BC,EAAAA,KAAK,EAAE,OAJsB;AAK7BC,EAAAA,OAAO,EAAE,SALoB;AAM7BC,EAAAA,OAAO,EAAE,SANoB;AAO7BC,EAAAA,OAAO,EAAE,SAPoB;AAQ7BC,EAAAA,OAAO,EAAE,SARoB;AAS7BC,EAAAA,QAAQ,EAAE,UATmB;AAU7BC,EAAAA,QAAQ,EAAE,UAVmB;AAW7BC,EAAAA,QAAQ,EAAE,UAXmB;AAY7BC,EAAAA,QAAQ,EAAE,UAZmB;AAa7BC,EAAAA,MAAM,EAAE,QAbqB;AAc7BC,EAAAA,SAAS,EAAE;AAdkB,CAA1B;;AAiBA,IAAMC,eAAe,GAAG;AAC3BrB,EAAAA,UAAU,EAAE,YADe;AAE3BsB,EAAAA,KAAK,EAAE,OAFoB;AAG3BlB,EAAAA,YAAY,EAAE,cAHa;AAI3BmB,EAAAA,KAAK,EAAE,OAJoB;AAK3BC,EAAAA,OAAO,EAAE;AALkB,CAAxB;;AAQA,IAAMC,eAAe,GAAG;AAC3BC,EAAAA,kBAAkB,EAAE,oBADO;AAE3BC,EAAAA,aAAa,EAAE,eAFY;AAG3BC,EAAAA,MAAM,EAAE,QAHmB;AAI3BC,EAAAA,WAAW,EAAE,aAJc;AAK3BC,EAAAA,kBAAkB,EAAE,oBALO;AAM3BC,EAAAA,WAAW,EAAE;AANc,CAAxB;;AASA,IAAMC,eAAe,GAAG;AAC3BC,EAAAA,WAAW,EAAE,aADc;AAE3BC,EAAAA,SAAS,EAAE,WAFgB;AAG3BC,EAAAA,UAAU,EAAE,YAHe;AAI3BC,EAAAA,cAAc,EAAE,gBAJW;AAK3BC,EAAAA,YAAY,EAAE,cALa;AAM3BC,EAAAA,OAAO,EAAE,SANkB;AAO3BC,EAAAA,SAAS,EAAE,WAPgB;AAQ3BC,EAAAA,MAAM,EAAE,QARmB;AAS3BC,EAAAA,aAAa,EAAE,eATY;AAU3BC,EAAAA,kBAAkB,EAAE,oBAVO;AAW3BC,EAAAA,mBAAmB,EAAE,qBAXM;AAY3BC,EAAAA,mBAAmB,EAAE,qBAZM;AAa3BC,EAAAA,gBAAgB,EAAE,kBAbS;AAc3BC,EAAAA,0BAA0B,EAAE,4BAdD;AAe3BC,EAAAA,UAAU,EAAE,YAfe;AAgB3BC,EAAAA,mBAAmB,EAAE,qBAhBM;AAiB3BC,EAAAA,cAAc,EAAE,gBAjBW;AAkB3BC,EAAAA,SAAS,EAAE,WAlBgB;AAmB3BC,EAAAA,aAAa,EAAE,eAnBY;AAoB3BC,EAAAA,MAAM,EAAE,QApBmB;AAqB3BC,EAAAA,UAAU,EAAE,YArBe;AAsB3BC,EAAAA,eAAe,EAAE,iBAtBU;AAuB3BC,EAAAA,MAAM,EAAE,QAvBmB;AAwB3BC,EAAAA,UAAU,EAAE,YAxBe;AAyB3BC,EAAAA,kBAAkB,EAAE,oBAzBO;AA0B3BC,EAAAA,cAAc,EAAE,gBA1BW;AA2B3BC,EAAAA,SAAS,EAAE;AA3BgB,CAAxB;;AA8BA,IAAMC,aAAa,GAAG;AACzBC,EAAAA,MAAM,EAAE,QADiB;AAEzBC,EAAAA,QAAQ,EAAE,UAFe;AAGzBC,EAAAA,GAAG,EAAE,KAHoB;AAIzBC,EAAAA,IAAI,EAAE,MAJmB;AAKzBC,EAAAA,OAAO,EAAE,SALgB;AAMzBC,EAAAA,UAAU,EAAE,YANa;AAOzBC,EAAAA,SAAS,EAAE,WAPc;AAQzBC,EAAAA,UAAU,EAAE,YARa;AASzBC,EAAAA,oBAAoB,EAAE,sBATG;AAUzBC,EAAAA,qBAAqB,EAAE,uBAVE;AAWzBC,EAAAA,uBAAuB,EAAE,yBAXA;AAYzBC,EAAAA,OAAO,EAAE,SAZgB;AAazBC,EAAAA,cAAc,EAAE,gBAbS;AAczBC,EAAAA,OAAO,EAAE,SAdgB;AAezBC,EAAAA,MAAM,EAAE,QAfiB;AAgBzBC,EAAAA,KAAK,EAAE,OAhBkB;AAiBzBC,EAAAA,IAAI,EAAE;AAjBmB,CAAtB;;AAoBA,IAAMC,YAAY,GAAG;AACxBC,EAAAA,aAAa,EAAE,eADS;AAExBC,EAAAA,cAAc,EAAE,gBAFQ;AAGxBC,EAAAA,QAAQ,EAAE,UAHc;AAIxBC,EAAAA,QAAQ,EAAE,UAJc;AAKxBC,EAAAA,SAAS,EAAE,WALa;AAMxBC,EAAAA,aAAa,EAAE,eANS;AAOxBC,EAAAA,OAAO,EAAE,SAPe;AAQxBC,EAAAA,YAAY,EAAE,cARU;AASxBC,EAAAA,IAAI,EAAE,MATkB;AAUxBC,EAAAA,aAAa,EAAE;AAVS,CAArB;;AAaA,IAAMC,iBAAiB,GAAG;AAC7BC,EAAAA,QAAQ,EAAE,UADmB;AAE7BC,EAAAA,UAAU,EAAE,YAFiB;AAG7BC,EAAAA,eAAe,EAAE,iBAHY;AAI7BC,EAAAA,QAAQ,EAAE,UAJmB;AAK7BC,EAAAA,MAAM,EAAE,QALqB;AAM7BC,EAAAA,kBAAkB,EAAE,oBANS;AAO7BC,EAAAA,mBAAmB,EAAE,qBAPQ;AAQ7BC,EAAAA,YAAY,EAAE,cARe;AAS7BC,EAAAA,cAAc,EAAE,gBATa;AAU7BC,EAAAA,GAAG,EAAE,KAVwB;AAW7BC,EAAAA,SAAS,EAAE;AAXkB,CAA1B;;AAcA,IAAMC,gBAAgB,GAAG;AAC5BC,EAAAA,KAAK,EAAE,OADqB;AAE5BC,EAAAA,QAAQ,EAAE,UAFkB;AAG5BC,EAAAA,WAAW,EAAE,aAHe;AAI5BC,EAAAA,wBAAwB,EAAE,0BAJE;AAK5BC,EAAAA,uBAAuB,EAAE,yBALG;AAM5BC,EAAAA,cAAc,EAAE,gBANY;AAO5BC,EAAAA,OAAO,EAAE;AAPmB,CAAzB;;AAUA,IAAMC,0BAA0B,GAAG;AACtCC,EAAAA,IAAI,EAAE,MADgC;AAEtCC,EAAAA,OAAO,EAAE,SAF6B;AAGtCC,EAAAA,YAAY,EAAE,cAHwB;AAItCC,EAAAA,QAAQ,EAAE,UAJ4B;AAKtCC,EAAAA,MAAM,EAAE,QAL8B;AAMtCC,EAAAA,SAAS,EAAE,WAN2B;AAOtCC,EAAAA,SAAS,EAAE;AAP2B,CAAnC;;AAUA,IAAMC,UAAU,GAAG;AACtBC,EAAAA,iBAAiB,EAAE,mBADG;AAEtBC,EAAAA,YAAY,EAAE,cAFQ;AAGtBC,EAAAA,qBAAqB,EAAE,uBAHD;AAItBC,EAAAA,eAAe,EAAE,iBAJK;AAKtBC,EAAAA,uBAAuB,EAAE,yBALH;AAMtBC,EAAAA,aAAa,EAAE,eANO;AAOtBC,EAAAA,sBAAsB,EAAE;AAPF,CAAnB;;AAUA,IAAMC,iBAAiB,GAAG;AAC7BC,EAAAA,OAAO,EAAE,SADoB;AAE7BC,EAAAA,IAAI,EAAE,MAFuB;AAG7BC,EAAAA,aAAa,EAAE,eAHc;AAI7BC,EAAAA,SAAS,EAAE,WAJkB;AAK7BC,EAAAA,SAAS,EAAE,WALkB;AAM7BC,EAAAA,UAAU,EAAE,YANiB;AAO7BC,EAAAA,YAAY,EAAE;AAPe,CAA1B",
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\constants",
      "sourcesContent": [
        "export const AttackMotivations = {\r\n    ACCIDENTAL: 'accidental',\r\n    COERCION: 'coercion',\r\n    DOMINANCE: 'dominance',\r\n    IDEOLOGY: 'ideology',\r\n    NOTORIETY: 'notoriety',\r\n    ORGANIZATIONAL_GAIN: 'organizational-gain',\r\n    PERSONAL_GAIN: 'personal-gain',\r\n    PERSONAL_SATISFACTION: 'personal-satisfaction',\r\n    REVENGE: 'revenge',\r\n    UNPREDICTABLE: 'unpredictable'\r\n}\r\n\r\nexport const AttackResourceLevels = {\r\n    INDIVIDUAL: 'individual',\r\n    CLUB: 'club',\r\n    CONTEST: 'contest',\r\n    TEAM: 'team',\r\n    ORGANIZATION: 'organization',\r\n    GOVERNMENT: 'government'\r\n}\r\n\r\nexport const HashingAlgorithms = {\r\n    MD5: 'MD5',\r\n    MD6: 'MD6',\r\n    RIPEMD_160: 'RIPEMD-160',\r\n    SHA_1: 'SHA-1',\r\n    SHA_224: 'SHA-224',\r\n    SHA_256: 'SHA-256',\r\n    SHA_384: 'SHA-384',\r\n    SHA_512: 'SHA-512',\r\n    SHA3_224: 'SHA3-224',\r\n    SHA3_256: 'SHA3-256',\r\n    SHA3_384: 'SHA3-384',\r\n    SHA3_512: 'SHA3-512',\r\n    SSDEEP: 'ssdeep',\r\n    WHIRLPOOL: 'WHIRLPOOL'\r\n}\r\n\r\nexport const IdentityClasses = {\r\n    INDIVIDUAL: 'individual',\r\n    GROUP: 'group',\r\n    ORGANIZATION: 'organization',\r\n    CLASS: 'class',\r\n    UNKNOWN: 'unknown'\r\n}\r\n\r\nexport const IndicatorLabels = {\r\n    ANOMALOUS_ACTIVITY: 'anomalous-activity',\r\n    ANONYMIZATION: 'anonymization',\r\n    BENIGN: 'benign',\r\n    COMPROMISED: 'compromised',\r\n    MALICIOUS_ACTIVITY: 'malicious-activity',\r\n    ATTRIBUTION: 'attribution'\r\n}\r\n\r\nexport const IndustrySectors = {\r\n    AGRICULTURE: 'agriculture',\r\n    AEROSPACE: 'aerospace',\r\n    AUTOMOTIVE: 'automotive',\r\n    COMMUNICATIONS: 'communications',\r\n    CONSTRUCTION: 'construction',\r\n    DEFENCE: 'defence',\r\n    EDUCATION: 'education',\r\n    ENERGY: 'energy',\r\n    ENTERTAINMENT: 'entertainment',\r\n    FINANCIAL_SERVICES: 'financial-services',\r\n    GOVERNMENT_NATIONAL: 'government-national',\r\n    GOVERNMENT_REGIONAL: 'government-regional',\r\n    GOVERNMENT_LOCAL: 'government-local',\r\n    GOVERNMENT_PUBLIC_SERVICES: 'government-public-services',\r\n    HEALTHCARE: 'healthcare',\r\n    HOSPITALITY_LEISURE: 'hospitality-leisure',\r\n    INFRASTRUCTURE: 'infrastructure',\r\n    INSURANCE: 'insurance',\r\n    MANUFACTURING: 'manufacturing',\r\n    MINING: 'mining',\r\n    NON_PROFIT: 'non-profit',\r\n    PHARMACEUTICALS: 'pharmaceuticals',\r\n    RETAIL: 'retail',\r\n    TECHNOLOGY: 'technology',\r\n    TELECOMMUNICATIONS: 'telecommunications',\r\n    TRANSPORTATION: 'transportation',\r\n    UTILITIES: 'utilities'\r\n}\r\n\r\nexport const MalwareLabels = {\r\n    ADWARE: 'adware',\r\n    BACKDOOR: 'backdoor',\r\n    BOT: 'bot',\r\n    DDOS: 'ddos',\r\n    DROPPER: 'dropper',\r\n    EXPLOT_KIT: 'explot-kit',\r\n    KEYLOGGER: 'keylogger',\r\n    RANSOMWARE: 'ransomware',\r\n    REMOTE_ACCESS_TROJAN: 'remote-access-trojan',\r\n    RESOURCE_EXPLOITATION: 'resource-exploitation',\r\n    ROGUE_SECURITY_SOFTWARE: 'rogue-security-software',\r\n    ROOTKIT: 'rootkit',\r\n    SCREEN_CAPTURE: 'screen-capture',\r\n    SPYWARE: 'spyware',\r\n    TROJAN: 'trojan',\r\n    VIRUS: 'virus',\r\n    WORM: 'worm'\r\n}\r\n\r\nexport const ReportLabels = {\r\n    THREAT_REPORT: 'threat-report',\r\n    ATTACK_PATTERN: 'attack-pattern',\r\n    CAMPAIGN: 'campaign',\r\n    IDENTITY: 'identity',\r\n    INDICATOR: 'indicator',\r\n    INTRUSION_SET: 'intrusion-set',\r\n    MALWARE: 'malware',\r\n    THREAT_ACTOR: 'threat-actor',\r\n    TOOL: 'tool',\r\n    VULNERABILITY: 'vulnerability'\r\n}\r\n\r\nexport const ThreatActorLabels = {\r\n    ACTIVIST: 'activist',\r\n    COMPETITOR: 'competitor',\r\n    CRIME_SYNDICATE: 'crime-syndicate',\r\n    CRIMINAL: 'criminal',\r\n    HACKER: 'hacker',\r\n    INSIDER_ACCIDENTAL: 'insider-accidental',\r\n    INSIDER_DISGRUNTLED: 'insider-disgruntled',\r\n    NATION_STATE: 'nation-state',\r\n    SENSATIONALIST: 'sensationalist',\r\n    SPY: 'spy',\r\n    TERRORIST: 'terrorist'\r\n}\r\n\r\nexport const ThreatActorRoles = {\r\n    AGENT: 'agent',\r\n    DIRECTOR: 'director',\r\n    INDEPENDENT: 'independent',\r\n    INFRASTRUCTURE_ARCHITECT: 'infrastructure-architect',\r\n    INFRASTRUCTURE_OPERATOR: 'infrastructure-operator',\r\n    MALWARE_AUTHOR: 'malware-author',\r\n    SPONSOR: 'sponsor'\r\n}\r\n\r\nexport const ThreatActorSophistications = {\r\n    NONE: 'none',\r\n    MINIMAL: 'minimal',\r\n    INTERMEDIATE: 'intermediate',\r\n    ADVANCED: 'advanced',\r\n    EXPERT: 'expert',\r\n    INNOVATOR: 'innovator',\r\n    STRATEGIC: 'strategic'\r\n}\r\n\r\nexport const ToolLabels = {\r\n    DENIAL_OF_SERVICE: 'denial-of-service',\r\n    EXPLOITATION: 'exploitation',\r\n    INFORMATION_GATHERING: 'information-gathering',\r\n    NETWORK_CAPTURE: 'network-capture',\r\n    CREDENTIAL_EXPLOITATION: 'credential-exploitation',\r\n    REMOTE_ACCESS: 'remote-access',\r\n    VULNERABILITY_SCANNING: 'vulnerability-scanning'\r\n}\r\n\r\nexport const RelationshipTypes = {\r\n    TARGETS: 'targets',\r\n    USES: 'uses',\r\n    ATTRIBUTED_TO: 'attributed-to',\r\n    MITIGATES: 'mitigates',\r\n    INDICATES: 'indicates',\r\n    VARIANT_OF: 'variant-of',\r\n    IMPERSONATES: 'impersonates'\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1565901732833
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\examples\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"filename\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\examples\\\\identifiying-a-threatq-actor-profile.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\examples",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\examples\\identifiying-a-threatq-actor-profile.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\examples\\identifiying-a-threatq-actor-profile.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\examples\\identifiying-a-threatq-actor-profile.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\examples",
        "sourceFileName": "identifiying-a-threatq-actor-profile.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _index = _interopRequireDefault(require(\"../index\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nconsole.log(_index[\"default\"]);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImlkZW50aWZpeWluZy1hLXRocmVhdHEtYWN0b3ItcHJvZmlsZS5qcyJdLCJuYW1lcyI6WyJjb25zb2xlIiwibG9nIiwidGVzdCJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7OztBQUNBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsaUJBQVoiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxaYWNoIFNoYW1lc1xcRG9jdW1lbnRzXFxEZXZlbG9wbWVudFxcanMtMi1zdGl4XFxleGFtcGxlcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB0ZXN0IGZyb20gJy4uL2luZGV4J1xyXG5jb25zb2xlLmxvZyh0ZXN0KSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "identifiying-a-threatq-actor-profile.js"
      ],
      "names": [
        "console",
        "log",
        "test"
      ],
      "mappings": ";;AAAA;;;;AACAA,OAAO,CAACC,GAAR,CAAYC,iBAAZ",
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\examples",
      "sourcesContent": [
        "import test from '../index'\r\nconsole.log(test)"
      ]
    },
    "sourceType": "script",
    "mtime": 1565902475995
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\lib\\\\definitions\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"filename\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\lib\\\\definitions\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\definitions",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\definitions\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\definitions\\index.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\definitions\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\definitions",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar Bundle = _interopRequireWildcard(require(\"./bundle\"));\n\nvar GranularMarking = _interopRequireWildcard(require(\"./granularMarking\"));\n\nvar Marking = _interopRequireWildcard(require(\"./marking\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj[\"default\"] = obj; return newObj; } }\n\nvar _default = {\n  Bundle: Bundle,\n  GranularMarking: GranularMarking,\n  Marking: Marking\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIkJ1bmRsZSIsIkdyYW51bGFyTWFya2luZyIsIk1hcmtpbmciXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7OztlQUVlO0FBQ1hBLEVBQUFBLE1BQU0sRUFBTkEsTUFEVztBQUVYQyxFQUFBQSxlQUFlLEVBQWZBLGVBRlc7QUFHWEMsRUFBQUEsT0FBTyxFQUFQQTtBQUhXLEMiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxaYWNoIFNoYW1lc1xcRG9jdW1lbnRzXFxEZXZlbG9wbWVudFxcanMtMi1zdGl4XFxsaWJcXGRlZmluaXRpb25zIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgQnVuZGxlIGZyb20gJy4vYnVuZGxlJ1xyXG5pbXBvcnQgKiBhcyBHcmFudWxhck1hcmtpbmcgZnJvbSAnLi9ncmFudWxhck1hcmtpbmcnXHJcbmltcG9ydCAqIGFzIE1hcmtpbmcgZnJvbSAnLi9tYXJraW5nJ1xyXG5cclxuZXhwb3J0IGRlZmF1bHQge1xyXG4gICAgQnVuZGxlLFxyXG4gICAgR3JhbnVsYXJNYXJraW5nLFxyXG4gICAgTWFya2luZ1xyXG59Il19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "Bundle",
        "GranularMarking",
        "Marking"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;;;eAEe;AACXA,EAAAA,MAAM,EAANA,MADW;AAEXC,EAAAA,eAAe,EAAfA,eAFW;AAGXC,EAAAA,OAAO,EAAPA;AAHW,C",
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\definitions",
      "sourcesContent": [
        "import * as Bundle from './bundle'\r\nimport * as GranularMarking from './granularMarking'\r\nimport * as Marking from './marking'\r\n\r\nexport default {\r\n    Bundle,\r\n    GranularMarking,\r\n    Marking\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1565902572207
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\examples\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"filename\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\examples\\\\identifiying-a-threatq-actor-profile.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"plugins\":[{\"key\":\"syntax-class-properties\",\"visitor\":{},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\examples",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\examples\\identifiying-a-threatq-actor-profile.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "syntax-class-properties",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\examples\\identifiying-a-threatq-actor-profile.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\examples\\identifiying-a-threatq-actor-profile.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\examples",
        "sourceFileName": "identifiying-a-threatq-actor-profile.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _index = _interopRequireDefault(require(\"../index\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nconsole.log(_index[\"default\"]);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImlkZW50aWZpeWluZy1hLXRocmVhdHEtYWN0b3ItcHJvZmlsZS5qcyJdLCJuYW1lcyI6WyJjb25zb2xlIiwibG9nIiwidGVzdCJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7OztBQUNBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsaUJBQVoiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxaYWNoIFNoYW1lc1xcRG9jdW1lbnRzXFxEZXZlbG9wbWVudFxcanMtMi1zdGl4XFxleGFtcGxlcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB0ZXN0IGZyb20gJy4uL2luZGV4J1xyXG5jb25zb2xlLmxvZyh0ZXN0KSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "identifiying-a-threatq-actor-profile.js"
      ],
      "names": [
        "console",
        "log",
        "test"
      ],
      "mappings": ";;AAAA;;;;AACAA,OAAO,CAACC,GAAR,CAAYC,iBAAZ",
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\examples",
      "sourcesContent": [
        "import test from '../index'\r\nconsole.log(test)"
      ]
    },
    "sourceType": "script",
    "mtime": 1565902475995
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"filename\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"plugins\":[{\"key\":\"syntax-class-properties\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "syntax-class-properties",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\index.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar Constants = _interopRequireWildcard(require(\"./lib/constants\"));\n\nvar Definitions = _interopRequireWildcard(require(\"./lib/definitions\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj[\"default\"] = obj; return newObj; } }\n\n// import * as Objects from './lib/objects'\nvar _default = {\n  Constants: Constants,\n  // Objects,\n  Definitions: Definitions\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIkNvbnN0YW50cyIsIkRlZmluaXRpb25zIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBRUE7Ozs7QUFEQTtlQUdlO0FBQ1hBLEVBQUFBLFNBQVMsRUFBVEEsU0FEVztBQUVYO0FBQ0FDLEVBQUFBLFdBQVcsRUFBWEE7QUFIVyxDIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcWmFjaCBTaGFtZXNcXERvY3VtZW50c1xcRGV2ZWxvcG1lbnRcXGpzLTItc3RpeCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIENvbnN0YW50cyBmcm9tICcuL2xpYi9jb25zdGFudHMnXHJcbi8vIGltcG9ydCAqIGFzIE9iamVjdHMgZnJvbSAnLi9saWIvb2JqZWN0cydcclxuaW1wb3J0ICogYXMgRGVmaW5pdGlvbnMgZnJvbSAnLi9saWIvZGVmaW5pdGlvbnMnXHJcblxyXG5leHBvcnQgZGVmYXVsdCB7XHJcbiAgICBDb25zdGFudHMsXHJcbiAgICAvLyBPYmplY3RzLFxyXG4gICAgRGVmaW5pdGlvbnNcclxufSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "Constants",
        "Definitions"
      ],
      "mappings": ";;;;;;;AAAA;;AAEA;;;;AADA;eAGe;AACXA,EAAAA,SAAS,EAATA,SADW;AAEX;AACAC,EAAAA,WAAW,EAAXA;AAHW,C",
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "sourcesContent": [
        "import * as Constants from './lib/constants'\r\n// import * as Objects from './lib/objects'\r\nimport * as Definitions from './lib/definitions'\r\n\r\nexport default {\r\n    Constants,\r\n    // Objects,\r\n    Definitions\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1565902584404
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\lib\\\\constants\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"filename\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\lib\\\\constants\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"plugins\":[{\"key\":\"syntax-class-properties\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\constants",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\constants\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "syntax-class-properties",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\constants\\index.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\constants\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\constants",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar General = _interopRequireWildcard(require(\"./general\"));\n\nvar Vocabulary = _interopRequireWildcard(require(\"./vocabulary\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj[\"default\"] = obj; return newObj; } }\n\nvar _default = {\n  General: General,\n  Vocabulary: Vocabulary\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIkdlbmVyYWwiLCJWb2NhYnVsYXJ5Il0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7Ozs7ZUFFZTtBQUNYQSxFQUFBQSxPQUFPLEVBQVBBLE9BRFc7QUFFWEMsRUFBQUEsVUFBVSxFQUFWQTtBQUZXLEMiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxaYWNoIFNoYW1lc1xcRG9jdW1lbnRzXFxEZXZlbG9wbWVudFxcanMtMi1zdGl4XFxsaWJcXGNvbnN0YW50cyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIEdlbmVyYWwgZnJvbSAnLi9nZW5lcmFsJ1xyXG5pbXBvcnQgKiBhcyBWb2NhYnVsYXJ5IGZyb20gJy4vdm9jYWJ1bGFyeSdcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHtcclxuICAgIEdlbmVyYWwsXHJcbiAgICBWb2NhYnVsYXJ5XHJcbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "General",
        "Vocabulary"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;eAEe;AACXA,EAAAA,OAAO,EAAPA,OADW;AAEXC,EAAAA,UAAU,EAAVA;AAFW,C",
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\constants",
      "sourcesContent": [
        "import * as General from './general'\r\nimport * as Vocabulary from './vocabulary'\r\n\r\nexport default {\r\n    General,\r\n    Vocabulary\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1565902525245
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\lib\\\\constants\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"filename\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\lib\\\\constants\\\\general.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"plugins\":[{\"key\":\"syntax-class-properties\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\constants",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\constants\\general.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "syntax-class-properties",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\constants\\general.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\constants\\general.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\constants",
        "sourceFileName": "general.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TLPs = exports.DefinitionTypes = void 0;\nvar DefinitionTypes = {\n  TLP: 'tlp',\n  STATEMENT: 'statement'\n};\nexports.DefinitionTypes = DefinitionTypes;\nvar TLPs = {\n  WHITE: 'white',\n  GREEN: 'green',\n  AMBER: 'amber',\n  RED: 'red'\n};\nexports.TLPs = TLPs;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdlbmVyYWwuanMiXSwibmFtZXMiOlsiRGVmaW5pdGlvblR5cGVzIiwiVExQIiwiU1RBVEVNRU5UIiwiVExQcyIsIldISVRFIiwiR1JFRU4iLCJBTUJFUiIsIlJFRCJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQU8sSUFBTUEsZUFBZSxHQUFHO0FBQzNCQyxFQUFBQSxHQUFHLEVBQUUsS0FEc0I7QUFFM0JDLEVBQUFBLFNBQVMsRUFBRTtBQUZnQixDQUF4Qjs7QUFLQSxJQUFNQyxJQUFJLEdBQUc7QUFDaEJDLEVBQUFBLEtBQUssRUFBRSxPQURTO0FBRWhCQyxFQUFBQSxLQUFLLEVBQUUsT0FGUztBQUdoQkMsRUFBQUEsS0FBSyxFQUFFLE9BSFM7QUFJaEJDLEVBQUFBLEdBQUcsRUFBRTtBQUpXLENBQWIiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxaYWNoIFNoYW1lc1xcRG9jdW1lbnRzXFxEZXZlbG9wbWVudFxcanMtMi1zdGl4XFxsaWJcXGNvbnN0YW50cyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBEZWZpbml0aW9uVHlwZXMgPSB7XHJcbiAgICBUTFA6ICd0bHAnLFxyXG4gICAgU1RBVEVNRU5UOiAnc3RhdGVtZW50J1xyXG59XHJcblxyXG5leHBvcnQgY29uc3QgVExQcyA9IHtcclxuICAgIFdISVRFOiAnd2hpdGUnLFxyXG4gICAgR1JFRU46ICdncmVlbicsXHJcbiAgICBBTUJFUjogJ2FtYmVyJyxcclxuICAgIFJFRDogJ3JlZCdcclxufSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "general.js"
      ],
      "names": [
        "DefinitionTypes",
        "TLP",
        "STATEMENT",
        "TLPs",
        "WHITE",
        "GREEN",
        "AMBER",
        "RED"
      ],
      "mappings": ";;;;;;AAAO,IAAMA,eAAe,GAAG;AAC3BC,EAAAA,GAAG,EAAE,KADsB;AAE3BC,EAAAA,SAAS,EAAE;AAFgB,CAAxB;;AAKA,IAAMC,IAAI,GAAG;AAChBC,EAAAA,KAAK,EAAE,OADS;AAEhBC,EAAAA,KAAK,EAAE,OAFS;AAGhBC,EAAAA,KAAK,EAAE,OAHS;AAIhBC,EAAAA,GAAG,EAAE;AAJW,CAAb",
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\constants",
      "sourcesContent": [
        "export const DefinitionTypes = {\r\n    TLP: 'tlp',\r\n    STATEMENT: 'statement'\r\n}\r\n\r\nexport const TLPs = {\r\n    WHITE: 'white',\r\n    GREEN: 'green',\r\n    AMBER: 'amber',\r\n    RED: 'red'\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1565901740061
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\lib\\\\constants\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"filename\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\lib\\\\constants\\\\vocabulary.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"plugins\":[{\"key\":\"syntax-class-properties\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\constants",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\constants\\vocabulary.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "syntax-class-properties",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\constants\\vocabulary.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\constants\\vocabulary.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\constants",
        "sourceFileName": "vocabulary.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RelationshipTypes = exports.ToolLabels = exports.ThreatActorSophistications = exports.ThreatActorRoles = exports.ThreatActorLabels = exports.ReportLabels = exports.MalwareLabels = exports.IndustrySectors = exports.IndicatorLabels = exports.IdentityClasses = exports.HashingAlgorithms = exports.AttackResourceLevels = exports.AttackMotivations = void 0;\nvar AttackMotivations = {\n  ACCIDENTAL: 'accidental',\n  COERCION: 'coercion',\n  DOMINANCE: 'dominance',\n  IDEOLOGY: 'ideology',\n  NOTORIETY: 'notoriety',\n  ORGANIZATIONAL_GAIN: 'organizational-gain',\n  PERSONAL_GAIN: 'personal-gain',\n  PERSONAL_SATISFACTION: 'personal-satisfaction',\n  REVENGE: 'revenge',\n  UNPREDICTABLE: 'unpredictable'\n};\nexports.AttackMotivations = AttackMotivations;\nvar AttackResourceLevels = {\n  INDIVIDUAL: 'individual',\n  CLUB: 'club',\n  CONTEST: 'contest',\n  TEAM: 'team',\n  ORGANIZATION: 'organization',\n  GOVERNMENT: 'government'\n};\nexports.AttackResourceLevels = AttackResourceLevels;\nvar HashingAlgorithms = {\n  MD5: 'MD5',\n  MD6: 'MD6',\n  RIPEMD_160: 'RIPEMD-160',\n  SHA_1: 'SHA-1',\n  SHA_224: 'SHA-224',\n  SHA_256: 'SHA-256',\n  SHA_384: 'SHA-384',\n  SHA_512: 'SHA-512',\n  SHA3_224: 'SHA3-224',\n  SHA3_256: 'SHA3-256',\n  SHA3_384: 'SHA3-384',\n  SHA3_512: 'SHA3-512',\n  SSDEEP: 'ssdeep',\n  WHIRLPOOL: 'WHIRLPOOL'\n};\nexports.HashingAlgorithms = HashingAlgorithms;\nvar IdentityClasses = {\n  INDIVIDUAL: 'individual',\n  GROUP: 'group',\n  ORGANIZATION: 'organization',\n  CLASS: 'class',\n  UNKNOWN: 'unknown'\n};\nexports.IdentityClasses = IdentityClasses;\nvar IndicatorLabels = {\n  ANOMALOUS_ACTIVITY: 'anomalous-activity',\n  ANONYMIZATION: 'anonymization',\n  BENIGN: 'benign',\n  COMPROMISED: 'compromised',\n  MALICIOUS_ACTIVITY: 'malicious-activity',\n  ATTRIBUTION: 'attribution'\n};\nexports.IndicatorLabels = IndicatorLabels;\nvar IndustrySectors = {\n  AGRICULTURE: 'agriculture',\n  AEROSPACE: 'aerospace',\n  AUTOMOTIVE: 'automotive',\n  COMMUNICATIONS: 'communications',\n  CONSTRUCTION: 'construction',\n  DEFENCE: 'defence',\n  EDUCATION: 'education',\n  ENERGY: 'energy',\n  ENTERTAINMENT: 'entertainment',\n  FINANCIAL_SERVICES: 'financial-services',\n  GOVERNMENT_NATIONAL: 'government-national',\n  GOVERNMENT_REGIONAL: 'government-regional',\n  GOVERNMENT_LOCAL: 'government-local',\n  GOVERNMENT_PUBLIC_SERVICES: 'government-public-services',\n  HEALTHCARE: 'healthcare',\n  HOSPITALITY_LEISURE: 'hospitality-leisure',\n  INFRASTRUCTURE: 'infrastructure',\n  INSURANCE: 'insurance',\n  MANUFACTURING: 'manufacturing',\n  MINING: 'mining',\n  NON_PROFIT: 'non-profit',\n  PHARMACEUTICALS: 'pharmaceuticals',\n  RETAIL: 'retail',\n  TECHNOLOGY: 'technology',\n  TELECOMMUNICATIONS: 'telecommunications',\n  TRANSPORTATION: 'transportation',\n  UTILITIES: 'utilities'\n};\nexports.IndustrySectors = IndustrySectors;\nvar MalwareLabels = {\n  ADWARE: 'adware',\n  BACKDOOR: 'backdoor',\n  BOT: 'bot',\n  DDOS: 'ddos',\n  DROPPER: 'dropper',\n  EXPLOT_KIT: 'explot-kit',\n  KEYLOGGER: 'keylogger',\n  RANSOMWARE: 'ransomware',\n  REMOTE_ACCESS_TROJAN: 'remote-access-trojan',\n  RESOURCE_EXPLOITATION: 'resource-exploitation',\n  ROGUE_SECURITY_SOFTWARE: 'rogue-security-software',\n  ROOTKIT: 'rootkit',\n  SCREEN_CAPTURE: 'screen-capture',\n  SPYWARE: 'spyware',\n  TROJAN: 'trojan',\n  VIRUS: 'virus',\n  WORM: 'worm'\n};\nexports.MalwareLabels = MalwareLabels;\nvar ReportLabels = {\n  THREAT_REPORT: 'threat-report',\n  ATTACK_PATTERN: 'attack-pattern',\n  CAMPAIGN: 'campaign',\n  IDENTITY: 'identity',\n  INDICATOR: 'indicator',\n  INTRUSION_SET: 'intrusion-set',\n  MALWARE: 'malware',\n  THREAT_ACTOR: 'threat-actor',\n  TOOL: 'tool',\n  VULNERABILITY: 'vulnerability'\n};\nexports.ReportLabels = ReportLabels;\nvar ThreatActorLabels = {\n  ACTIVIST: 'activist',\n  COMPETITOR: 'competitor',\n  CRIME_SYNDICATE: 'crime-syndicate',\n  CRIMINAL: 'criminal',\n  HACKER: 'hacker',\n  INSIDER_ACCIDENTAL: 'insider-accidental',\n  INSIDER_DISGRUNTLED: 'insider-disgruntled',\n  NATION_STATE: 'nation-state',\n  SENSATIONALIST: 'sensationalist',\n  SPY: 'spy',\n  TERRORIST: 'terrorist'\n};\nexports.ThreatActorLabels = ThreatActorLabels;\nvar ThreatActorRoles = {\n  AGENT: 'agent',\n  DIRECTOR: 'director',\n  INDEPENDENT: 'independent',\n  INFRASTRUCTURE_ARCHITECT: 'infrastructure-architect',\n  INFRASTRUCTURE_OPERATOR: 'infrastructure-operator',\n  MALWARE_AUTHOR: 'malware-author',\n  SPONSOR: 'sponsor'\n};\nexports.ThreatActorRoles = ThreatActorRoles;\nvar ThreatActorSophistications = {\n  NONE: 'none',\n  MINIMAL: 'minimal',\n  INTERMEDIATE: 'intermediate',\n  ADVANCED: 'advanced',\n  EXPERT: 'expert',\n  INNOVATOR: 'innovator',\n  STRATEGIC: 'strategic'\n};\nexports.ThreatActorSophistications = ThreatActorSophistications;\nvar ToolLabels = {\n  DENIAL_OF_SERVICE: 'denial-of-service',\n  EXPLOITATION: 'exploitation',\n  INFORMATION_GATHERING: 'information-gathering',\n  NETWORK_CAPTURE: 'network-capture',\n  CREDENTIAL_EXPLOITATION: 'credential-exploitation',\n  REMOTE_ACCESS: 'remote-access',\n  VULNERABILITY_SCANNING: 'vulnerability-scanning'\n};\nexports.ToolLabels = ToolLabels;\nvar RelationshipTypes = {\n  TARGETS: 'targets',\n  USES: 'uses',\n  ATTRIBUTED_TO: 'attributed-to',\n  MITIGATES: 'mitigates',\n  INDICATES: 'indicates',\n  VARIANT_OF: 'variant-of',\n  IMPERSONATES: 'impersonates'\n};\nexports.RelationshipTypes = RelationshipTypes;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "vocabulary.js"
      ],
      "names": [
        "AttackMotivations",
        "ACCIDENTAL",
        "COERCION",
        "DOMINANCE",
        "IDEOLOGY",
        "NOTORIETY",
        "ORGANIZATIONAL_GAIN",
        "PERSONAL_GAIN",
        "PERSONAL_SATISFACTION",
        "REVENGE",
        "UNPREDICTABLE",
        "AttackResourceLevels",
        "INDIVIDUAL",
        "CLUB",
        "CONTEST",
        "TEAM",
        "ORGANIZATION",
        "GOVERNMENT",
        "HashingAlgorithms",
        "MD5",
        "MD6",
        "RIPEMD_160",
        "SHA_1",
        "SHA_224",
        "SHA_256",
        "SHA_384",
        "SHA_512",
        "SHA3_224",
        "SHA3_256",
        "SHA3_384",
        "SHA3_512",
        "SSDEEP",
        "WHIRLPOOL",
        "IdentityClasses",
        "GROUP",
        "CLASS",
        "UNKNOWN",
        "IndicatorLabels",
        "ANOMALOUS_ACTIVITY",
        "ANONYMIZATION",
        "BENIGN",
        "COMPROMISED",
        "MALICIOUS_ACTIVITY",
        "ATTRIBUTION",
        "IndustrySectors",
        "AGRICULTURE",
        "AEROSPACE",
        "AUTOMOTIVE",
        "COMMUNICATIONS",
        "CONSTRUCTION",
        "DEFENCE",
        "EDUCATION",
        "ENERGY",
        "ENTERTAINMENT",
        "FINANCIAL_SERVICES",
        "GOVERNMENT_NATIONAL",
        "GOVERNMENT_REGIONAL",
        "GOVERNMENT_LOCAL",
        "GOVERNMENT_PUBLIC_SERVICES",
        "HEALTHCARE",
        "HOSPITALITY_LEISURE",
        "INFRASTRUCTURE",
        "INSURANCE",
        "MANUFACTURING",
        "MINING",
        "NON_PROFIT",
        "PHARMACEUTICALS",
        "RETAIL",
        "TECHNOLOGY",
        "TELECOMMUNICATIONS",
        "TRANSPORTATION",
        "UTILITIES",
        "MalwareLabels",
        "ADWARE",
        "BACKDOOR",
        "BOT",
        "DDOS",
        "DROPPER",
        "EXPLOT_KIT",
        "KEYLOGGER",
        "RANSOMWARE",
        "REMOTE_ACCESS_TROJAN",
        "RESOURCE_EXPLOITATION",
        "ROGUE_SECURITY_SOFTWARE",
        "ROOTKIT",
        "SCREEN_CAPTURE",
        "SPYWARE",
        "TROJAN",
        "VIRUS",
        "WORM",
        "ReportLabels",
        "THREAT_REPORT",
        "ATTACK_PATTERN",
        "CAMPAIGN",
        "IDENTITY",
        "INDICATOR",
        "INTRUSION_SET",
        "MALWARE",
        "THREAT_ACTOR",
        "TOOL",
        "VULNERABILITY",
        "ThreatActorLabels",
        "ACTIVIST",
        "COMPETITOR",
        "CRIME_SYNDICATE",
        "CRIMINAL",
        "HACKER",
        "INSIDER_ACCIDENTAL",
        "INSIDER_DISGRUNTLED",
        "NATION_STATE",
        "SENSATIONALIST",
        "SPY",
        "TERRORIST",
        "ThreatActorRoles",
        "AGENT",
        "DIRECTOR",
        "INDEPENDENT",
        "INFRASTRUCTURE_ARCHITECT",
        "INFRASTRUCTURE_OPERATOR",
        "MALWARE_AUTHOR",
        "SPONSOR",
        "ThreatActorSophistications",
        "NONE",
        "MINIMAL",
        "INTERMEDIATE",
        "ADVANCED",
        "EXPERT",
        "INNOVATOR",
        "STRATEGIC",
        "ToolLabels",
        "DENIAL_OF_SERVICE",
        "EXPLOITATION",
        "INFORMATION_GATHERING",
        "NETWORK_CAPTURE",
        "CREDENTIAL_EXPLOITATION",
        "REMOTE_ACCESS",
        "VULNERABILITY_SCANNING",
        "RelationshipTypes",
        "TARGETS",
        "USES",
        "ATTRIBUTED_TO",
        "MITIGATES",
        "INDICATES",
        "VARIANT_OF",
        "IMPERSONATES"
      ],
      "mappings": ";;;;;;AAAO,IAAMA,iBAAiB,GAAG;AAC7BC,EAAAA,UAAU,EAAE,YADiB;AAE7BC,EAAAA,QAAQ,EAAE,UAFmB;AAG7BC,EAAAA,SAAS,EAAE,WAHkB;AAI7BC,EAAAA,QAAQ,EAAE,UAJmB;AAK7BC,EAAAA,SAAS,EAAE,WALkB;AAM7BC,EAAAA,mBAAmB,EAAE,qBANQ;AAO7BC,EAAAA,aAAa,EAAE,eAPc;AAQ7BC,EAAAA,qBAAqB,EAAE,uBARM;AAS7BC,EAAAA,OAAO,EAAE,SAToB;AAU7BC,EAAAA,aAAa,EAAE;AAVc,CAA1B;;AAaA,IAAMC,oBAAoB,GAAG;AAChCC,EAAAA,UAAU,EAAE,YADoB;AAEhCC,EAAAA,IAAI,EAAE,MAF0B;AAGhCC,EAAAA,OAAO,EAAE,SAHuB;AAIhCC,EAAAA,IAAI,EAAE,MAJ0B;AAKhCC,EAAAA,YAAY,EAAE,cALkB;AAMhCC,EAAAA,UAAU,EAAE;AANoB,CAA7B;;AASA,IAAMC,iBAAiB,GAAG;AAC7BC,EAAAA,GAAG,EAAE,KADwB;AAE7BC,EAAAA,GAAG,EAAE,KAFwB;AAG7BC,EAAAA,UAAU,EAAE,YAHiB;AAI7BC,EAAAA,KAAK,EAAE,OAJsB;AAK7BC,EAAAA,OAAO,EAAE,SALoB;AAM7BC,EAAAA,OAAO,EAAE,SANoB;AAO7BC,EAAAA,OAAO,EAAE,SAPoB;AAQ7BC,EAAAA,OAAO,EAAE,SARoB;AAS7BC,EAAAA,QAAQ,EAAE,UATmB;AAU7BC,EAAAA,QAAQ,EAAE,UAVmB;AAW7BC,EAAAA,QAAQ,EAAE,UAXmB;AAY7BC,EAAAA,QAAQ,EAAE,UAZmB;AAa7BC,EAAAA,MAAM,EAAE,QAbqB;AAc7BC,EAAAA,SAAS,EAAE;AAdkB,CAA1B;;AAiBA,IAAMC,eAAe,GAAG;AAC3BrB,EAAAA,UAAU,EAAE,YADe;AAE3BsB,EAAAA,KAAK,EAAE,OAFoB;AAG3BlB,EAAAA,YAAY,EAAE,cAHa;AAI3BmB,EAAAA,KAAK,EAAE,OAJoB;AAK3BC,EAAAA,OAAO,EAAE;AALkB,CAAxB;;AAQA,IAAMC,eAAe,GAAG;AAC3BC,EAAAA,kBAAkB,EAAE,oBADO;AAE3BC,EAAAA,aAAa,EAAE,eAFY;AAG3BC,EAAAA,MAAM,EAAE,QAHmB;AAI3BC,EAAAA,WAAW,EAAE,aAJc;AAK3BC,EAAAA,kBAAkB,EAAE,oBALO;AAM3BC,EAAAA,WAAW,EAAE;AANc,CAAxB;;AASA,IAAMC,eAAe,GAAG;AAC3BC,EAAAA,WAAW,EAAE,aADc;AAE3BC,EAAAA,SAAS,EAAE,WAFgB;AAG3BC,EAAAA,UAAU,EAAE,YAHe;AAI3BC,EAAAA,cAAc,EAAE,gBAJW;AAK3BC,EAAAA,YAAY,EAAE,cALa;AAM3BC,EAAAA,OAAO,EAAE,SANkB;AAO3BC,EAAAA,SAAS,EAAE,WAPgB;AAQ3BC,EAAAA,MAAM,EAAE,QARmB;AAS3BC,EAAAA,aAAa,EAAE,eATY;AAU3BC,EAAAA,kBAAkB,EAAE,oBAVO;AAW3BC,EAAAA,mBAAmB,EAAE,qBAXM;AAY3BC,EAAAA,mBAAmB,EAAE,qBAZM;AAa3BC,EAAAA,gBAAgB,EAAE,kBAbS;AAc3BC,EAAAA,0BAA0B,EAAE,4BAdD;AAe3BC,EAAAA,UAAU,EAAE,YAfe;AAgB3BC,EAAAA,mBAAmB,EAAE,qBAhBM;AAiB3BC,EAAAA,cAAc,EAAE,gBAjBW;AAkB3BC,EAAAA,SAAS,EAAE,WAlBgB;AAmB3BC,EAAAA,aAAa,EAAE,eAnBY;AAoB3BC,EAAAA,MAAM,EAAE,QApBmB;AAqB3BC,EAAAA,UAAU,EAAE,YArBe;AAsB3BC,EAAAA,eAAe,EAAE,iBAtBU;AAuB3BC,EAAAA,MAAM,EAAE,QAvBmB;AAwB3BC,EAAAA,UAAU,EAAE,YAxBe;AAyB3BC,EAAAA,kBAAkB,EAAE,oBAzBO;AA0B3BC,EAAAA,cAAc,EAAE,gBA1BW;AA2B3BC,EAAAA,SAAS,EAAE;AA3BgB,CAAxB;;AA8BA,IAAMC,aAAa,GAAG;AACzBC,EAAAA,MAAM,EAAE,QADiB;AAEzBC,EAAAA,QAAQ,EAAE,UAFe;AAGzBC,EAAAA,GAAG,EAAE,KAHoB;AAIzBC,EAAAA,IAAI,EAAE,MAJmB;AAKzBC,EAAAA,OAAO,EAAE,SALgB;AAMzBC,EAAAA,UAAU,EAAE,YANa;AAOzBC,EAAAA,SAAS,EAAE,WAPc;AAQzBC,EAAAA,UAAU,EAAE,YARa;AASzBC,EAAAA,oBAAoB,EAAE,sBATG;AAUzBC,EAAAA,qBAAqB,EAAE,uBAVE;AAWzBC,EAAAA,uBAAuB,EAAE,yBAXA;AAYzBC,EAAAA,OAAO,EAAE,SAZgB;AAazBC,EAAAA,cAAc,EAAE,gBAbS;AAczBC,EAAAA,OAAO,EAAE,SAdgB;AAezBC,EAAAA,MAAM,EAAE,QAfiB;AAgBzBC,EAAAA,KAAK,EAAE,OAhBkB;AAiBzBC,EAAAA,IAAI,EAAE;AAjBmB,CAAtB;;AAoBA,IAAMC,YAAY,GAAG;AACxBC,EAAAA,aAAa,EAAE,eADS;AAExBC,EAAAA,cAAc,EAAE,gBAFQ;AAGxBC,EAAAA,QAAQ,EAAE,UAHc;AAIxBC,EAAAA,QAAQ,EAAE,UAJc;AAKxBC,EAAAA,SAAS,EAAE,WALa;AAMxBC,EAAAA,aAAa,EAAE,eANS;AAOxBC,EAAAA,OAAO,EAAE,SAPe;AAQxBC,EAAAA,YAAY,EAAE,cARU;AASxBC,EAAAA,IAAI,EAAE,MATkB;AAUxBC,EAAAA,aAAa,EAAE;AAVS,CAArB;;AAaA,IAAMC,iBAAiB,GAAG;AAC7BC,EAAAA,QAAQ,EAAE,UADmB;AAE7BC,EAAAA,UAAU,EAAE,YAFiB;AAG7BC,EAAAA,eAAe,EAAE,iBAHY;AAI7BC,EAAAA,QAAQ,EAAE,UAJmB;AAK7BC,EAAAA,MAAM,EAAE,QALqB;AAM7BC,EAAAA,kBAAkB,EAAE,oBANS;AAO7BC,EAAAA,mBAAmB,EAAE,qBAPQ;AAQ7BC,EAAAA,YAAY,EAAE,cARe;AAS7BC,EAAAA,cAAc,EAAE,gBATa;AAU7BC,EAAAA,GAAG,EAAE,KAVwB;AAW7BC,EAAAA,SAAS,EAAE;AAXkB,CAA1B;;AAcA,IAAMC,gBAAgB,GAAG;AAC5BC,EAAAA,KAAK,EAAE,OADqB;AAE5BC,EAAAA,QAAQ,EAAE,UAFkB;AAG5BC,EAAAA,WAAW,EAAE,aAHe;AAI5BC,EAAAA,wBAAwB,EAAE,0BAJE;AAK5BC,EAAAA,uBAAuB,EAAE,yBALG;AAM5BC,EAAAA,cAAc,EAAE,gBANY;AAO5BC,EAAAA,OAAO,EAAE;AAPmB,CAAzB;;AAUA,IAAMC,0BAA0B,GAAG;AACtCC,EAAAA,IAAI,EAAE,MADgC;AAEtCC,EAAAA,OAAO,EAAE,SAF6B;AAGtCC,EAAAA,YAAY,EAAE,cAHwB;AAItCC,EAAAA,QAAQ,EAAE,UAJ4B;AAKtCC,EAAAA,MAAM,EAAE,QAL8B;AAMtCC,EAAAA,SAAS,EAAE,WAN2B;AAOtCC,EAAAA,SAAS,EAAE;AAP2B,CAAnC;;AAUA,IAAMC,UAAU,GAAG;AACtBC,EAAAA,iBAAiB,EAAE,mBADG;AAEtBC,EAAAA,YAAY,EAAE,cAFQ;AAGtBC,EAAAA,qBAAqB,EAAE,uBAHD;AAItBC,EAAAA,eAAe,EAAE,iBAJK;AAKtBC,EAAAA,uBAAuB,EAAE,yBALH;AAMtBC,EAAAA,aAAa,EAAE,eANO;AAOtBC,EAAAA,sBAAsB,EAAE;AAPF,CAAnB;;AAUA,IAAMC,iBAAiB,GAAG;AAC7BC,EAAAA,OAAO,EAAE,SADoB;AAE7BC,EAAAA,IAAI,EAAE,MAFuB;AAG7BC,EAAAA,aAAa,EAAE,eAHc;AAI7BC,EAAAA,SAAS,EAAE,WAJkB;AAK7BC,EAAAA,SAAS,EAAE,WALkB;AAM7BC,EAAAA,UAAU,EAAE,YANiB;AAO7BC,EAAAA,YAAY,EAAE;AAPe,CAA1B",
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\constants",
      "sourcesContent": [
        "export const AttackMotivations = {\r\n    ACCIDENTAL: 'accidental',\r\n    COERCION: 'coercion',\r\n    DOMINANCE: 'dominance',\r\n    IDEOLOGY: 'ideology',\r\n    NOTORIETY: 'notoriety',\r\n    ORGANIZATIONAL_GAIN: 'organizational-gain',\r\n    PERSONAL_GAIN: 'personal-gain',\r\n    PERSONAL_SATISFACTION: 'personal-satisfaction',\r\n    REVENGE: 'revenge',\r\n    UNPREDICTABLE: 'unpredictable'\r\n}\r\n\r\nexport const AttackResourceLevels = {\r\n    INDIVIDUAL: 'individual',\r\n    CLUB: 'club',\r\n    CONTEST: 'contest',\r\n    TEAM: 'team',\r\n    ORGANIZATION: 'organization',\r\n    GOVERNMENT: 'government'\r\n}\r\n\r\nexport const HashingAlgorithms = {\r\n    MD5: 'MD5',\r\n    MD6: 'MD6',\r\n    RIPEMD_160: 'RIPEMD-160',\r\n    SHA_1: 'SHA-1',\r\n    SHA_224: 'SHA-224',\r\n    SHA_256: 'SHA-256',\r\n    SHA_384: 'SHA-384',\r\n    SHA_512: 'SHA-512',\r\n    SHA3_224: 'SHA3-224',\r\n    SHA3_256: 'SHA3-256',\r\n    SHA3_384: 'SHA3-384',\r\n    SHA3_512: 'SHA3-512',\r\n    SSDEEP: 'ssdeep',\r\n    WHIRLPOOL: 'WHIRLPOOL'\r\n}\r\n\r\nexport const IdentityClasses = {\r\n    INDIVIDUAL: 'individual',\r\n    GROUP: 'group',\r\n    ORGANIZATION: 'organization',\r\n    CLASS: 'class',\r\n    UNKNOWN: 'unknown'\r\n}\r\n\r\nexport const IndicatorLabels = {\r\n    ANOMALOUS_ACTIVITY: 'anomalous-activity',\r\n    ANONYMIZATION: 'anonymization',\r\n    BENIGN: 'benign',\r\n    COMPROMISED: 'compromised',\r\n    MALICIOUS_ACTIVITY: 'malicious-activity',\r\n    ATTRIBUTION: 'attribution'\r\n}\r\n\r\nexport const IndustrySectors = {\r\n    AGRICULTURE: 'agriculture',\r\n    AEROSPACE: 'aerospace',\r\n    AUTOMOTIVE: 'automotive',\r\n    COMMUNICATIONS: 'communications',\r\n    CONSTRUCTION: 'construction',\r\n    DEFENCE: 'defence',\r\n    EDUCATION: 'education',\r\n    ENERGY: 'energy',\r\n    ENTERTAINMENT: 'entertainment',\r\n    FINANCIAL_SERVICES: 'financial-services',\r\n    GOVERNMENT_NATIONAL: 'government-national',\r\n    GOVERNMENT_REGIONAL: 'government-regional',\r\n    GOVERNMENT_LOCAL: 'government-local',\r\n    GOVERNMENT_PUBLIC_SERVICES: 'government-public-services',\r\n    HEALTHCARE: 'healthcare',\r\n    HOSPITALITY_LEISURE: 'hospitality-leisure',\r\n    INFRASTRUCTURE: 'infrastructure',\r\n    INSURANCE: 'insurance',\r\n    MANUFACTURING: 'manufacturing',\r\n    MINING: 'mining',\r\n    NON_PROFIT: 'non-profit',\r\n    PHARMACEUTICALS: 'pharmaceuticals',\r\n    RETAIL: 'retail',\r\n    TECHNOLOGY: 'technology',\r\n    TELECOMMUNICATIONS: 'telecommunications',\r\n    TRANSPORTATION: 'transportation',\r\n    UTILITIES: 'utilities'\r\n}\r\n\r\nexport const MalwareLabels = {\r\n    ADWARE: 'adware',\r\n    BACKDOOR: 'backdoor',\r\n    BOT: 'bot',\r\n    DDOS: 'ddos',\r\n    DROPPER: 'dropper',\r\n    EXPLOT_KIT: 'explot-kit',\r\n    KEYLOGGER: 'keylogger',\r\n    RANSOMWARE: 'ransomware',\r\n    REMOTE_ACCESS_TROJAN: 'remote-access-trojan',\r\n    RESOURCE_EXPLOITATION: 'resource-exploitation',\r\n    ROGUE_SECURITY_SOFTWARE: 'rogue-security-software',\r\n    ROOTKIT: 'rootkit',\r\n    SCREEN_CAPTURE: 'screen-capture',\r\n    SPYWARE: 'spyware',\r\n    TROJAN: 'trojan',\r\n    VIRUS: 'virus',\r\n    WORM: 'worm'\r\n}\r\n\r\nexport const ReportLabels = {\r\n    THREAT_REPORT: 'threat-report',\r\n    ATTACK_PATTERN: 'attack-pattern',\r\n    CAMPAIGN: 'campaign',\r\n    IDENTITY: 'identity',\r\n    INDICATOR: 'indicator',\r\n    INTRUSION_SET: 'intrusion-set',\r\n    MALWARE: 'malware',\r\n    THREAT_ACTOR: 'threat-actor',\r\n    TOOL: 'tool',\r\n    VULNERABILITY: 'vulnerability'\r\n}\r\n\r\nexport const ThreatActorLabels = {\r\n    ACTIVIST: 'activist',\r\n    COMPETITOR: 'competitor',\r\n    CRIME_SYNDICATE: 'crime-syndicate',\r\n    CRIMINAL: 'criminal',\r\n    HACKER: 'hacker',\r\n    INSIDER_ACCIDENTAL: 'insider-accidental',\r\n    INSIDER_DISGRUNTLED: 'insider-disgruntled',\r\n    NATION_STATE: 'nation-state',\r\n    SENSATIONALIST: 'sensationalist',\r\n    SPY: 'spy',\r\n    TERRORIST: 'terrorist'\r\n}\r\n\r\nexport const ThreatActorRoles = {\r\n    AGENT: 'agent',\r\n    DIRECTOR: 'director',\r\n    INDEPENDENT: 'independent',\r\n    INFRASTRUCTURE_ARCHITECT: 'infrastructure-architect',\r\n    INFRASTRUCTURE_OPERATOR: 'infrastructure-operator',\r\n    MALWARE_AUTHOR: 'malware-author',\r\n    SPONSOR: 'sponsor'\r\n}\r\n\r\nexport const ThreatActorSophistications = {\r\n    NONE: 'none',\r\n    MINIMAL: 'minimal',\r\n    INTERMEDIATE: 'intermediate',\r\n    ADVANCED: 'advanced',\r\n    EXPERT: 'expert',\r\n    INNOVATOR: 'innovator',\r\n    STRATEGIC: 'strategic'\r\n}\r\n\r\nexport const ToolLabels = {\r\n    DENIAL_OF_SERVICE: 'denial-of-service',\r\n    EXPLOITATION: 'exploitation',\r\n    INFORMATION_GATHERING: 'information-gathering',\r\n    NETWORK_CAPTURE: 'network-capture',\r\n    CREDENTIAL_EXPLOITATION: 'credential-exploitation',\r\n    REMOTE_ACCESS: 'remote-access',\r\n    VULNERABILITY_SCANNING: 'vulnerability-scanning'\r\n}\r\n\r\nexport const RelationshipTypes = {\r\n    TARGETS: 'targets',\r\n    USES: 'uses',\r\n    ATTRIBUTED_TO: 'attributed-to',\r\n    MITIGATES: 'mitigates',\r\n    INDICATES: 'indicates',\r\n    VARIANT_OF: 'variant-of',\r\n    IMPERSONATES: 'impersonates'\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1565901732833
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\lib\\\\definitions\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"filename\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\lib\\\\definitions\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"plugins\":[{\"key\":\"syntax-class-properties\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\definitions",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\definitions\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "syntax-class-properties",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\definitions\\index.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\definitions\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\definitions",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar Bundle = _interopRequireWildcard(require(\"./bundle\"));\n\nvar GranularMarking = _interopRequireWildcard(require(\"./granularMarking\"));\n\nvar Marking = _interopRequireWildcard(require(\"./marking\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj[\"default\"] = obj; return newObj; } }\n\nvar _default = {\n  Bundle: Bundle,\n  GranularMarking: GranularMarking,\n  Marking: Marking\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIkJ1bmRsZSIsIkdyYW51bGFyTWFya2luZyIsIk1hcmtpbmciXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7OztlQUVlO0FBQ1hBLEVBQUFBLE1BQU0sRUFBTkEsTUFEVztBQUVYQyxFQUFBQSxlQUFlLEVBQWZBLGVBRlc7QUFHWEMsRUFBQUEsT0FBTyxFQUFQQTtBQUhXLEMiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxaYWNoIFNoYW1lc1xcRG9jdW1lbnRzXFxEZXZlbG9wbWVudFxcanMtMi1zdGl4XFxsaWJcXGRlZmluaXRpb25zIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgQnVuZGxlIGZyb20gJy4vYnVuZGxlJ1xyXG5pbXBvcnQgKiBhcyBHcmFudWxhck1hcmtpbmcgZnJvbSAnLi9ncmFudWxhck1hcmtpbmcnXHJcbmltcG9ydCAqIGFzIE1hcmtpbmcgZnJvbSAnLi9tYXJraW5nJ1xyXG5cclxuZXhwb3J0IGRlZmF1bHQge1xyXG4gICAgQnVuZGxlLFxyXG4gICAgR3JhbnVsYXJNYXJraW5nLFxyXG4gICAgTWFya2luZ1xyXG59Il19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "Bundle",
        "GranularMarking",
        "Marking"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;;;eAEe;AACXA,EAAAA,MAAM,EAANA,MADW;AAEXC,EAAAA,eAAe,EAAfA,eAFW;AAGXC,EAAAA,OAAO,EAAPA;AAHW,C",
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\definitions",
      "sourcesContent": [
        "import * as Bundle from './bundle'\r\nimport * as GranularMarking from './granularMarking'\r\nimport * as Marking from './marking'\r\n\r\nexport default {\r\n    Bundle,\r\n    GranularMarking,\r\n    Marking\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1565902572207
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"filename\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"plugins\":[{\"key\":\"syntax-class-properties\",\"visitor\":{},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "syntax-class-properties",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\index.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar Constants = _interopRequireWildcard(require(\"./lib/constants\"));\n\nvar Definitions = _interopRequireWildcard(require(\"./lib/definitions\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj[\"default\"] = obj; return newObj; } }\n\n// import * as Objects from './lib/objects'\nvar _default = {\n  Constants: Constants,\n  // Objects,\n  Definitions: Definitions\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIkNvbnN0YW50cyIsIkRlZmluaXRpb25zIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBRUE7Ozs7QUFEQTtlQUdlO0FBQ1hBLEVBQUFBLFNBQVMsRUFBVEEsU0FEVztBQUVYO0FBQ0FDLEVBQUFBLFdBQVcsRUFBWEE7QUFIVyxDIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcWmFjaCBTaGFtZXNcXERvY3VtZW50c1xcRGV2ZWxvcG1lbnRcXGpzLTItc3RpeCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIENvbnN0YW50cyBmcm9tICcuL2xpYi9jb25zdGFudHMnXHJcbi8vIGltcG9ydCAqIGFzIE9iamVjdHMgZnJvbSAnLi9saWIvb2JqZWN0cydcclxuaW1wb3J0ICogYXMgRGVmaW5pdGlvbnMgZnJvbSAnLi9saWIvZGVmaW5pdGlvbnMnXHJcblxyXG5leHBvcnQgZGVmYXVsdCB7XHJcbiAgICBDb25zdGFudHMsXHJcbiAgICAvLyBPYmplY3RzLFxyXG4gICAgRGVmaW5pdGlvbnNcclxufSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "Constants",
        "Definitions"
      ],
      "mappings": ";;;;;;;AAAA;;AAEA;;;;AADA;eAGe;AACXA,EAAAA,SAAS,EAATA,SADW;AAEX;AACAC,EAAAA,WAAW,EAAXA;AAHW,C",
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "sourcesContent": [
        "import * as Constants from './lib/constants'\r\n// import * as Objects from './lib/objects'\r\nimport * as Definitions from './lib/definitions'\r\n\r\nexport default {\r\n    Constants,\r\n    // Objects,\r\n    Definitions\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1565902584404
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\lib\\\\constants\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"filename\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\lib\\\\constants\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"plugins\":[{\"key\":\"syntax-class-properties\",\"visitor\":{},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\constants",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\constants\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "syntax-class-properties",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\constants\\index.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\constants\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\constants",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar General = _interopRequireWildcard(require(\"./general\"));\n\nvar Vocabulary = _interopRequireWildcard(require(\"./vocabulary\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj[\"default\"] = obj; return newObj; } }\n\nvar _default = {\n  General: General,\n  Vocabulary: Vocabulary\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIkdlbmVyYWwiLCJWb2NhYnVsYXJ5Il0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7Ozs7ZUFFZTtBQUNYQSxFQUFBQSxPQUFPLEVBQVBBLE9BRFc7QUFFWEMsRUFBQUEsVUFBVSxFQUFWQTtBQUZXLEMiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxaYWNoIFNoYW1lc1xcRG9jdW1lbnRzXFxEZXZlbG9wbWVudFxcanMtMi1zdGl4XFxsaWJcXGNvbnN0YW50cyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIEdlbmVyYWwgZnJvbSAnLi9nZW5lcmFsJ1xyXG5pbXBvcnQgKiBhcyBWb2NhYnVsYXJ5IGZyb20gJy4vdm9jYWJ1bGFyeSdcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHtcclxuICAgIEdlbmVyYWwsXHJcbiAgICBWb2NhYnVsYXJ5XHJcbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "General",
        "Vocabulary"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;eAEe;AACXA,EAAAA,OAAO,EAAPA,OADW;AAEXC,EAAAA,UAAU,EAAVA;AAFW,C",
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\constants",
      "sourcesContent": [
        "import * as General from './general'\r\nimport * as Vocabulary from './vocabulary'\r\n\r\nexport default {\r\n    General,\r\n    Vocabulary\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1565902525245
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\lib\\\\constants\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"filename\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\lib\\\\constants\\\\general.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"plugins\":[{\"key\":\"syntax-class-properties\",\"visitor\":{},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\constants",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\constants\\general.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "syntax-class-properties",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\constants\\general.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\constants\\general.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\constants",
        "sourceFileName": "general.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TLPs = exports.DefinitionTypes = void 0;\nvar DefinitionTypes = {\n  TLP: 'tlp',\n  STATEMENT: 'statement'\n};\nexports.DefinitionTypes = DefinitionTypes;\nvar TLPs = {\n  WHITE: 'white',\n  GREEN: 'green',\n  AMBER: 'amber',\n  RED: 'red'\n};\nexports.TLPs = TLPs;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdlbmVyYWwuanMiXSwibmFtZXMiOlsiRGVmaW5pdGlvblR5cGVzIiwiVExQIiwiU1RBVEVNRU5UIiwiVExQcyIsIldISVRFIiwiR1JFRU4iLCJBTUJFUiIsIlJFRCJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQU8sSUFBTUEsZUFBZSxHQUFHO0FBQzNCQyxFQUFBQSxHQUFHLEVBQUUsS0FEc0I7QUFFM0JDLEVBQUFBLFNBQVMsRUFBRTtBQUZnQixDQUF4Qjs7QUFLQSxJQUFNQyxJQUFJLEdBQUc7QUFDaEJDLEVBQUFBLEtBQUssRUFBRSxPQURTO0FBRWhCQyxFQUFBQSxLQUFLLEVBQUUsT0FGUztBQUdoQkMsRUFBQUEsS0FBSyxFQUFFLE9BSFM7QUFJaEJDLEVBQUFBLEdBQUcsRUFBRTtBQUpXLENBQWIiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxaYWNoIFNoYW1lc1xcRG9jdW1lbnRzXFxEZXZlbG9wbWVudFxcanMtMi1zdGl4XFxsaWJcXGNvbnN0YW50cyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBEZWZpbml0aW9uVHlwZXMgPSB7XHJcbiAgICBUTFA6ICd0bHAnLFxyXG4gICAgU1RBVEVNRU5UOiAnc3RhdGVtZW50J1xyXG59XHJcblxyXG5leHBvcnQgY29uc3QgVExQcyA9IHtcclxuICAgIFdISVRFOiAnd2hpdGUnLFxyXG4gICAgR1JFRU46ICdncmVlbicsXHJcbiAgICBBTUJFUjogJ2FtYmVyJyxcclxuICAgIFJFRDogJ3JlZCdcclxufSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "general.js"
      ],
      "names": [
        "DefinitionTypes",
        "TLP",
        "STATEMENT",
        "TLPs",
        "WHITE",
        "GREEN",
        "AMBER",
        "RED"
      ],
      "mappings": ";;;;;;AAAO,IAAMA,eAAe,GAAG;AAC3BC,EAAAA,GAAG,EAAE,KADsB;AAE3BC,EAAAA,SAAS,EAAE;AAFgB,CAAxB;;AAKA,IAAMC,IAAI,GAAG;AAChBC,EAAAA,KAAK,EAAE,OADS;AAEhBC,EAAAA,KAAK,EAAE,OAFS;AAGhBC,EAAAA,KAAK,EAAE,OAHS;AAIhBC,EAAAA,GAAG,EAAE;AAJW,CAAb",
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\constants",
      "sourcesContent": [
        "export const DefinitionTypes = {\r\n    TLP: 'tlp',\r\n    STATEMENT: 'statement'\r\n}\r\n\r\nexport const TLPs = {\r\n    WHITE: 'white',\r\n    GREEN: 'green',\r\n    AMBER: 'amber',\r\n    RED: 'red'\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1565901740061
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\examples\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"filename\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\examples\\\\identifiying-a-threatq-actor-profile.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\examples",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\examples\\identifiying-a-threatq-actor-profile.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\examples\\identifiying-a-threatq-actor-profile.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\examples\\identifiying-a-threatq-actor-profile.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\examples",
        "sourceFileName": "identifiying-a-threatq-actor-profile.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _index = require(\"../index\");\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar test = _typeof(_index.Definitions.Bundle);\n\nconsole.log(test);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImlkZW50aWZpeWluZy1hLXRocmVhdHEtYWN0b3ItcHJvZmlsZS5qcyJdLCJuYW1lcyI6WyJ0ZXN0IiwiRGVmaW5pdGlvbnMiLCJCdW5kbGUiLCJjb25zb2xlIiwibG9nIl0sIm1hcHBpbmdzIjoiOztBQUFBOzs7O0FBRUEsSUFBTUEsSUFBSSxXQUFVQyxtQkFBWUMsTUFBdEIsQ0FBVjs7QUFDQUMsT0FBTyxDQUFDQyxHQUFSLENBQVlKLElBQVoiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxaYWNoIFNoYW1lc1xcRG9jdW1lbnRzXFxEZXZlbG9wbWVudFxcanMtMi1zdGl4XFxleGFtcGxlcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbnN0YW50cywgRGVmaW5pdGlvbnMgfSBmcm9tICcuLi9pbmRleCdcclxuXHJcbmNvbnN0IHRlc3QgPSB0eXBlb2YoRGVmaW5pdGlvbnMuQnVuZGxlKVxyXG5jb25zb2xlLmxvZyh0ZXN0KVxyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "identifiying-a-threatq-actor-profile.js"
      ],
      "names": [
        "test",
        "Definitions",
        "Bundle",
        "console",
        "log"
      ],
      "mappings": ";;AAAA;;;;AAEA,IAAMA,IAAI,WAAUC,mBAAYC,MAAtB,CAAV;;AACAC,OAAO,CAACC,GAAR,CAAYJ,IAAZ",
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\examples",
      "sourcesContent": [
        "import { Constants, Definitions } from '../index'\r\n\r\nconst test = typeof(Definitions.Bundle)\r\nconsole.log(test)\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1565903600820
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"filename\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\index.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"Constants\", {\n  enumerable: true,\n  get: function get() {\n    return _constants[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"Definitions\", {\n  enumerable: true,\n  get: function get() {\n    return _definitions[\"default\"];\n  }\n});\n\nvar _constants = _interopRequireDefault(require(\"./lib/constants\"));\n\nvar _definitions = _interopRequireDefault(require(\"./lib/definitions\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBOztBQUVBIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcWmFjaCBTaGFtZXNcXERvY3VtZW50c1xcRGV2ZWxvcG1lbnRcXGpzLTItc3RpeCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBDb25zdGFudHMgZnJvbSAnLi9saWIvY29uc3RhbnRzJ1xyXG4vLyBpbXBvcnQgT2JqZWN0cyBmcm9tICcuL2xpYi9vYmplY3RzJ1xyXG5pbXBvcnQgRGVmaW5pdGlvbnMgZnJvbSAnLi9saWIvZGVmaW5pdGlvbnMnXHJcblxyXG5leHBvcnQgIHtcclxuICAgIENvbnN0YW50cyxcclxuICAgIC8vIE9iamVjdHMsXHJcbiAgICBEZWZpbml0aW9uc1xyXG59Il19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [],
      "mappings": ";;;;;;;;;;;;;;;;;;AAAA;;AAEA",
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "sourcesContent": [
        "import Constants from './lib/constants'\r\n// import Objects from './lib/objects'\r\nimport Definitions from './lib/definitions'\r\n\r\nexport  {\r\n    Constants,\r\n    // Objects,\r\n    Definitions\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1565903069702
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\lib\\\\constants\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"filename\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\lib\\\\constants\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\constants",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\constants\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\constants\\index.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\constants\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\constants",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar General = _interopRequireWildcard(require(\"./general\"));\n\nvar Vocabulary = _interopRequireWildcard(require(\"./vocabulary\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj[\"default\"] = obj; return newObj; } }\n\nvar _default = {\n  General: General,\n  Vocabulary: Vocabulary\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIkdlbmVyYWwiLCJWb2NhYnVsYXJ5Il0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7Ozs7ZUFFZTtBQUNYQSxFQUFBQSxPQUFPLEVBQVBBLE9BRFc7QUFFWEMsRUFBQUEsVUFBVSxFQUFWQTtBQUZXLEMiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxaYWNoIFNoYW1lc1xcRG9jdW1lbnRzXFxEZXZlbG9wbWVudFxcanMtMi1zdGl4XFxsaWJcXGNvbnN0YW50cyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIEdlbmVyYWwgZnJvbSAnLi9nZW5lcmFsJ1xyXG5pbXBvcnQgKiBhcyBWb2NhYnVsYXJ5IGZyb20gJy4vdm9jYWJ1bGFyeSdcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHtcclxuICAgIEdlbmVyYWwsXHJcbiAgICBWb2NhYnVsYXJ5XHJcbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "General",
        "Vocabulary"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;eAEe;AACXA,EAAAA,OAAO,EAAPA,OADW;AAEXC,EAAAA,UAAU,EAAVA;AAFW,C",
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\constants",
      "sourcesContent": [
        "import * as General from './general'\r\nimport * as Vocabulary from './vocabulary'\r\n\r\nexport default {\r\n    General,\r\n    Vocabulary\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1565902525245
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\lib\\\\constants\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"filename\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\lib\\\\constants\\\\general.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\constants",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\constants\\general.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\constants\\general.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\constants\\general.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\constants",
        "sourceFileName": "general.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TLPs = exports.DefinitionTypes = void 0;\nvar DefinitionTypes = {\n  TLP: 'tlp',\n  STATEMENT: 'statement'\n};\nexports.DefinitionTypes = DefinitionTypes;\nvar TLPs = {\n  WHITE: 'white',\n  GREEN: 'green',\n  AMBER: 'amber',\n  RED: 'red'\n};\nexports.TLPs = TLPs;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdlbmVyYWwuanMiXSwibmFtZXMiOlsiRGVmaW5pdGlvblR5cGVzIiwiVExQIiwiU1RBVEVNRU5UIiwiVExQcyIsIldISVRFIiwiR1JFRU4iLCJBTUJFUiIsIlJFRCJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQU8sSUFBTUEsZUFBZSxHQUFHO0FBQzNCQyxFQUFBQSxHQUFHLEVBQUUsS0FEc0I7QUFFM0JDLEVBQUFBLFNBQVMsRUFBRTtBQUZnQixDQUF4Qjs7QUFLQSxJQUFNQyxJQUFJLEdBQUc7QUFDaEJDLEVBQUFBLEtBQUssRUFBRSxPQURTO0FBRWhCQyxFQUFBQSxLQUFLLEVBQUUsT0FGUztBQUdoQkMsRUFBQUEsS0FBSyxFQUFFLE9BSFM7QUFJaEJDLEVBQUFBLEdBQUcsRUFBRTtBQUpXLENBQWIiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxaYWNoIFNoYW1lc1xcRG9jdW1lbnRzXFxEZXZlbG9wbWVudFxcanMtMi1zdGl4XFxsaWJcXGNvbnN0YW50cyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBEZWZpbml0aW9uVHlwZXMgPSB7XHJcbiAgICBUTFA6ICd0bHAnLFxyXG4gICAgU1RBVEVNRU5UOiAnc3RhdGVtZW50J1xyXG59XHJcblxyXG5leHBvcnQgY29uc3QgVExQcyA9IHtcclxuICAgIFdISVRFOiAnd2hpdGUnLFxyXG4gICAgR1JFRU46ICdncmVlbicsXHJcbiAgICBBTUJFUjogJ2FtYmVyJyxcclxuICAgIFJFRDogJ3JlZCdcclxufSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "general.js"
      ],
      "names": [
        "DefinitionTypes",
        "TLP",
        "STATEMENT",
        "TLPs",
        "WHITE",
        "GREEN",
        "AMBER",
        "RED"
      ],
      "mappings": ";;;;;;AAAO,IAAMA,eAAe,GAAG;AAC3BC,EAAAA,GAAG,EAAE,KADsB;AAE3BC,EAAAA,SAAS,EAAE;AAFgB,CAAxB;;AAKA,IAAMC,IAAI,GAAG;AAChBC,EAAAA,KAAK,EAAE,OADS;AAEhBC,EAAAA,KAAK,EAAE,OAFS;AAGhBC,EAAAA,KAAK,EAAE,OAHS;AAIhBC,EAAAA,GAAG,EAAE;AAJW,CAAb",
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\constants",
      "sourcesContent": [
        "export const DefinitionTypes = {\r\n    TLP: 'tlp',\r\n    STATEMENT: 'statement'\r\n}\r\n\r\nexport const TLPs = {\r\n    WHITE: 'white',\r\n    GREEN: 'green',\r\n    AMBER: 'amber',\r\n    RED: 'red'\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1565901740061
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\lib\\\\constants\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"filename\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\lib\\\\constants\\\\vocabulary.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\constants",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\constants\\vocabulary.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\constants\\vocabulary.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\constants\\vocabulary.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\constants",
        "sourceFileName": "vocabulary.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RelationshipTypes = exports.ToolLabels = exports.ThreatActorSophistications = exports.ThreatActorRoles = exports.ThreatActorLabels = exports.ReportLabels = exports.MalwareLabels = exports.IndustrySectors = exports.IndicatorLabels = exports.IdentityClasses = exports.HashingAlgorithms = exports.AttackResourceLevels = exports.AttackMotivations = void 0;\nvar AttackMotivations = {\n  ACCIDENTAL: 'accidental',\n  COERCION: 'coercion',\n  DOMINANCE: 'dominance',\n  IDEOLOGY: 'ideology',\n  NOTORIETY: 'notoriety',\n  ORGANIZATIONAL_GAIN: 'organizational-gain',\n  PERSONAL_GAIN: 'personal-gain',\n  PERSONAL_SATISFACTION: 'personal-satisfaction',\n  REVENGE: 'revenge',\n  UNPREDICTABLE: 'unpredictable'\n};\nexports.AttackMotivations = AttackMotivations;\nvar AttackResourceLevels = {\n  INDIVIDUAL: 'individual',\n  CLUB: 'club',\n  CONTEST: 'contest',\n  TEAM: 'team',\n  ORGANIZATION: 'organization',\n  GOVERNMENT: 'government'\n};\nexports.AttackResourceLevels = AttackResourceLevels;\nvar HashingAlgorithms = {\n  MD5: 'MD5',\n  MD6: 'MD6',\n  RIPEMD_160: 'RIPEMD-160',\n  SHA_1: 'SHA-1',\n  SHA_224: 'SHA-224',\n  SHA_256: 'SHA-256',\n  SHA_384: 'SHA-384',\n  SHA_512: 'SHA-512',\n  SHA3_224: 'SHA3-224',\n  SHA3_256: 'SHA3-256',\n  SHA3_384: 'SHA3-384',\n  SHA3_512: 'SHA3-512',\n  SSDEEP: 'ssdeep',\n  WHIRLPOOL: 'WHIRLPOOL'\n};\nexports.HashingAlgorithms = HashingAlgorithms;\nvar IdentityClasses = {\n  INDIVIDUAL: 'individual',\n  GROUP: 'group',\n  ORGANIZATION: 'organization',\n  CLASS: 'class',\n  UNKNOWN: 'unknown'\n};\nexports.IdentityClasses = IdentityClasses;\nvar IndicatorLabels = {\n  ANOMALOUS_ACTIVITY: 'anomalous-activity',\n  ANONYMIZATION: 'anonymization',\n  BENIGN: 'benign',\n  COMPROMISED: 'compromised',\n  MALICIOUS_ACTIVITY: 'malicious-activity',\n  ATTRIBUTION: 'attribution'\n};\nexports.IndicatorLabels = IndicatorLabels;\nvar IndustrySectors = {\n  AGRICULTURE: 'agriculture',\n  AEROSPACE: 'aerospace',\n  AUTOMOTIVE: 'automotive',\n  COMMUNICATIONS: 'communications',\n  CONSTRUCTION: 'construction',\n  DEFENCE: 'defence',\n  EDUCATION: 'education',\n  ENERGY: 'energy',\n  ENTERTAINMENT: 'entertainment',\n  FINANCIAL_SERVICES: 'financial-services',\n  GOVERNMENT_NATIONAL: 'government-national',\n  GOVERNMENT_REGIONAL: 'government-regional',\n  GOVERNMENT_LOCAL: 'government-local',\n  GOVERNMENT_PUBLIC_SERVICES: 'government-public-services',\n  HEALTHCARE: 'healthcare',\n  HOSPITALITY_LEISURE: 'hospitality-leisure',\n  INFRASTRUCTURE: 'infrastructure',\n  INSURANCE: 'insurance',\n  MANUFACTURING: 'manufacturing',\n  MINING: 'mining',\n  NON_PROFIT: 'non-profit',\n  PHARMACEUTICALS: 'pharmaceuticals',\n  RETAIL: 'retail',\n  TECHNOLOGY: 'technology',\n  TELECOMMUNICATIONS: 'telecommunications',\n  TRANSPORTATION: 'transportation',\n  UTILITIES: 'utilities'\n};\nexports.IndustrySectors = IndustrySectors;\nvar MalwareLabels = {\n  ADWARE: 'adware',\n  BACKDOOR: 'backdoor',\n  BOT: 'bot',\n  DDOS: 'ddos',\n  DROPPER: 'dropper',\n  EXPLOT_KIT: 'explot-kit',\n  KEYLOGGER: 'keylogger',\n  RANSOMWARE: 'ransomware',\n  REMOTE_ACCESS_TROJAN: 'remote-access-trojan',\n  RESOURCE_EXPLOITATION: 'resource-exploitation',\n  ROGUE_SECURITY_SOFTWARE: 'rogue-security-software',\n  ROOTKIT: 'rootkit',\n  SCREEN_CAPTURE: 'screen-capture',\n  SPYWARE: 'spyware',\n  TROJAN: 'trojan',\n  VIRUS: 'virus',\n  WORM: 'worm'\n};\nexports.MalwareLabels = MalwareLabels;\nvar ReportLabels = {\n  THREAT_REPORT: 'threat-report',\n  ATTACK_PATTERN: 'attack-pattern',\n  CAMPAIGN: 'campaign',\n  IDENTITY: 'identity',\n  INDICATOR: 'indicator',\n  INTRUSION_SET: 'intrusion-set',\n  MALWARE: 'malware',\n  THREAT_ACTOR: 'threat-actor',\n  TOOL: 'tool',\n  VULNERABILITY: 'vulnerability'\n};\nexports.ReportLabels = ReportLabels;\nvar ThreatActorLabels = {\n  ACTIVIST: 'activist',\n  COMPETITOR: 'competitor',\n  CRIME_SYNDICATE: 'crime-syndicate',\n  CRIMINAL: 'criminal',\n  HACKER: 'hacker',\n  INSIDER_ACCIDENTAL: 'insider-accidental',\n  INSIDER_DISGRUNTLED: 'insider-disgruntled',\n  NATION_STATE: 'nation-state',\n  SENSATIONALIST: 'sensationalist',\n  SPY: 'spy',\n  TERRORIST: 'terrorist'\n};\nexports.ThreatActorLabels = ThreatActorLabels;\nvar ThreatActorRoles = {\n  AGENT: 'agent',\n  DIRECTOR: 'director',\n  INDEPENDENT: 'independent',\n  INFRASTRUCTURE_ARCHITECT: 'infrastructure-architect',\n  INFRASTRUCTURE_OPERATOR: 'infrastructure-operator',\n  MALWARE_AUTHOR: 'malware-author',\n  SPONSOR: 'sponsor'\n};\nexports.ThreatActorRoles = ThreatActorRoles;\nvar ThreatActorSophistications = {\n  NONE: 'none',\n  MINIMAL: 'minimal',\n  INTERMEDIATE: 'intermediate',\n  ADVANCED: 'advanced',\n  EXPERT: 'expert',\n  INNOVATOR: 'innovator',\n  STRATEGIC: 'strategic'\n};\nexports.ThreatActorSophistications = ThreatActorSophistications;\nvar ToolLabels = {\n  DENIAL_OF_SERVICE: 'denial-of-service',\n  EXPLOITATION: 'exploitation',\n  INFORMATION_GATHERING: 'information-gathering',\n  NETWORK_CAPTURE: 'network-capture',\n  CREDENTIAL_EXPLOITATION: 'credential-exploitation',\n  REMOTE_ACCESS: 'remote-access',\n  VULNERABILITY_SCANNING: 'vulnerability-scanning'\n};\nexports.ToolLabels = ToolLabels;\nvar RelationshipTypes = {\n  TARGETS: 'targets',\n  USES: 'uses',\n  ATTRIBUTED_TO: 'attributed-to',\n  MITIGATES: 'mitigates',\n  INDICATES: 'indicates',\n  VARIANT_OF: 'variant-of',\n  IMPERSONATES: 'impersonates'\n};\nexports.RelationshipTypes = RelationshipTypes;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZvY2FidWxhcnkuanMiXSwibmFtZXMiOlsiQXR0YWNrTW90aXZhdGlvbnMiLCJBQ0NJREVOVEFMIiwiQ09FUkNJT04iLCJET01JTkFOQ0UiLCJJREVPTE9HWSIsIk5PVE9SSUVUWSIsIk9SR0FOSVpBVElPTkFMX0dBSU4iLCJQRVJTT05BTF9HQUlOIiwiUEVSU09OQUxfU0FUSVNGQUNUSU9OIiwiUkVWRU5HRSIsIlVOUFJFRElDVEFCTEUiLCJBdHRhY2tSZXNvdXJjZUxldmVscyIsIklORElWSURVQUwiLCJDTFVCIiwiQ09OVEVTVCIsIlRFQU0iLCJPUkdBTklaQVRJT04iLCJHT1ZFUk5NRU5UIiwiSGFzaGluZ0FsZ29yaXRobXMiLCJNRDUiLCJNRDYiLCJSSVBFTURfMTYwIiwiU0hBXzEiLCJTSEFfMjI0IiwiU0hBXzI1NiIsIlNIQV8zODQiLCJTSEFfNTEyIiwiU0hBM18yMjQiLCJTSEEzXzI1NiIsIlNIQTNfMzg0IiwiU0hBM181MTIiLCJTU0RFRVAiLCJXSElSTFBPT0wiLCJJZGVudGl0eUNsYXNzZXMiLCJHUk9VUCIsIkNMQVNTIiwiVU5LTk9XTiIsIkluZGljYXRvckxhYmVscyIsIkFOT01BTE9VU19BQ1RJVklUWSIsIkFOT05ZTUlaQVRJT04iLCJCRU5JR04iLCJDT01QUk9NSVNFRCIsIk1BTElDSU9VU19BQ1RJVklUWSIsIkFUVFJJQlVUSU9OIiwiSW5kdXN0cnlTZWN0b3JzIiwiQUdSSUNVTFRVUkUiLCJBRVJPU1BBQ0UiLCJBVVRPTU9USVZFIiwiQ09NTVVOSUNBVElPTlMiLCJDT05TVFJVQ1RJT04iLCJERUZFTkNFIiwiRURVQ0FUSU9OIiwiRU5FUkdZIiwiRU5URVJUQUlOTUVOVCIsIkZJTkFOQ0lBTF9TRVJWSUNFUyIsIkdPVkVSTk1FTlRfTkFUSU9OQUwiLCJHT1ZFUk5NRU5UX1JFR0lPTkFMIiwiR09WRVJOTUVOVF9MT0NBTCIsIkdPVkVSTk1FTlRfUFVCTElDX1NFUlZJQ0VTIiwiSEVBTFRIQ0FSRSIsIkhPU1BJVEFMSVRZX0xFSVNVUkUiLCJJTkZSQVNUUlVDVFVSRSIsIklOU1VSQU5DRSIsIk1BTlVGQUNUVVJJTkciLCJNSU5JTkciLCJOT05fUFJPRklUIiwiUEhBUk1BQ0VVVElDQUxTIiwiUkVUQUlMIiwiVEVDSE5PTE9HWSIsIlRFTEVDT01NVU5JQ0FUSU9OUyIsIlRSQU5TUE9SVEFUSU9OIiwiVVRJTElUSUVTIiwiTWFsd2FyZUxhYmVscyIsIkFEV0FSRSIsIkJBQ0tET09SIiwiQk9UIiwiRERPUyIsIkRST1BQRVIiLCJFWFBMT1RfS0lUIiwiS0VZTE9HR0VSIiwiUkFOU09NV0FSRSIsIlJFTU9URV9BQ0NFU1NfVFJPSkFOIiwiUkVTT1VSQ0VfRVhQTE9JVEFUSU9OIiwiUk9HVUVfU0VDVVJJVFlfU09GVFdBUkUiLCJST09US0lUIiwiU0NSRUVOX0NBUFRVUkUiLCJTUFlXQVJFIiwiVFJPSkFOIiwiVklSVVMiLCJXT1JNIiwiUmVwb3J0TGFiZWxzIiwiVEhSRUFUX1JFUE9SVCIsIkFUVEFDS19QQVRURVJOIiwiQ0FNUEFJR04iLCJJREVOVElUWSIsIklORElDQVRPUiIsIklOVFJVU0lPTl9TRVQiLCJNQUxXQVJFIiwiVEhSRUFUX0FDVE9SIiwiVE9PTCIsIlZVTE5FUkFCSUxJVFkiLCJUaHJlYXRBY3RvckxhYmVscyIsIkFDVElWSVNUIiwiQ09NUEVUSVRPUiIsIkNSSU1FX1NZTkRJQ0FURSIsIkNSSU1JTkFMIiwiSEFDS0VSIiwiSU5TSURFUl9BQ0NJREVOVEFMIiwiSU5TSURFUl9ESVNHUlVOVExFRCIsIk5BVElPTl9TVEFURSIsIlNFTlNBVElPTkFMSVNUIiwiU1BZIiwiVEVSUk9SSVNUIiwiVGhyZWF0QWN0b3JSb2xlcyIsIkFHRU5UIiwiRElSRUNUT1IiLCJJTkRFUEVOREVOVCIsIklORlJBU1RSVUNUVVJFX0FSQ0hJVEVDVCIsIklORlJBU1RSVUNUVVJFX09QRVJBVE9SIiwiTUFMV0FSRV9BVVRIT1IiLCJTUE9OU09SIiwiVGhyZWF0QWN0b3JTb3BoaXN0aWNhdGlvbnMiLCJOT05FIiwiTUlOSU1BTCIsIklOVEVSTUVESUFURSIsIkFEVkFOQ0VEIiwiRVhQRVJUIiwiSU5OT1ZBVE9SIiwiU1RSQVRFR0lDIiwiVG9vbExhYmVscyIsIkRFTklBTF9PRl9TRVJWSUNFIiwiRVhQTE9JVEFUSU9OIiwiSU5GT1JNQVRJT05fR0FUSEVSSU5HIiwiTkVUV09SS19DQVBUVVJFIiwiQ1JFREVOVElBTF9FWFBMT0lUQVRJT04iLCJSRU1PVEVfQUNDRVNTIiwiVlVMTkVSQUJJTElUWV9TQ0FOTklORyIsIlJlbGF0aW9uc2hpcFR5cGVzIiwiVEFSR0VUUyIsIlVTRVMiLCJBVFRSSUJVVEVEX1RPIiwiTUlUSUdBVEVTIiwiSU5ESUNBVEVTIiwiVkFSSUFOVF9PRiIsIklNUEVSU09OQVRFUyJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQU8sSUFBTUEsaUJBQWlCLEdBQUc7QUFDN0JDLEVBQUFBLFVBQVUsRUFBRSxZQURpQjtBQUU3QkMsRUFBQUEsUUFBUSxFQUFFLFVBRm1CO0FBRzdCQyxFQUFBQSxTQUFTLEVBQUUsV0FIa0I7QUFJN0JDLEVBQUFBLFFBQVEsRUFBRSxVQUptQjtBQUs3QkMsRUFBQUEsU0FBUyxFQUFFLFdBTGtCO0FBTTdCQyxFQUFBQSxtQkFBbUIsRUFBRSxxQkFOUTtBQU83QkMsRUFBQUEsYUFBYSxFQUFFLGVBUGM7QUFRN0JDLEVBQUFBLHFCQUFxQixFQUFFLHVCQVJNO0FBUzdCQyxFQUFBQSxPQUFPLEVBQUUsU0FUb0I7QUFVN0JDLEVBQUFBLGFBQWEsRUFBRTtBQVZjLENBQTFCOztBQWFBLElBQU1DLG9CQUFvQixHQUFHO0FBQ2hDQyxFQUFBQSxVQUFVLEVBQUUsWUFEb0I7QUFFaENDLEVBQUFBLElBQUksRUFBRSxNQUYwQjtBQUdoQ0MsRUFBQUEsT0FBTyxFQUFFLFNBSHVCO0FBSWhDQyxFQUFBQSxJQUFJLEVBQUUsTUFKMEI7QUFLaENDLEVBQUFBLFlBQVksRUFBRSxjQUxrQjtBQU1oQ0MsRUFBQUEsVUFBVSxFQUFFO0FBTm9CLENBQTdCOztBQVNBLElBQU1DLGlCQUFpQixHQUFHO0FBQzdCQyxFQUFBQSxHQUFHLEVBQUUsS0FEd0I7QUFFN0JDLEVBQUFBLEdBQUcsRUFBRSxLQUZ3QjtBQUc3QkMsRUFBQUEsVUFBVSxFQUFFLFlBSGlCO0FBSTdCQyxFQUFBQSxLQUFLLEVBQUUsT0FKc0I7QUFLN0JDLEVBQUFBLE9BQU8sRUFBRSxTQUxvQjtBQU03QkMsRUFBQUEsT0FBTyxFQUFFLFNBTm9CO0FBTzdCQyxFQUFBQSxPQUFPLEVBQUUsU0FQb0I7QUFRN0JDLEVBQUFBLE9BQU8sRUFBRSxTQVJvQjtBQVM3QkMsRUFBQUEsUUFBUSxFQUFFLFVBVG1CO0FBVTdCQyxFQUFBQSxRQUFRLEVBQUUsVUFWbUI7QUFXN0JDLEVBQUFBLFFBQVEsRUFBRSxVQVhtQjtBQVk3QkMsRUFBQUEsUUFBUSxFQUFFLFVBWm1CO0FBYTdCQyxFQUFBQSxNQUFNLEVBQUUsUUFicUI7QUFjN0JDLEVBQUFBLFNBQVMsRUFBRTtBQWRrQixDQUExQjs7QUFpQkEsSUFBTUMsZUFBZSxHQUFHO0FBQzNCckIsRUFBQUEsVUFBVSxFQUFFLFlBRGU7QUFFM0JzQixFQUFBQSxLQUFLLEVBQUUsT0FGb0I7QUFHM0JsQixFQUFBQSxZQUFZLEVBQUUsY0FIYTtBQUkzQm1CLEVBQUFBLEtBQUssRUFBRSxPQUpvQjtBQUszQkMsRUFBQUEsT0FBTyxFQUFFO0FBTGtCLENBQXhCOztBQVFBLElBQU1DLGVBQWUsR0FBRztBQUMzQkMsRUFBQUEsa0JBQWtCLEVBQUUsb0JBRE87QUFFM0JDLEVBQUFBLGFBQWEsRUFBRSxlQUZZO0FBRzNCQyxFQUFBQSxNQUFNLEVBQUUsUUFIbUI7QUFJM0JDLEVBQUFBLFdBQVcsRUFBRSxhQUpjO0FBSzNCQyxFQUFBQSxrQkFBa0IsRUFBRSxvQkFMTztBQU0zQkMsRUFBQUEsV0FBVyxFQUFFO0FBTmMsQ0FBeEI7O0FBU0EsSUFBTUMsZUFBZSxHQUFHO0FBQzNCQyxFQUFBQSxXQUFXLEVBQUUsYUFEYztBQUUzQkMsRUFBQUEsU0FBUyxFQUFFLFdBRmdCO0FBRzNCQyxFQUFBQSxVQUFVLEVBQUUsWUFIZTtBQUkzQkMsRUFBQUEsY0FBYyxFQUFFLGdCQUpXO0FBSzNCQyxFQUFBQSxZQUFZLEVBQUUsY0FMYTtBQU0zQkMsRUFBQUEsT0FBTyxFQUFFLFNBTmtCO0FBTzNCQyxFQUFBQSxTQUFTLEVBQUUsV0FQZ0I7QUFRM0JDLEVBQUFBLE1BQU0sRUFBRSxRQVJtQjtBQVMzQkMsRUFBQUEsYUFBYSxFQUFFLGVBVFk7QUFVM0JDLEVBQUFBLGtCQUFrQixFQUFFLG9CQVZPO0FBVzNCQyxFQUFBQSxtQkFBbUIsRUFBRSxxQkFYTTtBQVkzQkMsRUFBQUEsbUJBQW1CLEVBQUUscUJBWk07QUFhM0JDLEVBQUFBLGdCQUFnQixFQUFFLGtCQWJTO0FBYzNCQyxFQUFBQSwwQkFBMEIsRUFBRSw0QkFkRDtBQWUzQkMsRUFBQUEsVUFBVSxFQUFFLFlBZmU7QUFnQjNCQyxFQUFBQSxtQkFBbUIsRUFBRSxxQkFoQk07QUFpQjNCQyxFQUFBQSxjQUFjLEVBQUUsZ0JBakJXO0FBa0IzQkMsRUFBQUEsU0FBUyxFQUFFLFdBbEJnQjtBQW1CM0JDLEVBQUFBLGFBQWEsRUFBRSxlQW5CWTtBQW9CM0JDLEVBQUFBLE1BQU0sRUFBRSxRQXBCbUI7QUFxQjNCQyxFQUFBQSxVQUFVLEVBQUUsWUFyQmU7QUFzQjNCQyxFQUFBQSxlQUFlLEVBQUUsaUJBdEJVO0FBdUIzQkMsRUFBQUEsTUFBTSxFQUFFLFFBdkJtQjtBQXdCM0JDLEVBQUFBLFVBQVUsRUFBRSxZQXhCZTtBQXlCM0JDLEVBQUFBLGtCQUFrQixFQUFFLG9CQXpCTztBQTBCM0JDLEVBQUFBLGNBQWMsRUFBRSxnQkExQlc7QUEyQjNCQyxFQUFBQSxTQUFTLEVBQUU7QUEzQmdCLENBQXhCOztBQThCQSxJQUFNQyxhQUFhLEdBQUc7QUFDekJDLEVBQUFBLE1BQU0sRUFBRSxRQURpQjtBQUV6QkMsRUFBQUEsUUFBUSxFQUFFLFVBRmU7QUFHekJDLEVBQUFBLEdBQUcsRUFBRSxLQUhvQjtBQUl6QkMsRUFBQUEsSUFBSSxFQUFFLE1BSm1CO0FBS3pCQyxFQUFBQSxPQUFPLEVBQUUsU0FMZ0I7QUFNekJDLEVBQUFBLFVBQVUsRUFBRSxZQU5hO0FBT3pCQyxFQUFBQSxTQUFTLEVBQUUsV0FQYztBQVF6QkMsRUFBQUEsVUFBVSxFQUFFLFlBUmE7QUFTekJDLEVBQUFBLG9CQUFvQixFQUFFLHNCQVRHO0FBVXpCQyxFQUFBQSxxQkFBcUIsRUFBRSx1QkFWRTtBQVd6QkMsRUFBQUEsdUJBQXVCLEVBQUUseUJBWEE7QUFZekJDLEVBQUFBLE9BQU8sRUFBRSxTQVpnQjtBQWF6QkMsRUFBQUEsY0FBYyxFQUFFLGdCQWJTO0FBY3pCQyxFQUFBQSxPQUFPLEVBQUUsU0FkZ0I7QUFlekJDLEVBQUFBLE1BQU0sRUFBRSxRQWZpQjtBQWdCekJDLEVBQUFBLEtBQUssRUFBRSxPQWhCa0I7QUFpQnpCQyxFQUFBQSxJQUFJLEVBQUU7QUFqQm1CLENBQXRCOztBQW9CQSxJQUFNQyxZQUFZLEdBQUc7QUFDeEJDLEVBQUFBLGFBQWEsRUFBRSxlQURTO0FBRXhCQyxFQUFBQSxjQUFjLEVBQUUsZ0JBRlE7QUFHeEJDLEVBQUFBLFFBQVEsRUFBRSxVQUhjO0FBSXhCQyxFQUFBQSxRQUFRLEVBQUUsVUFKYztBQUt4QkMsRUFBQUEsU0FBUyxFQUFFLFdBTGE7QUFNeEJDLEVBQUFBLGFBQWEsRUFBRSxlQU5TO0FBT3hCQyxFQUFBQSxPQUFPLEVBQUUsU0FQZTtBQVF4QkMsRUFBQUEsWUFBWSxFQUFFLGNBUlU7QUFTeEJDLEVBQUFBLElBQUksRUFBRSxNQVRrQjtBQVV4QkMsRUFBQUEsYUFBYSxFQUFFO0FBVlMsQ0FBckI7O0FBYUEsSUFBTUMsaUJBQWlCLEdBQUc7QUFDN0JDLEVBQUFBLFFBQVEsRUFBRSxVQURtQjtBQUU3QkMsRUFBQUEsVUFBVSxFQUFFLFlBRmlCO0FBRzdCQyxFQUFBQSxlQUFlLEVBQUUsaUJBSFk7QUFJN0JDLEVBQUFBLFFBQVEsRUFBRSxVQUptQjtBQUs3QkMsRUFBQUEsTUFBTSxFQUFFLFFBTHFCO0FBTTdCQyxFQUFBQSxrQkFBa0IsRUFBRSxvQkFOUztBQU83QkMsRUFBQUEsbUJBQW1CLEVBQUUscUJBUFE7QUFRN0JDLEVBQUFBLFlBQVksRUFBRSxjQVJlO0FBUzdCQyxFQUFBQSxjQUFjLEVBQUUsZ0JBVGE7QUFVN0JDLEVBQUFBLEdBQUcsRUFBRSxLQVZ3QjtBQVc3QkMsRUFBQUEsU0FBUyxFQUFFO0FBWGtCLENBQTFCOztBQWNBLElBQU1DLGdCQUFnQixHQUFHO0FBQzVCQyxFQUFBQSxLQUFLLEVBQUUsT0FEcUI7QUFFNUJDLEVBQUFBLFFBQVEsRUFBRSxVQUZrQjtBQUc1QkMsRUFBQUEsV0FBVyxFQUFFLGFBSGU7QUFJNUJDLEVBQUFBLHdCQUF3QixFQUFFLDBCQUpFO0FBSzVCQyxFQUFBQSx1QkFBdUIsRUFBRSx5QkFMRztBQU01QkMsRUFBQUEsY0FBYyxFQUFFLGdCQU5ZO0FBTzVCQyxFQUFBQSxPQUFPLEVBQUU7QUFQbUIsQ0FBekI7O0FBVUEsSUFBTUMsMEJBQTBCLEdBQUc7QUFDdENDLEVBQUFBLElBQUksRUFBRSxNQURnQztBQUV0Q0MsRUFBQUEsT0FBTyxFQUFFLFNBRjZCO0FBR3RDQyxFQUFBQSxZQUFZLEVBQUUsY0FId0I7QUFJdENDLEVBQUFBLFFBQVEsRUFBRSxVQUo0QjtBQUt0Q0MsRUFBQUEsTUFBTSxFQUFFLFFBTDhCO0FBTXRDQyxFQUFBQSxTQUFTLEVBQUUsV0FOMkI7QUFPdENDLEVBQUFBLFNBQVMsRUFBRTtBQVAyQixDQUFuQzs7QUFVQSxJQUFNQyxVQUFVLEdBQUc7QUFDdEJDLEVBQUFBLGlCQUFpQixFQUFFLG1CQURHO0FBRXRCQyxFQUFBQSxZQUFZLEVBQUUsY0FGUTtBQUd0QkMsRUFBQUEscUJBQXFCLEVBQUUsdUJBSEQ7QUFJdEJDLEVBQUFBLGVBQWUsRUFBRSxpQkFKSztBQUt0QkMsRUFBQUEsdUJBQXVCLEVBQUUseUJBTEg7QUFNdEJDLEVBQUFBLGFBQWEsRUFBRSxlQU5PO0FBT3RCQyxFQUFBQSxzQkFBc0IsRUFBRTtBQVBGLENBQW5COztBQVVBLElBQU1DLGlCQUFpQixHQUFHO0FBQzdCQyxFQUFBQSxPQUFPLEVBQUUsU0FEb0I7QUFFN0JDLEVBQUFBLElBQUksRUFBRSxNQUZ1QjtBQUc3QkMsRUFBQUEsYUFBYSxFQUFFLGVBSGM7QUFJN0JDLEVBQUFBLFNBQVMsRUFBRSxXQUprQjtBQUs3QkMsRUFBQUEsU0FBUyxFQUFFLFdBTGtCO0FBTTdCQyxFQUFBQSxVQUFVLEVBQUUsWUFOaUI7QUFPN0JDLEVBQUFBLFlBQVksRUFBRTtBQVBlLENBQTFCIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcWmFjaCBTaGFtZXNcXERvY3VtZW50c1xcRGV2ZWxvcG1lbnRcXGpzLTItc3RpeFxcbGliXFxjb25zdGFudHMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgQXR0YWNrTW90aXZhdGlvbnMgPSB7XHJcbiAgICBBQ0NJREVOVEFMOiAnYWNjaWRlbnRhbCcsXHJcbiAgICBDT0VSQ0lPTjogJ2NvZXJjaW9uJyxcclxuICAgIERPTUlOQU5DRTogJ2RvbWluYW5jZScsXHJcbiAgICBJREVPTE9HWTogJ2lkZW9sb2d5JyxcclxuICAgIE5PVE9SSUVUWTogJ25vdG9yaWV0eScsXHJcbiAgICBPUkdBTklaQVRJT05BTF9HQUlOOiAnb3JnYW5pemF0aW9uYWwtZ2FpbicsXHJcbiAgICBQRVJTT05BTF9HQUlOOiAncGVyc29uYWwtZ2FpbicsXHJcbiAgICBQRVJTT05BTF9TQVRJU0ZBQ1RJT046ICdwZXJzb25hbC1zYXRpc2ZhY3Rpb24nLFxyXG4gICAgUkVWRU5HRTogJ3JldmVuZ2UnLFxyXG4gICAgVU5QUkVESUNUQUJMRTogJ3VucHJlZGljdGFibGUnXHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBBdHRhY2tSZXNvdXJjZUxldmVscyA9IHtcclxuICAgIElORElWSURVQUw6ICdpbmRpdmlkdWFsJyxcclxuICAgIENMVUI6ICdjbHViJyxcclxuICAgIENPTlRFU1Q6ICdjb250ZXN0JyxcclxuICAgIFRFQU06ICd0ZWFtJyxcclxuICAgIE9SR0FOSVpBVElPTjogJ29yZ2FuaXphdGlvbicsXHJcbiAgICBHT1ZFUk5NRU5UOiAnZ292ZXJubWVudCdcclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IEhhc2hpbmdBbGdvcml0aG1zID0ge1xyXG4gICAgTUQ1OiAnTUQ1JyxcclxuICAgIE1ENjogJ01ENicsXHJcbiAgICBSSVBFTURfMTYwOiAnUklQRU1ELTE2MCcsXHJcbiAgICBTSEFfMTogJ1NIQS0xJyxcclxuICAgIFNIQV8yMjQ6ICdTSEEtMjI0JyxcclxuICAgIFNIQV8yNTY6ICdTSEEtMjU2JyxcclxuICAgIFNIQV8zODQ6ICdTSEEtMzg0JyxcclxuICAgIFNIQV81MTI6ICdTSEEtNTEyJyxcclxuICAgIFNIQTNfMjI0OiAnU0hBMy0yMjQnLFxyXG4gICAgU0hBM18yNTY6ICdTSEEzLTI1NicsXHJcbiAgICBTSEEzXzM4NDogJ1NIQTMtMzg0JyxcclxuICAgIFNIQTNfNTEyOiAnU0hBMy01MTInLFxyXG4gICAgU1NERUVQOiAnc3NkZWVwJyxcclxuICAgIFdISVJMUE9PTDogJ1dISVJMUE9PTCdcclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IElkZW50aXR5Q2xhc3NlcyA9IHtcclxuICAgIElORElWSURVQUw6ICdpbmRpdmlkdWFsJyxcclxuICAgIEdST1VQOiAnZ3JvdXAnLFxyXG4gICAgT1JHQU5JWkFUSU9OOiAnb3JnYW5pemF0aW9uJyxcclxuICAgIENMQVNTOiAnY2xhc3MnLFxyXG4gICAgVU5LTk9XTjogJ3Vua25vd24nXHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBJbmRpY2F0b3JMYWJlbHMgPSB7XHJcbiAgICBBTk9NQUxPVVNfQUNUSVZJVFk6ICdhbm9tYWxvdXMtYWN0aXZpdHknLFxyXG4gICAgQU5PTllNSVpBVElPTjogJ2Fub255bWl6YXRpb24nLFxyXG4gICAgQkVOSUdOOiAnYmVuaWduJyxcclxuICAgIENPTVBST01JU0VEOiAnY29tcHJvbWlzZWQnLFxyXG4gICAgTUFMSUNJT1VTX0FDVElWSVRZOiAnbWFsaWNpb3VzLWFjdGl2aXR5JyxcclxuICAgIEFUVFJJQlVUSU9OOiAnYXR0cmlidXRpb24nXHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBJbmR1c3RyeVNlY3RvcnMgPSB7XHJcbiAgICBBR1JJQ1VMVFVSRTogJ2FncmljdWx0dXJlJyxcclxuICAgIEFFUk9TUEFDRTogJ2Flcm9zcGFjZScsXHJcbiAgICBBVVRPTU9USVZFOiAnYXV0b21vdGl2ZScsXHJcbiAgICBDT01NVU5JQ0FUSU9OUzogJ2NvbW11bmljYXRpb25zJyxcclxuICAgIENPTlNUUlVDVElPTjogJ2NvbnN0cnVjdGlvbicsXHJcbiAgICBERUZFTkNFOiAnZGVmZW5jZScsXHJcbiAgICBFRFVDQVRJT046ICdlZHVjYXRpb24nLFxyXG4gICAgRU5FUkdZOiAnZW5lcmd5JyxcclxuICAgIEVOVEVSVEFJTk1FTlQ6ICdlbnRlcnRhaW5tZW50JyxcclxuICAgIEZJTkFOQ0lBTF9TRVJWSUNFUzogJ2ZpbmFuY2lhbC1zZXJ2aWNlcycsXHJcbiAgICBHT1ZFUk5NRU5UX05BVElPTkFMOiAnZ292ZXJubWVudC1uYXRpb25hbCcsXHJcbiAgICBHT1ZFUk5NRU5UX1JFR0lPTkFMOiAnZ292ZXJubWVudC1yZWdpb25hbCcsXHJcbiAgICBHT1ZFUk5NRU5UX0xPQ0FMOiAnZ292ZXJubWVudC1sb2NhbCcsXHJcbiAgICBHT1ZFUk5NRU5UX1BVQkxJQ19TRVJWSUNFUzogJ2dvdmVybm1lbnQtcHVibGljLXNlcnZpY2VzJyxcclxuICAgIEhFQUxUSENBUkU6ICdoZWFsdGhjYXJlJyxcclxuICAgIEhPU1BJVEFMSVRZX0xFSVNVUkU6ICdob3NwaXRhbGl0eS1sZWlzdXJlJyxcclxuICAgIElORlJBU1RSVUNUVVJFOiAnaW5mcmFzdHJ1Y3R1cmUnLFxyXG4gICAgSU5TVVJBTkNFOiAnaW5zdXJhbmNlJyxcclxuICAgIE1BTlVGQUNUVVJJTkc6ICdtYW51ZmFjdHVyaW5nJyxcclxuICAgIE1JTklORzogJ21pbmluZycsXHJcbiAgICBOT05fUFJPRklUOiAnbm9uLXByb2ZpdCcsXHJcbiAgICBQSEFSTUFDRVVUSUNBTFM6ICdwaGFybWFjZXV0aWNhbHMnLFxyXG4gICAgUkVUQUlMOiAncmV0YWlsJyxcclxuICAgIFRFQ0hOT0xPR1k6ICd0ZWNobm9sb2d5JyxcclxuICAgIFRFTEVDT01NVU5JQ0FUSU9OUzogJ3RlbGVjb21tdW5pY2F0aW9ucycsXHJcbiAgICBUUkFOU1BPUlRBVElPTjogJ3RyYW5zcG9ydGF0aW9uJyxcclxuICAgIFVUSUxJVElFUzogJ3V0aWxpdGllcydcclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IE1hbHdhcmVMYWJlbHMgPSB7XHJcbiAgICBBRFdBUkU6ICdhZHdhcmUnLFxyXG4gICAgQkFDS0RPT1I6ICdiYWNrZG9vcicsXHJcbiAgICBCT1Q6ICdib3QnLFxyXG4gICAgRERPUzogJ2Rkb3MnLFxyXG4gICAgRFJPUFBFUjogJ2Ryb3BwZXInLFxyXG4gICAgRVhQTE9UX0tJVDogJ2V4cGxvdC1raXQnLFxyXG4gICAgS0VZTE9HR0VSOiAna2V5bG9nZ2VyJyxcclxuICAgIFJBTlNPTVdBUkU6ICdyYW5zb213YXJlJyxcclxuICAgIFJFTU9URV9BQ0NFU1NfVFJPSkFOOiAncmVtb3RlLWFjY2Vzcy10cm9qYW4nLFxyXG4gICAgUkVTT1VSQ0VfRVhQTE9JVEFUSU9OOiAncmVzb3VyY2UtZXhwbG9pdGF0aW9uJyxcclxuICAgIFJPR1VFX1NFQ1VSSVRZX1NPRlRXQVJFOiAncm9ndWUtc2VjdXJpdHktc29mdHdhcmUnLFxyXG4gICAgUk9PVEtJVDogJ3Jvb3RraXQnLFxyXG4gICAgU0NSRUVOX0NBUFRVUkU6ICdzY3JlZW4tY2FwdHVyZScsXHJcbiAgICBTUFlXQVJFOiAnc3B5d2FyZScsXHJcbiAgICBUUk9KQU46ICd0cm9qYW4nLFxyXG4gICAgVklSVVM6ICd2aXJ1cycsXHJcbiAgICBXT1JNOiAnd29ybSdcclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IFJlcG9ydExhYmVscyA9IHtcclxuICAgIFRIUkVBVF9SRVBPUlQ6ICd0aHJlYXQtcmVwb3J0JyxcclxuICAgIEFUVEFDS19QQVRURVJOOiAnYXR0YWNrLXBhdHRlcm4nLFxyXG4gICAgQ0FNUEFJR046ICdjYW1wYWlnbicsXHJcbiAgICBJREVOVElUWTogJ2lkZW50aXR5JyxcclxuICAgIElORElDQVRPUjogJ2luZGljYXRvcicsXHJcbiAgICBJTlRSVVNJT05fU0VUOiAnaW50cnVzaW9uLXNldCcsXHJcbiAgICBNQUxXQVJFOiAnbWFsd2FyZScsXHJcbiAgICBUSFJFQVRfQUNUT1I6ICd0aHJlYXQtYWN0b3InLFxyXG4gICAgVE9PTDogJ3Rvb2wnLFxyXG4gICAgVlVMTkVSQUJJTElUWTogJ3Z1bG5lcmFiaWxpdHknXHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBUaHJlYXRBY3RvckxhYmVscyA9IHtcclxuICAgIEFDVElWSVNUOiAnYWN0aXZpc3QnLFxyXG4gICAgQ09NUEVUSVRPUjogJ2NvbXBldGl0b3InLFxyXG4gICAgQ1JJTUVfU1lORElDQVRFOiAnY3JpbWUtc3luZGljYXRlJyxcclxuICAgIENSSU1JTkFMOiAnY3JpbWluYWwnLFxyXG4gICAgSEFDS0VSOiAnaGFja2VyJyxcclxuICAgIElOU0lERVJfQUNDSURFTlRBTDogJ2luc2lkZXItYWNjaWRlbnRhbCcsXHJcbiAgICBJTlNJREVSX0RJU0dSVU5UTEVEOiAnaW5zaWRlci1kaXNncnVudGxlZCcsXHJcbiAgICBOQVRJT05fU1RBVEU6ICduYXRpb24tc3RhdGUnLFxyXG4gICAgU0VOU0FUSU9OQUxJU1Q6ICdzZW5zYXRpb25hbGlzdCcsXHJcbiAgICBTUFk6ICdzcHknLFxyXG4gICAgVEVSUk9SSVNUOiAndGVycm9yaXN0J1xyXG59XHJcblxyXG5leHBvcnQgY29uc3QgVGhyZWF0QWN0b3JSb2xlcyA9IHtcclxuICAgIEFHRU5UOiAnYWdlbnQnLFxyXG4gICAgRElSRUNUT1I6ICdkaXJlY3RvcicsXHJcbiAgICBJTkRFUEVOREVOVDogJ2luZGVwZW5kZW50JyxcclxuICAgIElORlJBU1RSVUNUVVJFX0FSQ0hJVEVDVDogJ2luZnJhc3RydWN0dXJlLWFyY2hpdGVjdCcsXHJcbiAgICBJTkZSQVNUUlVDVFVSRV9PUEVSQVRPUjogJ2luZnJhc3RydWN0dXJlLW9wZXJhdG9yJyxcclxuICAgIE1BTFdBUkVfQVVUSE9SOiAnbWFsd2FyZS1hdXRob3InLFxyXG4gICAgU1BPTlNPUjogJ3Nwb25zb3InXHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBUaHJlYXRBY3RvclNvcGhpc3RpY2F0aW9ucyA9IHtcclxuICAgIE5PTkU6ICdub25lJyxcclxuICAgIE1JTklNQUw6ICdtaW5pbWFsJyxcclxuICAgIElOVEVSTUVESUFURTogJ2ludGVybWVkaWF0ZScsXHJcbiAgICBBRFZBTkNFRDogJ2FkdmFuY2VkJyxcclxuICAgIEVYUEVSVDogJ2V4cGVydCcsXHJcbiAgICBJTk5PVkFUT1I6ICdpbm5vdmF0b3InLFxyXG4gICAgU1RSQVRFR0lDOiAnc3RyYXRlZ2ljJ1xyXG59XHJcblxyXG5leHBvcnQgY29uc3QgVG9vbExhYmVscyA9IHtcclxuICAgIERFTklBTF9PRl9TRVJWSUNFOiAnZGVuaWFsLW9mLXNlcnZpY2UnLFxyXG4gICAgRVhQTE9JVEFUSU9OOiAnZXhwbG9pdGF0aW9uJyxcclxuICAgIElORk9STUFUSU9OX0dBVEhFUklORzogJ2luZm9ybWF0aW9uLWdhdGhlcmluZycsXHJcbiAgICBORVRXT1JLX0NBUFRVUkU6ICduZXR3b3JrLWNhcHR1cmUnLFxyXG4gICAgQ1JFREVOVElBTF9FWFBMT0lUQVRJT046ICdjcmVkZW50aWFsLWV4cGxvaXRhdGlvbicsXHJcbiAgICBSRU1PVEVfQUNDRVNTOiAncmVtb3RlLWFjY2VzcycsXHJcbiAgICBWVUxORVJBQklMSVRZX1NDQU5OSU5HOiAndnVsbmVyYWJpbGl0eS1zY2FubmluZydcclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IFJlbGF0aW9uc2hpcFR5cGVzID0ge1xyXG4gICAgVEFSR0VUUzogJ3RhcmdldHMnLFxyXG4gICAgVVNFUzogJ3VzZXMnLFxyXG4gICAgQVRUUklCVVRFRF9UTzogJ2F0dHJpYnV0ZWQtdG8nLFxyXG4gICAgTUlUSUdBVEVTOiAnbWl0aWdhdGVzJyxcclxuICAgIElORElDQVRFUzogJ2luZGljYXRlcycsXHJcbiAgICBWQVJJQU5UX09GOiAndmFyaWFudC1vZicsXHJcbiAgICBJTVBFUlNPTkFURVM6ICdpbXBlcnNvbmF0ZXMnXHJcbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "vocabulary.js"
      ],
      "names": [
        "AttackMotivations",
        "ACCIDENTAL",
        "COERCION",
        "DOMINANCE",
        "IDEOLOGY",
        "NOTORIETY",
        "ORGANIZATIONAL_GAIN",
        "PERSONAL_GAIN",
        "PERSONAL_SATISFACTION",
        "REVENGE",
        "UNPREDICTABLE",
        "AttackResourceLevels",
        "INDIVIDUAL",
        "CLUB",
        "CONTEST",
        "TEAM",
        "ORGANIZATION",
        "GOVERNMENT",
        "HashingAlgorithms",
        "MD5",
        "MD6",
        "RIPEMD_160",
        "SHA_1",
        "SHA_224",
        "SHA_256",
        "SHA_384",
        "SHA_512",
        "SHA3_224",
        "SHA3_256",
        "SHA3_384",
        "SHA3_512",
        "SSDEEP",
        "WHIRLPOOL",
        "IdentityClasses",
        "GROUP",
        "CLASS",
        "UNKNOWN",
        "IndicatorLabels",
        "ANOMALOUS_ACTIVITY",
        "ANONYMIZATION",
        "BENIGN",
        "COMPROMISED",
        "MALICIOUS_ACTIVITY",
        "ATTRIBUTION",
        "IndustrySectors",
        "AGRICULTURE",
        "AEROSPACE",
        "AUTOMOTIVE",
        "COMMUNICATIONS",
        "CONSTRUCTION",
        "DEFENCE",
        "EDUCATION",
        "ENERGY",
        "ENTERTAINMENT",
        "FINANCIAL_SERVICES",
        "GOVERNMENT_NATIONAL",
        "GOVERNMENT_REGIONAL",
        "GOVERNMENT_LOCAL",
        "GOVERNMENT_PUBLIC_SERVICES",
        "HEALTHCARE",
        "HOSPITALITY_LEISURE",
        "INFRASTRUCTURE",
        "INSURANCE",
        "MANUFACTURING",
        "MINING",
        "NON_PROFIT",
        "PHARMACEUTICALS",
        "RETAIL",
        "TECHNOLOGY",
        "TELECOMMUNICATIONS",
        "TRANSPORTATION",
        "UTILITIES",
        "MalwareLabels",
        "ADWARE",
        "BACKDOOR",
        "BOT",
        "DDOS",
        "DROPPER",
        "EXPLOT_KIT",
        "KEYLOGGER",
        "RANSOMWARE",
        "REMOTE_ACCESS_TROJAN",
        "RESOURCE_EXPLOITATION",
        "ROGUE_SECURITY_SOFTWARE",
        "ROOTKIT",
        "SCREEN_CAPTURE",
        "SPYWARE",
        "TROJAN",
        "VIRUS",
        "WORM",
        "ReportLabels",
        "THREAT_REPORT",
        "ATTACK_PATTERN",
        "CAMPAIGN",
        "IDENTITY",
        "INDICATOR",
        "INTRUSION_SET",
        "MALWARE",
        "THREAT_ACTOR",
        "TOOL",
        "VULNERABILITY",
        "ThreatActorLabels",
        "ACTIVIST",
        "COMPETITOR",
        "CRIME_SYNDICATE",
        "CRIMINAL",
        "HACKER",
        "INSIDER_ACCIDENTAL",
        "INSIDER_DISGRUNTLED",
        "NATION_STATE",
        "SENSATIONALIST",
        "SPY",
        "TERRORIST",
        "ThreatActorRoles",
        "AGENT",
        "DIRECTOR",
        "INDEPENDENT",
        "INFRASTRUCTURE_ARCHITECT",
        "INFRASTRUCTURE_OPERATOR",
        "MALWARE_AUTHOR",
        "SPONSOR",
        "ThreatActorSophistications",
        "NONE",
        "MINIMAL",
        "INTERMEDIATE",
        "ADVANCED",
        "EXPERT",
        "INNOVATOR",
        "STRATEGIC",
        "ToolLabels",
        "DENIAL_OF_SERVICE",
        "EXPLOITATION",
        "INFORMATION_GATHERING",
        "NETWORK_CAPTURE",
        "CREDENTIAL_EXPLOITATION",
        "REMOTE_ACCESS",
        "VULNERABILITY_SCANNING",
        "RelationshipTypes",
        "TARGETS",
        "USES",
        "ATTRIBUTED_TO",
        "MITIGATES",
        "INDICATES",
        "VARIANT_OF",
        "IMPERSONATES"
      ],
      "mappings": ";;;;;;AAAO,IAAMA,iBAAiB,GAAG;AAC7BC,EAAAA,UAAU,EAAE,YADiB;AAE7BC,EAAAA,QAAQ,EAAE,UAFmB;AAG7BC,EAAAA,SAAS,EAAE,WAHkB;AAI7BC,EAAAA,QAAQ,EAAE,UAJmB;AAK7BC,EAAAA,SAAS,EAAE,WALkB;AAM7BC,EAAAA,mBAAmB,EAAE,qBANQ;AAO7BC,EAAAA,aAAa,EAAE,eAPc;AAQ7BC,EAAAA,qBAAqB,EAAE,uBARM;AAS7BC,EAAAA,OAAO,EAAE,SAToB;AAU7BC,EAAAA,aAAa,EAAE;AAVc,CAA1B;;AAaA,IAAMC,oBAAoB,GAAG;AAChCC,EAAAA,UAAU,EAAE,YADoB;AAEhCC,EAAAA,IAAI,EAAE,MAF0B;AAGhCC,EAAAA,OAAO,EAAE,SAHuB;AAIhCC,EAAAA,IAAI,EAAE,MAJ0B;AAKhCC,EAAAA,YAAY,EAAE,cALkB;AAMhCC,EAAAA,UAAU,EAAE;AANoB,CAA7B;;AASA,IAAMC,iBAAiB,GAAG;AAC7BC,EAAAA,GAAG,EAAE,KADwB;AAE7BC,EAAAA,GAAG,EAAE,KAFwB;AAG7BC,EAAAA,UAAU,EAAE,YAHiB;AAI7BC,EAAAA,KAAK,EAAE,OAJsB;AAK7BC,EAAAA,OAAO,EAAE,SALoB;AAM7BC,EAAAA,OAAO,EAAE,SANoB;AAO7BC,EAAAA,OAAO,EAAE,SAPoB;AAQ7BC,EAAAA,OAAO,EAAE,SARoB;AAS7BC,EAAAA,QAAQ,EAAE,UATmB;AAU7BC,EAAAA,QAAQ,EAAE,UAVmB;AAW7BC,EAAAA,QAAQ,EAAE,UAXmB;AAY7BC,EAAAA,QAAQ,EAAE,UAZmB;AAa7BC,EAAAA,MAAM,EAAE,QAbqB;AAc7BC,EAAAA,SAAS,EAAE;AAdkB,CAA1B;;AAiBA,IAAMC,eAAe,GAAG;AAC3BrB,EAAAA,UAAU,EAAE,YADe;AAE3BsB,EAAAA,KAAK,EAAE,OAFoB;AAG3BlB,EAAAA,YAAY,EAAE,cAHa;AAI3BmB,EAAAA,KAAK,EAAE,OAJoB;AAK3BC,EAAAA,OAAO,EAAE;AALkB,CAAxB;;AAQA,IAAMC,eAAe,GAAG;AAC3BC,EAAAA,kBAAkB,EAAE,oBADO;AAE3BC,EAAAA,aAAa,EAAE,eAFY;AAG3BC,EAAAA,MAAM,EAAE,QAHmB;AAI3BC,EAAAA,WAAW,EAAE,aAJc;AAK3BC,EAAAA,kBAAkB,EAAE,oBALO;AAM3BC,EAAAA,WAAW,EAAE;AANc,CAAxB;;AASA,IAAMC,eAAe,GAAG;AAC3BC,EAAAA,WAAW,EAAE,aADc;AAE3BC,EAAAA,SAAS,EAAE,WAFgB;AAG3BC,EAAAA,UAAU,EAAE,YAHe;AAI3BC,EAAAA,cAAc,EAAE,gBAJW;AAK3BC,EAAAA,YAAY,EAAE,cALa;AAM3BC,EAAAA,OAAO,EAAE,SANkB;AAO3BC,EAAAA,SAAS,EAAE,WAPgB;AAQ3BC,EAAAA,MAAM,EAAE,QARmB;AAS3BC,EAAAA,aAAa,EAAE,eATY;AAU3BC,EAAAA,kBAAkB,EAAE,oBAVO;AAW3BC,EAAAA,mBAAmB,EAAE,qBAXM;AAY3BC,EAAAA,mBAAmB,EAAE,qBAZM;AAa3BC,EAAAA,gBAAgB,EAAE,kBAbS;AAc3BC,EAAAA,0BAA0B,EAAE,4BAdD;AAe3BC,EAAAA,UAAU,EAAE,YAfe;AAgB3BC,EAAAA,mBAAmB,EAAE,qBAhBM;AAiB3BC,EAAAA,cAAc,EAAE,gBAjBW;AAkB3BC,EAAAA,SAAS,EAAE,WAlBgB;AAmB3BC,EAAAA,aAAa,EAAE,eAnBY;AAoB3BC,EAAAA,MAAM,EAAE,QApBmB;AAqB3BC,EAAAA,UAAU,EAAE,YArBe;AAsB3BC,EAAAA,eAAe,EAAE,iBAtBU;AAuB3BC,EAAAA,MAAM,EAAE,QAvBmB;AAwB3BC,EAAAA,UAAU,EAAE,YAxBe;AAyB3BC,EAAAA,kBAAkB,EAAE,oBAzBO;AA0B3BC,EAAAA,cAAc,EAAE,gBA1BW;AA2B3BC,EAAAA,SAAS,EAAE;AA3BgB,CAAxB;;AA8BA,IAAMC,aAAa,GAAG;AACzBC,EAAAA,MAAM,EAAE,QADiB;AAEzBC,EAAAA,QAAQ,EAAE,UAFe;AAGzBC,EAAAA,GAAG,EAAE,KAHoB;AAIzBC,EAAAA,IAAI,EAAE,MAJmB;AAKzBC,EAAAA,OAAO,EAAE,SALgB;AAMzBC,EAAAA,UAAU,EAAE,YANa;AAOzBC,EAAAA,SAAS,EAAE,WAPc;AAQzBC,EAAAA,UAAU,EAAE,YARa;AASzBC,EAAAA,oBAAoB,EAAE,sBATG;AAUzBC,EAAAA,qBAAqB,EAAE,uBAVE;AAWzBC,EAAAA,uBAAuB,EAAE,yBAXA;AAYzBC,EAAAA,OAAO,EAAE,SAZgB;AAazBC,EAAAA,cAAc,EAAE,gBAbS;AAczBC,EAAAA,OAAO,EAAE,SAdgB;AAezBC,EAAAA,MAAM,EAAE,QAfiB;AAgBzBC,EAAAA,KAAK,EAAE,OAhBkB;AAiBzBC,EAAAA,IAAI,EAAE;AAjBmB,CAAtB;;AAoBA,IAAMC,YAAY,GAAG;AACxBC,EAAAA,aAAa,EAAE,eADS;AAExBC,EAAAA,cAAc,EAAE,gBAFQ;AAGxBC,EAAAA,QAAQ,EAAE,UAHc;AAIxBC,EAAAA,QAAQ,EAAE,UAJc;AAKxBC,EAAAA,SAAS,EAAE,WALa;AAMxBC,EAAAA,aAAa,EAAE,eANS;AAOxBC,EAAAA,OAAO,EAAE,SAPe;AAQxBC,EAAAA,YAAY,EAAE,cARU;AASxBC,EAAAA,IAAI,EAAE,MATkB;AAUxBC,EAAAA,aAAa,EAAE;AAVS,CAArB;;AAaA,IAAMC,iBAAiB,GAAG;AAC7BC,EAAAA,QAAQ,EAAE,UADmB;AAE7BC,EAAAA,UAAU,EAAE,YAFiB;AAG7BC,EAAAA,eAAe,EAAE,iBAHY;AAI7BC,EAAAA,QAAQ,EAAE,UAJmB;AAK7BC,EAAAA,MAAM,EAAE,QALqB;AAM7BC,EAAAA,kBAAkB,EAAE,oBANS;AAO7BC,EAAAA,mBAAmB,EAAE,qBAPQ;AAQ7BC,EAAAA,YAAY,EAAE,cARe;AAS7BC,EAAAA,cAAc,EAAE,gBATa;AAU7BC,EAAAA,GAAG,EAAE,KAVwB;AAW7BC,EAAAA,SAAS,EAAE;AAXkB,CAA1B;;AAcA,IAAMC,gBAAgB,GAAG;AAC5BC,EAAAA,KAAK,EAAE,OADqB;AAE5BC,EAAAA,QAAQ,EAAE,UAFkB;AAG5BC,EAAAA,WAAW,EAAE,aAHe;AAI5BC,EAAAA,wBAAwB,EAAE,0BAJE;AAK5BC,EAAAA,uBAAuB,EAAE,yBALG;AAM5BC,EAAAA,cAAc,EAAE,gBANY;AAO5BC,EAAAA,OAAO,EAAE;AAPmB,CAAzB;;AAUA,IAAMC,0BAA0B,GAAG;AACtCC,EAAAA,IAAI,EAAE,MADgC;AAEtCC,EAAAA,OAAO,EAAE,SAF6B;AAGtCC,EAAAA,YAAY,EAAE,cAHwB;AAItCC,EAAAA,QAAQ,EAAE,UAJ4B;AAKtCC,EAAAA,MAAM,EAAE,QAL8B;AAMtCC,EAAAA,SAAS,EAAE,WAN2B;AAOtCC,EAAAA,SAAS,EAAE;AAP2B,CAAnC;;AAUA,IAAMC,UAAU,GAAG;AACtBC,EAAAA,iBAAiB,EAAE,mBADG;AAEtBC,EAAAA,YAAY,EAAE,cAFQ;AAGtBC,EAAAA,qBAAqB,EAAE,uBAHD;AAItBC,EAAAA,eAAe,EAAE,iBAJK;AAKtBC,EAAAA,uBAAuB,EAAE,yBALH;AAMtBC,EAAAA,aAAa,EAAE,eANO;AAOtBC,EAAAA,sBAAsB,EAAE;AAPF,CAAnB;;AAUA,IAAMC,iBAAiB,GAAG;AAC7BC,EAAAA,OAAO,EAAE,SADoB;AAE7BC,EAAAA,IAAI,EAAE,MAFuB;AAG7BC,EAAAA,aAAa,EAAE,eAHc;AAI7BC,EAAAA,SAAS,EAAE,WAJkB;AAK7BC,EAAAA,SAAS,EAAE,WALkB;AAM7BC,EAAAA,UAAU,EAAE,YANiB;AAO7BC,EAAAA,YAAY,EAAE;AAPe,CAA1B",
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\constants",
      "sourcesContent": [
        "export const AttackMotivations = {\r\n    ACCIDENTAL: 'accidental',\r\n    COERCION: 'coercion',\r\n    DOMINANCE: 'dominance',\r\n    IDEOLOGY: 'ideology',\r\n    NOTORIETY: 'notoriety',\r\n    ORGANIZATIONAL_GAIN: 'organizational-gain',\r\n    PERSONAL_GAIN: 'personal-gain',\r\n    PERSONAL_SATISFACTION: 'personal-satisfaction',\r\n    REVENGE: 'revenge',\r\n    UNPREDICTABLE: 'unpredictable'\r\n}\r\n\r\nexport const AttackResourceLevels = {\r\n    INDIVIDUAL: 'individual',\r\n    CLUB: 'club',\r\n    CONTEST: 'contest',\r\n    TEAM: 'team',\r\n    ORGANIZATION: 'organization',\r\n    GOVERNMENT: 'government'\r\n}\r\n\r\nexport const HashingAlgorithms = {\r\n    MD5: 'MD5',\r\n    MD6: 'MD6',\r\n    RIPEMD_160: 'RIPEMD-160',\r\n    SHA_1: 'SHA-1',\r\n    SHA_224: 'SHA-224',\r\n    SHA_256: 'SHA-256',\r\n    SHA_384: 'SHA-384',\r\n    SHA_512: 'SHA-512',\r\n    SHA3_224: 'SHA3-224',\r\n    SHA3_256: 'SHA3-256',\r\n    SHA3_384: 'SHA3-384',\r\n    SHA3_512: 'SHA3-512',\r\n    SSDEEP: 'ssdeep',\r\n    WHIRLPOOL: 'WHIRLPOOL'\r\n}\r\n\r\nexport const IdentityClasses = {\r\n    INDIVIDUAL: 'individual',\r\n    GROUP: 'group',\r\n    ORGANIZATION: 'organization',\r\n    CLASS: 'class',\r\n    UNKNOWN: 'unknown'\r\n}\r\n\r\nexport const IndicatorLabels = {\r\n    ANOMALOUS_ACTIVITY: 'anomalous-activity',\r\n    ANONYMIZATION: 'anonymization',\r\n    BENIGN: 'benign',\r\n    COMPROMISED: 'compromised',\r\n    MALICIOUS_ACTIVITY: 'malicious-activity',\r\n    ATTRIBUTION: 'attribution'\r\n}\r\n\r\nexport const IndustrySectors = {\r\n    AGRICULTURE: 'agriculture',\r\n    AEROSPACE: 'aerospace',\r\n    AUTOMOTIVE: 'automotive',\r\n    COMMUNICATIONS: 'communications',\r\n    CONSTRUCTION: 'construction',\r\n    DEFENCE: 'defence',\r\n    EDUCATION: 'education',\r\n    ENERGY: 'energy',\r\n    ENTERTAINMENT: 'entertainment',\r\n    FINANCIAL_SERVICES: 'financial-services',\r\n    GOVERNMENT_NATIONAL: 'government-national',\r\n    GOVERNMENT_REGIONAL: 'government-regional',\r\n    GOVERNMENT_LOCAL: 'government-local',\r\n    GOVERNMENT_PUBLIC_SERVICES: 'government-public-services',\r\n    HEALTHCARE: 'healthcare',\r\n    HOSPITALITY_LEISURE: 'hospitality-leisure',\r\n    INFRASTRUCTURE: 'infrastructure',\r\n    INSURANCE: 'insurance',\r\n    MANUFACTURING: 'manufacturing',\r\n    MINING: 'mining',\r\n    NON_PROFIT: 'non-profit',\r\n    PHARMACEUTICALS: 'pharmaceuticals',\r\n    RETAIL: 'retail',\r\n    TECHNOLOGY: 'technology',\r\n    TELECOMMUNICATIONS: 'telecommunications',\r\n    TRANSPORTATION: 'transportation',\r\n    UTILITIES: 'utilities'\r\n}\r\n\r\nexport const MalwareLabels = {\r\n    ADWARE: 'adware',\r\n    BACKDOOR: 'backdoor',\r\n    BOT: 'bot',\r\n    DDOS: 'ddos',\r\n    DROPPER: 'dropper',\r\n    EXPLOT_KIT: 'explot-kit',\r\n    KEYLOGGER: 'keylogger',\r\n    RANSOMWARE: 'ransomware',\r\n    REMOTE_ACCESS_TROJAN: 'remote-access-trojan',\r\n    RESOURCE_EXPLOITATION: 'resource-exploitation',\r\n    ROGUE_SECURITY_SOFTWARE: 'rogue-security-software',\r\n    ROOTKIT: 'rootkit',\r\n    SCREEN_CAPTURE: 'screen-capture',\r\n    SPYWARE: 'spyware',\r\n    TROJAN: 'trojan',\r\n    VIRUS: 'virus',\r\n    WORM: 'worm'\r\n}\r\n\r\nexport const ReportLabels = {\r\n    THREAT_REPORT: 'threat-report',\r\n    ATTACK_PATTERN: 'attack-pattern',\r\n    CAMPAIGN: 'campaign',\r\n    IDENTITY: 'identity',\r\n    INDICATOR: 'indicator',\r\n    INTRUSION_SET: 'intrusion-set',\r\n    MALWARE: 'malware',\r\n    THREAT_ACTOR: 'threat-actor',\r\n    TOOL: 'tool',\r\n    VULNERABILITY: 'vulnerability'\r\n}\r\n\r\nexport const ThreatActorLabels = {\r\n    ACTIVIST: 'activist',\r\n    COMPETITOR: 'competitor',\r\n    CRIME_SYNDICATE: 'crime-syndicate',\r\n    CRIMINAL: 'criminal',\r\n    HACKER: 'hacker',\r\n    INSIDER_ACCIDENTAL: 'insider-accidental',\r\n    INSIDER_DISGRUNTLED: 'insider-disgruntled',\r\n    NATION_STATE: 'nation-state',\r\n    SENSATIONALIST: 'sensationalist',\r\n    SPY: 'spy',\r\n    TERRORIST: 'terrorist'\r\n}\r\n\r\nexport const ThreatActorRoles = {\r\n    AGENT: 'agent',\r\n    DIRECTOR: 'director',\r\n    INDEPENDENT: 'independent',\r\n    INFRASTRUCTURE_ARCHITECT: 'infrastructure-architect',\r\n    INFRASTRUCTURE_OPERATOR: 'infrastructure-operator',\r\n    MALWARE_AUTHOR: 'malware-author',\r\n    SPONSOR: 'sponsor'\r\n}\r\n\r\nexport const ThreatActorSophistications = {\r\n    NONE: 'none',\r\n    MINIMAL: 'minimal',\r\n    INTERMEDIATE: 'intermediate',\r\n    ADVANCED: 'advanced',\r\n    EXPERT: 'expert',\r\n    INNOVATOR: 'innovator',\r\n    STRATEGIC: 'strategic'\r\n}\r\n\r\nexport const ToolLabels = {\r\n    DENIAL_OF_SERVICE: 'denial-of-service',\r\n    EXPLOITATION: 'exploitation',\r\n    INFORMATION_GATHERING: 'information-gathering',\r\n    NETWORK_CAPTURE: 'network-capture',\r\n    CREDENTIAL_EXPLOITATION: 'credential-exploitation',\r\n    REMOTE_ACCESS: 'remote-access',\r\n    VULNERABILITY_SCANNING: 'vulnerability-scanning'\r\n}\r\n\r\nexport const RelationshipTypes = {\r\n    TARGETS: 'targets',\r\n    USES: 'uses',\r\n    ATTRIBUTED_TO: 'attributed-to',\r\n    MITIGATES: 'mitigates',\r\n    INDICATES: 'indicates',\r\n    VARIANT_OF: 'variant-of',\r\n    IMPERSONATES: 'impersonates'\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1565901732833
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\lib\\\\definitions\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"filename\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\lib\\\\definitions\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\definitions",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\definitions\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\definitions\\index.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\definitions\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\definitions",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _bundle = _interopRequireDefault(require(\"./bundle\"));\n\nvar _granularMarking = _interopRequireDefault(require(\"./granularMarking\"));\n\nvar _marking = _interopRequireDefault(require(\"./marking\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar _default = {\n  Bundle: _bundle[\"default\"],\n  GranularMarking: _granularMarking[\"default\"],\n  Marking: _marking[\"default\"]\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIkJ1bmRsZSIsIkdyYW51bGFyTWFya2luZyIsIk1hcmtpbmciXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7OztlQUVlO0FBQ1hBLEVBQUFBLE1BQU0sRUFBTkEsa0JBRFc7QUFFWEMsRUFBQUEsZUFBZSxFQUFmQSwyQkFGVztBQUdYQyxFQUFBQSxPQUFPLEVBQVBBO0FBSFcsQyIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXFphY2ggU2hhbWVzXFxEb2N1bWVudHNcXERldmVsb3BtZW50XFxqcy0yLXN0aXhcXGxpYlxcZGVmaW5pdGlvbnMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQnVuZGxlIGZyb20gJy4vYnVuZGxlJ1xyXG5pbXBvcnQgR3JhbnVsYXJNYXJraW5nIGZyb20gJy4vZ3JhbnVsYXJNYXJraW5nJ1xyXG5pbXBvcnQgTWFya2luZyBmcm9tICcuL21hcmtpbmcnXHJcblxyXG5leHBvcnQgZGVmYXVsdCB7XHJcbiAgICBCdW5kbGUsXHJcbiAgICBHcmFudWxhck1hcmtpbmcsXHJcbiAgICBNYXJraW5nXHJcbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "Bundle",
        "GranularMarking",
        "Marking"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;;;eAEe;AACXA,EAAAA,MAAM,EAANA,kBADW;AAEXC,EAAAA,eAAe,EAAfA,2BAFW;AAGXC,EAAAA,OAAO,EAAPA;AAHW,C",
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\definitions",
      "sourcesContent": [
        "import Bundle from './bundle'\r\nimport GranularMarking from './granularMarking'\r\nimport Marking from './marking'\r\n\r\nexport default {\r\n    Bundle,\r\n    GranularMarking,\r\n    Marking\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1565903308714
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\lib\\\\definitions\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"filename\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\lib\\\\definitions\\\\bundle.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\definitions",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\definitions\\bundle.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\definitions\\bundle.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\definitions\\bundle.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\definitions",
        "sourceFileName": "bundle.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar Bundle =\n/*#__PURE__*/\nfunction () {\n  function Bundle() {// TODO: Generate ID\n\n    _classCallCheck(this, Bundle);\n\n    _defineProperty(this, \"type\", 'bundle');\n\n    _defineProperty(this, \"id\", null);\n\n    _defineProperty(this, \"specVersion\", \"2.0\");\n\n    _defineProperty(this, \"objects\", []);\n  }\n\n  _createClass(Bundle, [{\n    key: \"addObject\",\n    value: function addObject(object) {\n      if (!(object instanceof Base)) throw Error('You cannot add a non-object to a bundle!');\n      this.objects.push(object);\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      if (!this.type) throw Error(\"STIX 2.0 requires a type!\");\n      if (!this.id) throw Error(\"STIX 2.0 requires an ID!\"); // Compile objects as JSON\n\n      var outputObjects = [];\n\n      for (var i in this.objects) {\n        outputObjects.push(i.toJSON());\n      }\n\n      return {\n        type: this.type,\n        id: this.id,\n        spec_version: this.specVersion,\n        objects: outputObjects\n      };\n    }\n  }, {\n    key: \"id\",\n    set: function set(value) {\n      this.id = \"\".concat(this.type, \"--\").concat(value);\n    }\n  }]);\n\n  return Bundle;\n}();\n\nvar _default = Bundle;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJ1bmRsZS5qcyJdLCJuYW1lcyI6WyJCdW5kbGUiLCJvYmplY3QiLCJCYXNlIiwiRXJyb3IiLCJvYmplY3RzIiwicHVzaCIsInR5cGUiLCJpZCIsIm91dHB1dE9iamVjdHMiLCJpIiwidG9KU09OIiwic3BlY192ZXJzaW9uIiwic3BlY1ZlcnNpb24iLCJ2YWx1ZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0lBQU1BLE07OztBQU9GLG9CQUFjLENBQ1Y7O0FBRFU7O0FBQUEsa0NBTFAsUUFLTzs7QUFBQSxnQ0FKVCxJQUlTOztBQUFBLHlDQUhBLEtBR0E7O0FBQUEscUNBRkosRUFFSTtBQUViOzs7OzhCQU1TQyxNLEVBQVE7QUFDZCxVQUFJLEVBQUVBLE1BQU0sWUFBWUMsSUFBcEIsQ0FBSixFQUNJLE1BQU1DLEtBQUssQ0FBQywwQ0FBRCxDQUFYO0FBRUosV0FBS0MsT0FBTCxDQUFhQyxJQUFiLENBQWtCSixNQUFsQjtBQUNIOzs7NkJBRVE7QUFDTCxVQUFJLENBQUMsS0FBS0ssSUFBVixFQUNJLE1BQU1ILEtBQUssNkJBQVg7QUFDSixVQUFJLENBQUMsS0FBS0ksRUFBVixFQUNJLE1BQU1KLEtBQUssNEJBQVgsQ0FKQyxDQU1MOztBQUNBLFVBQUlLLGFBQWEsR0FBRyxFQUFwQjs7QUFDQSxXQUFLLElBQUlDLENBQVQsSUFBYyxLQUFLTCxPQUFuQjtBQUNJSSxRQUFBQSxhQUFhLENBQUNILElBQWQsQ0FBbUJJLENBQUMsQ0FBQ0MsTUFBRixFQUFuQjtBQURKOztBQUdBLGFBQU87QUFDSEosUUFBQUEsSUFBSSxFQUFFLEtBQUtBLElBRFI7QUFFSEMsUUFBQUEsRUFBRSxFQUFFLEtBQUtBLEVBRk47QUFHSEksUUFBQUEsWUFBWSxFQUFFLEtBQUtDLFdBSGhCO0FBSUhSLFFBQUFBLE9BQU8sRUFBRUk7QUFKTixPQUFQO0FBTUg7OztzQkE1Qk1LLEssRUFBTztBQUNWLFdBQUtOLEVBQUwsYUFBYSxLQUFLRCxJQUFsQixlQUEyQk8sS0FBM0I7QUFDSDs7Ozs7O2VBNkJVYixNIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcWmFjaCBTaGFtZXNcXERvY3VtZW50c1xcRGV2ZWxvcG1lbnRcXGpzLTItc3RpeFxcbGliXFxkZWZpbml0aW9ucyIsInNvdXJjZXNDb250ZW50IjpbImNsYXNzIEJ1bmRsZSB7XHJcblxyXG4gICAgdHlwZSA9ICdidW5kbGUnXHJcbiAgICBpZCA9IG51bGxcclxuICAgIHNwZWNWZXJzaW9uID0gXCIyLjBcIlxyXG4gICAgb2JqZWN0cyA9IFtdXHJcblxyXG4gICAgY29uc3RydWN0b3IoKSB7XHJcbiAgICAgICAgLy8gVE9ETzogR2VuZXJhdGUgSURcclxuICAgIH1cclxuXHJcbiAgICBzZXQgaWQodmFsdWUpIHtcclxuICAgICAgICB0aGlzLmlkID0gYCR7dGhpcy50eXBlfS0tJHt2YWx1ZX1gXHJcbiAgICB9XHJcblxyXG4gICAgYWRkT2JqZWN0KG9iamVjdCkge1xyXG4gICAgICAgIGlmICghKG9iamVjdCBpbnN0YW5jZW9mIEJhc2UpKVxyXG4gICAgICAgICAgICB0aHJvdyBFcnJvcignWW91IGNhbm5vdCBhZGQgYSBub24tb2JqZWN0IHRvIGEgYnVuZGxlIScpXHJcblxyXG4gICAgICAgIHRoaXMub2JqZWN0cy5wdXNoKG9iamVjdClcclxuICAgIH1cclxuXHJcbiAgICB0b0pTT04oKSB7XHJcbiAgICAgICAgaWYgKCF0aGlzLnR5cGUpXHJcbiAgICAgICAgICAgIHRocm93IEVycm9yKGBTVElYIDIuMCByZXF1aXJlcyBhIHR5cGUhYClcclxuICAgICAgICBpZiAoIXRoaXMuaWQpXHJcbiAgICAgICAgICAgIHRocm93IEVycm9yKGBTVElYIDIuMCByZXF1aXJlcyBhbiBJRCFgKVxyXG5cclxuICAgICAgICAvLyBDb21waWxlIG9iamVjdHMgYXMgSlNPTlxyXG4gICAgICAgIGxldCBvdXRwdXRPYmplY3RzID0gW11cclxuICAgICAgICBmb3IgKGxldCBpIGluIHRoaXMub2JqZWN0cylcclxuICAgICAgICAgICAgb3V0cHV0T2JqZWN0cy5wdXNoKGkudG9KU09OKCkpXHJcblxyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIHR5cGU6IHRoaXMudHlwZSxcclxuICAgICAgICAgICAgaWQ6IHRoaXMuaWQsXHJcbiAgICAgICAgICAgIHNwZWNfdmVyc2lvbjogdGhpcy5zcGVjVmVyc2lvbixcclxuICAgICAgICAgICAgb2JqZWN0czogb3V0cHV0T2JqZWN0c1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgQnVuZGxlIl19",
    "map": {
      "version": 3,
      "sources": [
        "bundle.js"
      ],
      "names": [
        "Bundle",
        "object",
        "Base",
        "Error",
        "objects",
        "push",
        "type",
        "id",
        "outputObjects",
        "i",
        "toJSON",
        "spec_version",
        "specVersion",
        "value"
      ],
      "mappings": ";;;;;;;;;;;;;;;IAAMA,M;;;AAOF,oBAAc,CACV;;AADU;;AAAA,kCALP,QAKO;;AAAA,gCAJT,IAIS;;AAAA,yCAHA,KAGA;;AAAA,qCAFJ,EAEI;AAEb;;;;8BAMSC,M,EAAQ;AACd,UAAI,EAAEA,MAAM,YAAYC,IAApB,CAAJ,EACI,MAAMC,KAAK,CAAC,0CAAD,CAAX;AAEJ,WAAKC,OAAL,CAAaC,IAAb,CAAkBJ,MAAlB;AACH;;;6BAEQ;AACL,UAAI,CAAC,KAAKK,IAAV,EACI,MAAMH,KAAK,6BAAX;AACJ,UAAI,CAAC,KAAKI,EAAV,EACI,MAAMJ,KAAK,4BAAX,CAJC,CAML;;AACA,UAAIK,aAAa,GAAG,EAApB;;AACA,WAAK,IAAIC,CAAT,IAAc,KAAKL,OAAnB;AACII,QAAAA,aAAa,CAACH,IAAd,CAAmBI,CAAC,CAACC,MAAF,EAAnB;AADJ;;AAGA,aAAO;AACHJ,QAAAA,IAAI,EAAE,KAAKA,IADR;AAEHC,QAAAA,EAAE,EAAE,KAAKA,EAFN;AAGHI,QAAAA,YAAY,EAAE,KAAKC,WAHhB;AAIHR,QAAAA,OAAO,EAAEI;AAJN,OAAP;AAMH;;;sBA5BMK,K,EAAO;AACV,WAAKN,EAAL,aAAa,KAAKD,IAAlB,eAA2BO,KAA3B;AACH;;;;;;eA6BUb,M",
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\definitions",
      "sourcesContent": [
        "class Bundle {\r\n\r\n    type = 'bundle'\r\n    id = null\r\n    specVersion = \"2.0\"\r\n    objects = []\r\n\r\n    constructor() {\r\n        // TODO: Generate ID\r\n    }\r\n\r\n    set id(value) {\r\n        this.id = `${this.type}--${value}`\r\n    }\r\n\r\n    addObject(object) {\r\n        if (!(object instanceof Base))\r\n            throw Error('You cannot add a non-object to a bundle!')\r\n\r\n        this.objects.push(object)\r\n    }\r\n\r\n    toJSON() {\r\n        if (!this.type)\r\n            throw Error(`STIX 2.0 requires a type!`)\r\n        if (!this.id)\r\n            throw Error(`STIX 2.0 requires an ID!`)\r\n\r\n        // Compile objects as JSON\r\n        let outputObjects = []\r\n        for (let i in this.objects)\r\n            outputObjects.push(i.toJSON())\r\n\r\n        return {\r\n            type: this.type,\r\n            id: this.id,\r\n            spec_version: this.specVersion,\r\n            objects: outputObjects\r\n        }\r\n    }\r\n}\r\n\r\nexport default Bundle"
      ]
    },
    "sourceType": "script",
    "mtime": 1565901711100
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\lib\\\\definitions\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"filename\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\lib\\\\definitions\\\\granularMarking.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\definitions",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\definitions\\granularMarking.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\definitions\\granularMarking.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\definitions\\granularMarking.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\definitions",
        "sourceFileName": "granularMarking.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _marking = _interopRequireDefault(require(\"./marking\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar GranularMarking =\n/*#__PURE__*/\nfunction () {\n  function GranularMarking() {// Nothing for now\n\n    _classCallCheck(this, GranularMarking);\n\n    _defineProperty(this, \"markingRef\", null);\n\n    _defineProperty(this, \"selectors\", []);\n  }\n\n  _createClass(GranularMarking, [{\n    key: \"addSelector\",\n    value: function addSelector(selector) {\n      if (!(selector instanceof String)) throw Error('A selector must be a string!');\n      this.selectors.append(selector);\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      if (!this.markingRef) throw Error('STIX 2.0 requires a reference to a marking definition!');\n      return {\n        marking_ref: this.markingRef,\n        selectors: this.selectors\n      };\n    }\n  }, {\n    key: \"markingRef\",\n    set: function set(marking) {\n      if (marking instanceof _marking[\"default\"]) {\n        this.markingRef = marking.id;\n      } else {\n        this.markingRef = marking;\n      }\n    }\n  }]);\n\n  return GranularMarking;\n}();\n\nvar _default = GranularMarking;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyYW51bGFyTWFya2luZy5qcyJdLCJuYW1lcyI6WyJHcmFudWxhck1hcmtpbmciLCJzZWxlY3RvciIsIlN0cmluZyIsIkVycm9yIiwic2VsZWN0b3JzIiwiYXBwZW5kIiwibWFya2luZ1JlZiIsIm1hcmtpbmdfcmVmIiwibWFya2luZyIsIk1hcmtpbmciLCJpZCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7Ozs7Ozs7Ozs7SUFFTUEsZTs7O0FBS0YsNkJBQWMsQ0FDVjs7QUFEVTs7QUFBQSx3Q0FIRCxJQUdDOztBQUFBLHVDQUZGLEVBRUU7QUFFYjs7OztnQ0FVV0MsUSxFQUFVO0FBQ2xCLFVBQUksRUFBRUEsUUFBUSxZQUFZQyxNQUF0QixDQUFKLEVBQ0ksTUFBTUMsS0FBSyxDQUFDLDhCQUFELENBQVg7QUFFSixXQUFLQyxTQUFMLENBQWVDLE1BQWYsQ0FBc0JKLFFBQXRCO0FBQ0g7Ozs2QkFFUTtBQUNMLFVBQUksQ0FBQyxLQUFLSyxVQUFWLEVBQ0ksTUFBTUgsS0FBSyxDQUFDLHdEQUFELENBQVg7QUFFSixhQUFRO0FBQ0pJLFFBQUFBLFdBQVcsRUFBRSxLQUFLRCxVQURkO0FBRUpGLFFBQUFBLFNBQVMsRUFBRSxLQUFLQTtBQUZaLE9BQVI7QUFJSDs7O3NCQXZCY0ksTyxFQUFTO0FBQ3BCLFVBQUlBLE9BQU8sWUFBWUMsbUJBQXZCLEVBQWdDO0FBQzVCLGFBQUtILFVBQUwsR0FBa0JFLE9BQU8sQ0FBQ0UsRUFBMUI7QUFDSCxPQUZELE1BRU87QUFDSCxhQUFLSixVQUFMLEdBQWtCRSxPQUFsQjtBQUNIO0FBQ0o7Ozs7OztlQW9CVVIsZSIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXFphY2ggU2hhbWVzXFxEb2N1bWVudHNcXERldmVsb3BtZW50XFxqcy0yLXN0aXhcXGxpYlxcZGVmaW5pdGlvbnMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgTWFya2luZyBmcm9tICcuL21hcmtpbmcnXHJcblxyXG5jbGFzcyBHcmFudWxhck1hcmtpbmcge1xyXG5cclxuICAgIG1hcmtpbmdSZWYgPSBudWxsXHJcbiAgICBzZWxlY3RvcnMgPSBbXVxyXG4gICAgXHJcbiAgICBjb25zdHJ1Y3RvcigpIHtcclxuICAgICAgICAvLyBOb3RoaW5nIGZvciBub3dcclxuICAgIH1cclxuXHJcbiAgICBzZXQgbWFya2luZ1JlZihtYXJraW5nKSB7XHJcbiAgICAgICAgaWYgKG1hcmtpbmcgaW5zdGFuY2VvZiBNYXJraW5nKSB7XHJcbiAgICAgICAgICAgIHRoaXMubWFya2luZ1JlZiA9IG1hcmtpbmcuaWRcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICB0aGlzLm1hcmtpbmdSZWYgPSBtYXJraW5nXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGFkZFNlbGVjdG9yKHNlbGVjdG9yKSB7XHJcbiAgICAgICAgaWYgKCEoc2VsZWN0b3IgaW5zdGFuY2VvZiBTdHJpbmcpKVxyXG4gICAgICAgICAgICB0aHJvdyBFcnJvcignQSBzZWxlY3RvciBtdXN0IGJlIGEgc3RyaW5nIScpXHJcblxyXG4gICAgICAgIHRoaXMuc2VsZWN0b3JzLmFwcGVuZChzZWxlY3RvcilcclxuICAgIH1cclxuXHJcbiAgICB0b0pTT04oKSB7XHJcbiAgICAgICAgaWYgKCF0aGlzLm1hcmtpbmdSZWYpXHJcbiAgICAgICAgICAgIHRocm93IEVycm9yKCdTVElYIDIuMCByZXF1aXJlcyBhIHJlZmVyZW5jZSB0byBhIG1hcmtpbmcgZGVmaW5pdGlvbiEnKVxyXG5cclxuICAgICAgICByZXR1cm4gIHtcclxuICAgICAgICAgICAgbWFya2luZ19yZWY6IHRoaXMubWFya2luZ1JlZixcclxuICAgICAgICAgICAgc2VsZWN0b3JzOiB0aGlzLnNlbGVjdG9yc1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgR3JhbnVsYXJNYXJraW5nIl19",
    "map": {
      "version": 3,
      "sources": [
        "granularMarking.js"
      ],
      "names": [
        "GranularMarking",
        "selector",
        "String",
        "Error",
        "selectors",
        "append",
        "markingRef",
        "marking_ref",
        "marking",
        "Marking",
        "id"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;;;;;;IAEMA,e;;;AAKF,6BAAc,CACV;;AADU;;AAAA,wCAHD,IAGC;;AAAA,uCAFF,EAEE;AAEb;;;;gCAUWC,Q,EAAU;AAClB,UAAI,EAAEA,QAAQ,YAAYC,MAAtB,CAAJ,EACI,MAAMC,KAAK,CAAC,8BAAD,CAAX;AAEJ,WAAKC,SAAL,CAAeC,MAAf,CAAsBJ,QAAtB;AACH;;;6BAEQ;AACL,UAAI,CAAC,KAAKK,UAAV,EACI,MAAMH,KAAK,CAAC,wDAAD,CAAX;AAEJ,aAAQ;AACJI,QAAAA,WAAW,EAAE,KAAKD,UADd;AAEJF,QAAAA,SAAS,EAAE,KAAKA;AAFZ,OAAR;AAIH;;;sBAvBcI,O,EAAS;AACpB,UAAIA,OAAO,YAAYC,mBAAvB,EAAgC;AAC5B,aAAKH,UAAL,GAAkBE,OAAO,CAACE,EAA1B;AACH,OAFD,MAEO;AACH,aAAKJ,UAAL,GAAkBE,OAAlB;AACH;AACJ;;;;;;eAoBUR,e",
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\definitions",
      "sourcesContent": [
        "import Marking from './marking'\r\n\r\nclass GranularMarking {\r\n\r\n    markingRef = null\r\n    selectors = []\r\n    \r\n    constructor() {\r\n        // Nothing for now\r\n    }\r\n\r\n    set markingRef(marking) {\r\n        if (marking instanceof Marking) {\r\n            this.markingRef = marking.id\r\n        } else {\r\n            this.markingRef = marking\r\n        }\r\n    }\r\n\r\n    addSelector(selector) {\r\n        if (!(selector instanceof String))\r\n            throw Error('A selector must be a string!')\r\n\r\n        this.selectors.append(selector)\r\n    }\r\n\r\n    toJSON() {\r\n        if (!this.markingRef)\r\n            throw Error('STIX 2.0 requires a reference to a marking definition!')\r\n\r\n        return  {\r\n            marking_ref: this.markingRef,\r\n            selectors: this.selectors\r\n        }\r\n    }\r\n}\r\n\r\nexport default GranularMarking"
      ]
    },
    "sourceType": "script",
    "mtime": 1565901715475
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\lib\\\\definitions\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"filename\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\lib\\\\definitions\\\\marking.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\definitions",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\definitions\\marking.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\definitions\\marking.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\definitions\\marking.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\definitions",
        "sourceFileName": "marking.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _general = require(\"../constants/general\");\n\nvar _granularMarking = _interopRequireDefault(require(\"./granularMarking\"));\n\nvar _identity = _interopRequireDefault(require(\"../objects/identity\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar Marking =\n/*#__PURE__*/\nfunction () {\n  function Marking(defType) {\n    _classCallCheck(this, Marking);\n\n    _defineProperty(this, \"type\", 'marking-definition');\n\n    _defineProperty(this, \"id\", null);\n\n    _defineProperty(this, \"createdByRef\", null);\n\n    _defineProperty(this, \"created\", null);\n\n    _defineProperty(this, \"externalReferences\", []);\n\n    _defineProperty(this, \"objectMarkingRefs\", []);\n\n    _defineProperty(this, \"granularMarkings\", []);\n\n    _defineProperty(this, \"definitionType\", null);\n\n    _defineProperty(this, \"definition\", {});\n\n    // TODO: Generate ID\n    this.definitionType = defType;\n  }\n\n  _createClass(Marking, [{\n    key: \"addObjectMarkingRef\",\n    value: function addObjectMarkingRef(marking) {\n      if (marking instanceof Marking) {\n        this.objectMarkingRefs.push(marking.id);\n      } else {\n        this.objectMarkingRefs.push(marking);\n      }\n    }\n  }, {\n    key: \"setTLP\",\n    value: function setTLP(tlp) {\n      if (this.definitionType !== _general.DefinitionTypes.TLP) throw Error('The definition Must be \"TLP\" in order to set the TLP');\n      if (Object.values(_general.TLPs).indexOf(tlp.toLowerCase()) === -1) throw Error(\"Invalid TLP! Must be one of the following: \".concat(Array(Object.values(_general.TLPs)).join(', ')));\n      this.definition = {\n        tlp: tlp\n      };\n    }\n  }, {\n    key: \"setStatement\",\n    value: function setStatement(statement) {\n      if (this.definitionType !== _general.DefinitionTypes.STATEMENT) throw Error('The definition Must be \"statement\" in order to set the statement');\n      this.definition = {\n        statement: statement\n      };\n    }\n  }, {\n    key: \"addGranularMarking\",\n    value: function addGranularMarking(marking) {\n      if (!(marking instanceof _granularMarking[\"default\"])) throw Error('You must add an object of the GranularMarking type!');\n      this.granularMarkings.push(marking);\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      if (!this.type) throw Error(\"STIX 2.0 requires a marking type!\");\n      if (!this.id) throw Error(\"STIX 2.0 requires a marking ID!\");\n      if (!this.created) throw Error(\"STIX 2.0 requires a creation timestimp!\");\n      if (!this.definitionType) throw Error(\"STIX 2.0 requires a definition type!\");\n      if (!this.definition) throw Error(\"STIX 2.0 requires a marking definition!\");\n      var output = {\n        type: this.type,\n        id: this.id,\n        created: this.created,\n        definitionType: this.definitionType,\n        definition: this.definition // Compile granular markings as JSON\n\n      };\n      var granularMarkings = [];\n\n      for (var i in this.granularMarkings) {\n        granularMarkings.push(i.toJSON());\n      }\n\n      if (this.createdByRef) output.createdByRef = this.createdByRef;\n      if (this.externalReferences) output.externalReferences = this.externalReferences;\n      if (this.granularMarkings) output.granularMarkings = granularMarkings;\n      return output;\n    }\n  }, {\n    key: \"id\",\n    set: function set(value) {\n      this.id = \"\".concat(this.type, \"--\").concat(value);\n    }\n  }, {\n    key: \"createdByRef\",\n    set: function set(value) {\n      if (value instanceof _identity[\"default\"]) {\n        this.createdByRef = value.id;\n      } else {\n        this.createdByRef = value;\n      }\n    }\n  }, {\n    key: \"definitionType\",\n    set: function set(defType) {\n      if (Object.values(_general.DefinitionTypes).indexOf(defType.toLowerCase()) === -1) throw Error(\"Invalid definition type! Must be one of the following: \".concat(Array(Object.values(_general.DefinitionTypes)).join(', ')));\n      this.definitionType = defType.toLowerCase();\n    }\n  }]);\n\n  return Marking;\n}();\n\nvar _default = Marking;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "marking.js"
      ],
      "names": [
        "Marking",
        "defType",
        "definitionType",
        "marking",
        "objectMarkingRefs",
        "push",
        "id",
        "tlp",
        "DefinitionTypes",
        "TLP",
        "Error",
        "Object",
        "values",
        "TLPs",
        "indexOf",
        "toLowerCase",
        "Array",
        "join",
        "definition",
        "statement",
        "STATEMENT",
        "GranularMarking",
        "granularMarkings",
        "type",
        "created",
        "output",
        "i",
        "toJSON",
        "createdByRef",
        "externalReferences",
        "value",
        "Identity"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;;;;;;;;;;;IAEMA,O;;;AAYF,mBAAYC,OAAZ,EAAqB;AAAA;;AAAA,kCAVd,oBAUc;;AAAA,gCAThB,IASgB;;AAAA,0CARN,IAQM;;AAAA,qCAPX,IAOW;;AAAA,gDANA,EAMA;;AAAA,+CALD,EAKC;;AAAA,8CAJF,EAIE;;AAAA,4CAHJ,IAGI;;AAAA,wCAFR,EAEQ;;AACjB;AACA,SAAKC,cAAL,GAAsBD,OAAtB;AACH;;;;wCAqBmBE,O,EAAS;AACzB,UAAIA,OAAO,YAAYH,OAAvB,EAAgC;AAC5B,aAAKI,iBAAL,CAAuBC,IAAvB,CAA4BF,OAAO,CAACG,EAApC;AACH,OAFD,MAEO;AACH,aAAKF,iBAAL,CAAuBC,IAAvB,CAA4BF,OAA5B;AACH;AACJ;;;2BAEMI,G,EAAK;AACR,UAAI,KAAKL,cAAL,KAAwBM,yBAAgBC,GAA5C,EACI,MAAMC,KAAK,CAAC,sDAAD,CAAX;AACJ,UAAIC,MAAM,CAACC,MAAP,CAAcC,aAAd,EAAoBC,OAApB,CAA4BP,GAAG,CAACQ,WAAJ,EAA5B,MAAmD,CAAC,CAAxD,EACI,MAAML,KAAK,sDAA+CM,KAAK,CAACL,MAAM,CAACC,MAAP,CAAcC,aAAd,CAAD,CAAL,CAA2BI,IAA3B,CAAgC,IAAhC,CAA/C,EAAX;AAEJ,WAAKC,UAAL,GAAkB;AACdX,QAAAA,GAAG,EAAEA;AADS,OAAlB;AAGH;;;iCAEYY,S,EAAW;AACpB,UAAI,KAAKjB,cAAL,KAAwBM,yBAAgBY,SAA5C,EACI,MAAMV,KAAK,CAAC,kEAAD,CAAX;AAEJ,WAAKQ,UAAL,GAAkB;AACdC,QAAAA,SAAS,EAAEA;AADG,OAAlB;AAGH;;;uCAEkBhB,O,EAAS;AACxB,UAAI,EAAEA,OAAO,YAAYkB,2BAArB,CAAJ,EACI,MAAMX,KAAK,CAAC,qDAAD,CAAX;AAEJ,WAAKY,gBAAL,CAAsBjB,IAAtB,CAA2BF,OAA3B;AACH;;;6BAEQ;AACL,UAAI,CAAC,KAAKoB,IAAV,EACI,MAAMb,KAAK,qCAAX;AACJ,UAAI,CAAC,KAAKJ,EAAV,EACI,MAAMI,KAAK,mCAAX;AACJ,UAAI,CAAC,KAAKc,OAAV,EACI,MAAMd,KAAK,2CAAX;AACJ,UAAI,CAAC,KAAKR,cAAV,EACI,MAAMQ,KAAK,wCAAX;AACJ,UAAI,CAAC,KAAKQ,UAAV,EACI,MAAMR,KAAK,2CAAX;AAEJ,UAAIe,MAAM,GAAG;AACTF,QAAAA,IAAI,EAAE,KAAKA,IADF;AAETjB,QAAAA,EAAE,EAAE,KAAKA,EAFA;AAGTkB,QAAAA,OAAO,EAAE,KAAKA,OAHL;AAITtB,QAAAA,cAAc,EAAE,KAAKA,cAJZ;AAKTgB,QAAAA,UAAU,EAAE,KAAKA,UALR,CAQb;;AARa,OAAb;AASA,UAAII,gBAAgB,GAAG,EAAvB;;AACA,WAAK,IAAII,CAAT,IAAc,KAAKJ,gBAAnB;AACIA,QAAAA,gBAAgB,CAACjB,IAAjB,CAAsBqB,CAAC,CAACC,MAAF,EAAtB;AADJ;;AAGA,UAAI,KAAKC,YAAT,EACIH,MAAM,CAACG,YAAP,GAAsB,KAAKA,YAA3B;AACJ,UAAI,KAAKC,kBAAT,EACIJ,MAAM,CAACI,kBAAP,GAA4B,KAAKA,kBAAjC;AACJ,UAAI,KAAKP,gBAAT,EACIG,MAAM,CAACH,gBAAP,GAA0BA,gBAA1B;AAEJ,aAAOG,MAAP;AACH;;;sBAvFMK,K,EAAO;AACV,WAAKxB,EAAL,aAAa,KAAKiB,IAAlB,eAA2BO,KAA3B;AACH;;;sBAEgBA,K,EAAO;AACpB,UAAIA,KAAK,YAAYC,oBAArB,EAA+B;AAC3B,aAAKH,YAAL,GAAoBE,KAAK,CAACxB,EAA1B;AACH,OAFD,MAEO;AACH,aAAKsB,YAAL,GAAoBE,KAApB;AACH;AACJ;;;sBAEkB7B,O,EAAS;AACxB,UAAIU,MAAM,CAACC,MAAP,CAAcJ,wBAAd,EAA+BM,OAA/B,CAAuCb,OAAO,CAACc,WAAR,EAAvC,MAAkE,CAAC,CAAvE,EACI,MAAML,KAAK,kEAA2DM,KAAK,CAACL,MAAM,CAACC,MAAP,CAAcJ,wBAAd,CAAD,CAAL,CAAsCS,IAAtC,CAA2C,IAA3C,CAA3D,EAAX;AAEJ,WAAKf,cAAL,GAAsBD,OAAO,CAACc,WAAR,EAAtB;AACH;;;;;;eAyEUf,O",
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\definitions",
      "sourcesContent": [
        "import { DefinitionTypes, TLPs } from '../constants/general'\r\nimport GranularMarking from './granularMarking'\r\nimport Identity from '../objects/identity'\r\n\r\nclass Marking {\r\n\r\n    type = 'marking-definition'\r\n    id = null\r\n    createdByRef = null\r\n    created = null\r\n    externalReferences = []\r\n    objectMarkingRefs = []\r\n    granularMarkings = []\r\n    definitionType = null\r\n    definition = {}\r\n\r\n    constructor(defType) {\r\n        // TODO: Generate ID\r\n        this.definitionType = defType\r\n    }\r\n\r\n    set id(value) {\r\n        this.id = `${this.type}--${value}`\r\n    }\r\n\r\n    set createdByRef(value) {\r\n        if (value instanceof Identity) {\r\n            this.createdByRef = value.id\r\n        } else {\r\n            this.createdByRef = value\r\n        }\r\n    }\r\n\r\n    set definitionType(defType) {\r\n        if (Object.values(DefinitionTypes).indexOf(defType.toLowerCase()) === -1)\r\n            throw Error(`Invalid definition type! Must be one of the following: ${Array(Object.values(DefinitionTypes)).join(', ')}`)\r\n\r\n        this.definitionType = defType.toLowerCase()\r\n    }\r\n\r\n    addObjectMarkingRef(marking) {\r\n        if (marking instanceof Marking) {\r\n            this.objectMarkingRefs.push(marking.id)\r\n        } else {\r\n            this.objectMarkingRefs.push(marking)\r\n        }\r\n    }\r\n\r\n    setTLP(tlp) {\r\n        if (this.definitionType !== DefinitionTypes.TLP)\r\n            throw Error('The definition Must be \"TLP\" in order to set the TLP')\r\n        if (Object.values(TLPs).indexOf(tlp.toLowerCase()) === -1)\r\n            throw Error(`Invalid TLP! Must be one of the following: ${Array(Object.values(TLPs)).join(', ')}`)\r\n\r\n        this.definition = {\r\n            tlp: tlp\r\n        }\r\n    }\r\n\r\n    setStatement(statement) {\r\n        if (this.definitionType !== DefinitionTypes.STATEMENT)\r\n            throw Error('The definition Must be \"statement\" in order to set the statement')\r\n\r\n        this.definition = {\r\n            statement: statement\r\n        }\r\n    }\r\n\r\n    addGranularMarking(marking) {\r\n        if (!(marking instanceof GranularMarking))\r\n            throw Error('You must add an object of the GranularMarking type!')\r\n        \r\n        this.granularMarkings.push(marking)\r\n    }\r\n\r\n    toJSON() {\r\n        if (!this.type)\r\n            throw Error(`STIX 2.0 requires a marking type!`)\r\n        if (!this.id)\r\n            throw Error(`STIX 2.0 requires a marking ID!`)\r\n        if (!this.created)\r\n            throw Error(`STIX 2.0 requires a creation timestimp!`)\r\n        if (!this.definitionType)\r\n            throw Error(`STIX 2.0 requires a definition type!`)\r\n        if (!this.definition)\r\n            throw Error(`STIX 2.0 requires a marking definition!`)\r\n\r\n        let output = {\r\n            type: this.type,\r\n            id: this.id,\r\n            created: this.created,\r\n            definitionType: this.definitionType,\r\n            definition: this.definition\r\n        }\r\n\r\n        // Compile granular markings as JSON\r\n        let granularMarkings = []\r\n        for (let i in this.granularMarkings)\r\n            granularMarkings.push(i.toJSON())\r\n\r\n        if (this.createdByRef)\r\n            output.createdByRef = this.createdByRef\r\n        if (this.externalReferences)\r\n            output.externalReferences = this.externalReferences\r\n        if (this.granularMarkings)\r\n            output.granularMarkings = granularMarkings\r\n\r\n        return output\r\n    }\r\n}\r\n\r\nexport default Marking"
      ]
    },
    "sourceType": "script",
    "mtime": 1565901728811
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\lib\\\\objects\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"filename\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\lib\\\\objects\\\\identity.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects\\identity.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects\\identity.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects\\identity.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects",
        "sourceFileName": "identity.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _baseObject = _interopRequireDefault(require(\"./baseObject\"));\n\nvar _vocabulary = require(\"../constants/vocabulary\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar Identity =\n/*#__PURE__*/\nfunction (_BaseObject) {\n  _inherits(Identity, _BaseObject);\n\n  function Identity(name) {\n    var _this;\n\n    _classCallCheck(this, Identity);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Identity).call(this, 'identity'));\n\n    _defineProperty(_assertThisInitialized(_this), \"name\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"description\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"identityClass\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"sectors\", []);\n\n    _defineProperty(_assertThisInitialized(_this), \"contactInformation\", null);\n\n    _this.name = name;\n    return _this;\n  }\n\n  _createClass(Identity, [{\n    key: \"addSector\",\n    value: function addSector(sector) {\n      if (Object.values(_vocabulary.IndustrySectors).indexOf(sector.toLowerCase()) === -1) throw Error(\"Invalid identity class! Must be one of the following: \".concat(Array(Object.values(_vocabulary.IndustrySectors)).join(', ')));\n      if (this.sectors.indexOf(sector.toLowerCase()) === -1) this.sectors.push(sector.toLowerCase());\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      if (!this.name) throw Error(\"STIX 2.0 requires an identity name!\");\n      if (!this.identityClass) throw Error(\"STIX 2.0 requires an identity class!\");\n\n      var output = _get(_getPrototypeOf(Identity.prototype), \"toJSON\", this).call(this);\n\n      output.name = name;\n      output.identityClass = this.identityClass;\n      if (this.description) output.description = this.description;\n      if (this.sectors) output.sectors = this.sectors;\n      if (this.contactInformation) output.contact_information = this.contactInformation;\n      return output;\n    }\n  }, {\n    key: \"identityClass\",\n    set: function set(identity) {\n      if (Object.values(_vocabulary.IdentityClasses).indexOf(identity.toLowerCase()) === -1) throw Error(\"Invalid identity class! Must be one of the following: \".concat(Array(Object.values(_vocabulary.IdentityClasses)).join(', ')));\n      this.identityClass = identity.toLowerCase();\n    }\n  }]);\n\n  return Identity;\n}(_baseObject[\"default\"]);\n\nvar _default = Identity;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImlkZW50aXR5LmpzIl0sIm5hbWVzIjpbIklkZW50aXR5IiwibmFtZSIsInNlY3RvciIsIk9iamVjdCIsInZhbHVlcyIsIkluZHVzdHJ5U2VjdG9ycyIsImluZGV4T2YiLCJ0b0xvd2VyQ2FzZSIsIkVycm9yIiwiQXJyYXkiLCJqb2luIiwic2VjdG9ycyIsInB1c2giLCJpZGVudGl0eUNsYXNzIiwib3V0cHV0IiwiZGVzY3JpcHRpb24iLCJjb250YWN0SW5mb3JtYXRpb24iLCJjb250YWN0X2luZm9ybWF0aW9uIiwiaWRlbnRpdHkiLCJJZGVudGl0eUNsYXNzZXMiLCJCYXNlT2JqZWN0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFFTUEsUTs7Ozs7QUFTRixvQkFBWUMsSUFBWixFQUFrQjtBQUFBOztBQUFBOztBQUNkLGtGQUFNLFVBQU47O0FBRGMsMkRBUFgsSUFPVzs7QUFBQSxrRUFOSixJQU1JOztBQUFBLG9FQUxGLElBS0U7O0FBQUEsOERBSlIsRUFJUTs7QUFBQSx5RUFIRyxJQUdIOztBQUdkLFVBQUtBLElBQUwsR0FBWUEsSUFBWjtBQUhjO0FBSWpCOzs7OzhCQVNTQyxNLEVBQVE7QUFDZCxVQUFJQyxNQUFNLENBQUNDLE1BQVAsQ0FBY0MsMkJBQWQsRUFBK0JDLE9BQS9CLENBQXVDSixNQUFNLENBQUNLLFdBQVAsRUFBdkMsTUFBaUUsQ0FBQyxDQUF0RSxFQUNJLE1BQU1DLEtBQUssaUVBQTBEQyxLQUFLLENBQUNOLE1BQU0sQ0FBQ0MsTUFBUCxDQUFjQywyQkFBZCxDQUFELENBQUwsQ0FBc0NLLElBQXRDLENBQTJDLElBQTNDLENBQTFELEVBQVg7QUFFSixVQUFJLEtBQUtDLE9BQUwsQ0FBYUwsT0FBYixDQUFxQkosTUFBTSxDQUFDSyxXQUFQLEVBQXJCLE1BQStDLENBQUMsQ0FBcEQsRUFDSSxLQUFLSSxPQUFMLENBQWFDLElBQWIsQ0FBa0JWLE1BQU0sQ0FBQ0ssV0FBUCxFQUFsQjtBQUNQOzs7NkJBRVE7QUFDTCxVQUFJLENBQUMsS0FBS04sSUFBVixFQUNJLE1BQU1PLEtBQUssdUNBQVg7QUFDSixVQUFJLENBQUMsS0FBS0ssYUFBVixFQUNJLE1BQU1MLEtBQUssd0NBQVg7O0FBRUosVUFBSU0sTUFBTSx1RUFBVjs7QUFDQUEsTUFBQUEsTUFBTSxDQUFDYixJQUFQLEdBQWNBLElBQWQ7QUFDQWEsTUFBQUEsTUFBTSxDQUFDRCxhQUFQLEdBQXVCLEtBQUtBLGFBQTVCO0FBRUEsVUFBSSxLQUFLRSxXQUFULEVBQ0lELE1BQU0sQ0FBQ0MsV0FBUCxHQUFxQixLQUFLQSxXQUExQjtBQUNKLFVBQUksS0FBS0osT0FBVCxFQUNJRyxNQUFNLENBQUNILE9BQVAsR0FBaUIsS0FBS0EsT0FBdEI7QUFDSixVQUFJLEtBQUtLLGtCQUFULEVBQ0lGLE1BQU0sQ0FBQ0csbUJBQVAsR0FBNkIsS0FBS0Qsa0JBQWxDO0FBRUosYUFBT0YsTUFBUDtBQUNIOzs7c0JBakNpQkksUSxFQUFVO0FBQ3hCLFVBQUlmLE1BQU0sQ0FBQ0MsTUFBUCxDQUFjZSwyQkFBZCxFQUErQmIsT0FBL0IsQ0FBdUNZLFFBQVEsQ0FBQ1gsV0FBVCxFQUF2QyxNQUFtRSxDQUFDLENBQXhFLEVBQ0ksTUFBTUMsS0FBSyxpRUFBMERDLEtBQUssQ0FBQ04sTUFBTSxDQUFDQyxNQUFQLENBQWNlLDJCQUFkLENBQUQsQ0FBTCxDQUFzQ1QsSUFBdEMsQ0FBMkMsSUFBM0MsQ0FBMUQsRUFBWDtBQUVKLFdBQUtHLGFBQUwsR0FBcUJLLFFBQVEsQ0FBQ1gsV0FBVCxFQUFyQjtBQUNIOzs7O0VBcEJrQmEsc0I7O2VBbURScEIsUSIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXFphY2ggU2hhbWVzXFxEb2N1bWVudHNcXERldmVsb3BtZW50XFxqcy0yLXN0aXhcXGxpYlxcb2JqZWN0cyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBCYXNlT2JqZWN0IGZyb20gXCIuL2Jhc2VPYmplY3RcIlxyXG5pbXBvcnQgeyBJZGVudGl0eUNsYXNzZXMsIEluZHVzdHJ5U2VjdG9ycyB9IGZyb20gJy4uL2NvbnN0YW50cy92b2NhYnVsYXJ5J1xyXG5cclxuY2xhc3MgSWRlbnRpdHkgZXh0ZW5kcyBCYXNlT2JqZWN0IHtcclxuXHJcbiAgICBuYW1lID0gbnVsbFxyXG4gICAgZGVzY3JpcHRpb24gPSBudWxsXHJcbiAgICBpZGVudGl0eUNsYXNzID0gbnVsbFxyXG4gICAgc2VjdG9ycyA9IFtdXHJcbiAgICBjb250YWN0SW5mb3JtYXRpb24gPSBudWxsXHJcblxyXG5cclxuICAgIGNvbnN0cnVjdG9yKG5hbWUpIHtcclxuICAgICAgICBzdXBlcignaWRlbnRpdHknKVxyXG5cclxuICAgICAgICB0aGlzLm5hbWUgPSBuYW1lXHJcbiAgICB9XHJcblxyXG4gICAgc2V0IGlkZW50aXR5Q2xhc3MoaWRlbnRpdHkpIHtcclxuICAgICAgICBpZiAoT2JqZWN0LnZhbHVlcyhJZGVudGl0eUNsYXNzZXMpLmluZGV4T2YoaWRlbnRpdHkudG9Mb3dlckNhc2UoKSkgPT09IC0xKVxyXG4gICAgICAgICAgICB0aHJvdyBFcnJvcihgSW52YWxpZCBpZGVudGl0eSBjbGFzcyEgTXVzdCBiZSBvbmUgb2YgdGhlIGZvbGxvd2luZzogJHtBcnJheShPYmplY3QudmFsdWVzKElkZW50aXR5Q2xhc3NlcykpLmpvaW4oJywgJyl9YClcclxuXHJcbiAgICAgICAgdGhpcy5pZGVudGl0eUNsYXNzID0gaWRlbnRpdHkudG9Mb3dlckNhc2UoKVxyXG4gICAgfVxyXG5cclxuICAgIGFkZFNlY3RvcihzZWN0b3IpIHtcclxuICAgICAgICBpZiAoT2JqZWN0LnZhbHVlcyhJbmR1c3RyeVNlY3RvcnMpLmluZGV4T2Yoc2VjdG9yLnRvTG93ZXJDYXNlKCkpID09PSAtMSlcclxuICAgICAgICAgICAgdGhyb3cgRXJyb3IoYEludmFsaWQgaWRlbnRpdHkgY2xhc3MhIE11c3QgYmUgb25lIG9mIHRoZSBmb2xsb3dpbmc6ICR7QXJyYXkoT2JqZWN0LnZhbHVlcyhJbmR1c3RyeVNlY3RvcnMpKS5qb2luKCcsICcpfWApXHJcblxyXG4gICAgICAgIGlmICh0aGlzLnNlY3RvcnMuaW5kZXhPZihzZWN0b3IudG9Mb3dlckNhc2UoKSkgPT09IC0xKVxyXG4gICAgICAgICAgICB0aGlzLnNlY3RvcnMucHVzaChzZWN0b3IudG9Mb3dlckNhc2UoKSlcclxuICAgIH1cclxuXHJcbiAgICB0b0pTT04oKSB7XHJcbiAgICAgICAgaWYgKCF0aGlzLm5hbWUpXHJcbiAgICAgICAgICAgIHRocm93IEVycm9yKGBTVElYIDIuMCByZXF1aXJlcyBhbiBpZGVudGl0eSBuYW1lIWApXHJcbiAgICAgICAgaWYgKCF0aGlzLmlkZW50aXR5Q2xhc3MpXHJcbiAgICAgICAgICAgIHRocm93IEVycm9yKGBTVElYIDIuMCByZXF1aXJlcyBhbiBpZGVudGl0eSBjbGFzcyFgKVxyXG5cclxuICAgICAgICBsZXQgb3V0cHV0ID0gc3VwZXIudG9KU09OKClcclxuICAgICAgICBvdXRwdXQubmFtZSA9IG5hbWVcclxuICAgICAgICBvdXRwdXQuaWRlbnRpdHlDbGFzcyA9IHRoaXMuaWRlbnRpdHlDbGFzc1xyXG5cclxuICAgICAgICBpZiAodGhpcy5kZXNjcmlwdGlvbilcclxuICAgICAgICAgICAgb3V0cHV0LmRlc2NyaXB0aW9uID0gdGhpcy5kZXNjcmlwdGlvblxyXG4gICAgICAgIGlmICh0aGlzLnNlY3RvcnMpXHJcbiAgICAgICAgICAgIG91dHB1dC5zZWN0b3JzID0gdGhpcy5zZWN0b3JzXHJcbiAgICAgICAgaWYgKHRoaXMuY29udGFjdEluZm9ybWF0aW9uKVxyXG4gICAgICAgICAgICBvdXRwdXQuY29udGFjdF9pbmZvcm1hdGlvbiA9IHRoaXMuY29udGFjdEluZm9ybWF0aW9uXHJcblxyXG4gICAgICAgIHJldHVybiBvdXRwdXRcclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgSWRlbnRpdHkiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "identity.js"
      ],
      "names": [
        "Identity",
        "name",
        "sector",
        "Object",
        "values",
        "IndustrySectors",
        "indexOf",
        "toLowerCase",
        "Error",
        "Array",
        "join",
        "sectors",
        "push",
        "identityClass",
        "output",
        "description",
        "contactInformation",
        "contact_information",
        "identity",
        "IdentityClasses",
        "BaseObject"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAEMA,Q;;;;;AASF,oBAAYC,IAAZ,EAAkB;AAAA;;AAAA;;AACd,kFAAM,UAAN;;AADc,2DAPX,IAOW;;AAAA,kEANJ,IAMI;;AAAA,oEALF,IAKE;;AAAA,8DAJR,EAIQ;;AAAA,yEAHG,IAGH;;AAGd,UAAKA,IAAL,GAAYA,IAAZ;AAHc;AAIjB;;;;8BASSC,M,EAAQ;AACd,UAAIC,MAAM,CAACC,MAAP,CAAcC,2BAAd,EAA+BC,OAA/B,CAAuCJ,MAAM,CAACK,WAAP,EAAvC,MAAiE,CAAC,CAAtE,EACI,MAAMC,KAAK,iEAA0DC,KAAK,CAACN,MAAM,CAACC,MAAP,CAAcC,2BAAd,CAAD,CAAL,CAAsCK,IAAtC,CAA2C,IAA3C,CAA1D,EAAX;AAEJ,UAAI,KAAKC,OAAL,CAAaL,OAAb,CAAqBJ,MAAM,CAACK,WAAP,EAArB,MAA+C,CAAC,CAApD,EACI,KAAKI,OAAL,CAAaC,IAAb,CAAkBV,MAAM,CAACK,WAAP,EAAlB;AACP;;;6BAEQ;AACL,UAAI,CAAC,KAAKN,IAAV,EACI,MAAMO,KAAK,uCAAX;AACJ,UAAI,CAAC,KAAKK,aAAV,EACI,MAAML,KAAK,wCAAX;;AAEJ,UAAIM,MAAM,uEAAV;;AACAA,MAAAA,MAAM,CAACb,IAAP,GAAcA,IAAd;AACAa,MAAAA,MAAM,CAACD,aAAP,GAAuB,KAAKA,aAA5B;AAEA,UAAI,KAAKE,WAAT,EACID,MAAM,CAACC,WAAP,GAAqB,KAAKA,WAA1B;AACJ,UAAI,KAAKJ,OAAT,EACIG,MAAM,CAACH,OAAP,GAAiB,KAAKA,OAAtB;AACJ,UAAI,KAAKK,kBAAT,EACIF,MAAM,CAACG,mBAAP,GAA6B,KAAKD,kBAAlC;AAEJ,aAAOF,MAAP;AACH;;;sBAjCiBI,Q,EAAU;AACxB,UAAIf,MAAM,CAACC,MAAP,CAAce,2BAAd,EAA+Bb,OAA/B,CAAuCY,QAAQ,CAACX,WAAT,EAAvC,MAAmE,CAAC,CAAxE,EACI,MAAMC,KAAK,iEAA0DC,KAAK,CAACN,MAAM,CAACC,MAAP,CAAce,2BAAd,CAAD,CAAL,CAAsCT,IAAtC,CAA2C,IAA3C,CAA1D,EAAX;AAEJ,WAAKG,aAAL,GAAqBK,QAAQ,CAACX,WAAT,EAArB;AACH;;;;EApBkBa,sB;;eAmDRpB,Q",
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects",
      "sourcesContent": [
        "import BaseObject from \"./baseObject\"\r\nimport { IdentityClasses, IndustrySectors } from '../constants/vocabulary'\r\n\r\nclass Identity extends BaseObject {\r\n\r\n    name = null\r\n    description = null\r\n    identityClass = null\r\n    sectors = []\r\n    contactInformation = null\r\n\r\n\r\n    constructor(name) {\r\n        super('identity')\r\n\r\n        this.name = name\r\n    }\r\n\r\n    set identityClass(identity) {\r\n        if (Object.values(IdentityClasses).indexOf(identity.toLowerCase()) === -1)\r\n            throw Error(`Invalid identity class! Must be one of the following: ${Array(Object.values(IdentityClasses)).join(', ')}`)\r\n\r\n        this.identityClass = identity.toLowerCase()\r\n    }\r\n\r\n    addSector(sector) {\r\n        if (Object.values(IndustrySectors).indexOf(sector.toLowerCase()) === -1)\r\n            throw Error(`Invalid identity class! Must be one of the following: ${Array(Object.values(IndustrySectors)).join(', ')}`)\r\n\r\n        if (this.sectors.indexOf(sector.toLowerCase()) === -1)\r\n            this.sectors.push(sector.toLowerCase())\r\n    }\r\n\r\n    toJSON() {\r\n        if (!this.name)\r\n            throw Error(`STIX 2.0 requires an identity name!`)\r\n        if (!this.identityClass)\r\n            throw Error(`STIX 2.0 requires an identity class!`)\r\n\r\n        let output = super.toJSON()\r\n        output.name = name\r\n        output.identityClass = this.identityClass\r\n\r\n        if (this.description)\r\n            output.description = this.description\r\n        if (this.sectors)\r\n            output.sectors = this.sectors\r\n        if (this.contactInformation)\r\n            output.contact_information = this.contactInformation\r\n\r\n        return output\r\n    }\r\n}\r\n\r\nexport default Identity"
      ]
    },
    "sourceType": "script",
    "mtime": 1565900357821
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\lib\\\\objects\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"filename\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\lib\\\\objects\\\\baseObject.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects\\baseObject.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects\\baseObject.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects\\baseObject.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects",
        "sourceFileName": "baseObject.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _identity = _interopRequireDefault(require(\"./identity\"));\n\nvar _externalReference = _interopRequireDefault(require(\"./externalReference\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar BaseObject =\n/*#__PURE__*/\nfunction () {\n  function BaseObject(type) {\n    _classCallCheck(this, BaseObject);\n\n    _defineProperty(this, \"type\", null);\n\n    _defineProperty(this, \"id\", null);\n\n    _defineProperty(this, \"createdByRef\", null);\n\n    _defineProperty(this, \"created\", null);\n\n    _defineProperty(this, \"modified\", null);\n\n    _defineProperty(this, \"revoked\", null);\n\n    _defineProperty(this, \"labels\", []);\n\n    _defineProperty(this, \"externalReferences\", []);\n\n    _defineProperty(this, \"objectMarkingRefs\", []);\n\n    _defineProperty(this, \"granularMarkings\", []);\n\n    this.type = type;\n  }\n\n  _createClass(BaseObject, [{\n    key: \"addExternalReference\",\n    value: function addExternalReference(ref) {\n      if (!(ref instanceof _externalReference[\"default\"])) throw Error('You can only add an external reference of the ExternalReference type!');\n      this.externalReferences.push(ref);\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      if (!this.type) throw Error(\"STIX 2.0 requires an object type!\");\n      if (!this.id) throw Error(\"STIX 2.0 requires an object ID!\");\n      if (!this.created) throw Error(\"STIX 2.0 requires a created timestamp!\");\n      if (!this.modified) throw Error(\"STIX 2.0 requires a modified timestamp!\");\n      var output = {\n        type: this.type,\n        id: this.id,\n        created: this.created,\n        modified: this.modified\n      };\n      if (this.createdByRef) output.created_by_ref = this.createdByRef;\n      if (this.revoked) output.revoked = this.revoked;\n      if (this.labels) output.labels = this.labels;\n      if (this.objectMarkingRefs) output.object_marking_refs = this.objectMarkingRefs;\n      var granularMarkings = [];\n\n      for (var i in this.granularMarkings) {\n        granularMarkings.push(i.toJSON());\n      }\n\n      if (granularMarkings) output.granular_markings = granularMarkings;\n      var externalRefs = [];\n\n      for (var _i in this.externalReferences) {\n        externalRefs.push(_i.toJSON());\n      }\n\n      if (externalRefs) output.external_references = externalRefs;\n      return output;\n    }\n  }, {\n    key: \"id\",\n    set: function set(value) {\n      this.id = \"\".concat(this.type, \"--\").concat(value);\n    }\n  }, {\n    key: \"createdByRef\",\n    set: function set(value) {\n      if (value instanceof _identity[\"default\"]) {\n        this.createdByRef = value.id;\n      } else {\n        this.createdByRef = value;\n      }\n    }\n  }]);\n\n  return BaseObject;\n}();\n\nvar _default = BaseObject;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJhc2VPYmplY3QuanMiXSwibmFtZXMiOlsiQmFzZU9iamVjdCIsInR5cGUiLCJyZWYiLCJFeHRlcm5hbFJlZmVyZW5jZSIsIkVycm9yIiwiZXh0ZXJuYWxSZWZlcmVuY2VzIiwicHVzaCIsImlkIiwiY3JlYXRlZCIsIm1vZGlmaWVkIiwib3V0cHV0IiwiY3JlYXRlZEJ5UmVmIiwiY3JlYXRlZF9ieV9yZWYiLCJyZXZva2VkIiwibGFiZWxzIiwib2JqZWN0TWFya2luZ1JlZnMiLCJvYmplY3RfbWFya2luZ19yZWZzIiwiZ3JhbnVsYXJNYXJraW5ncyIsImkiLCJ0b0pTT04iLCJncmFudWxhcl9tYXJraW5ncyIsImV4dGVybmFsUmVmcyIsImV4dGVybmFsX3JlZmVyZW5jZXMiLCJ2YWx1ZSIsIklkZW50aXR5Il0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7Ozs7Ozs7Ozs7OztJQUVNQSxVOzs7QUFhRixzQkFBWUMsSUFBWixFQUFrQjtBQUFBOztBQUFBLGtDQVhYLElBV1c7O0FBQUEsZ0NBVmIsSUFVYTs7QUFBQSwwQ0FUSCxJQVNHOztBQUFBLHFDQVJSLElBUVE7O0FBQUEsc0NBUFAsSUFPTzs7QUFBQSxxQ0FOUixJQU1ROztBQUFBLG9DQUxULEVBS1M7O0FBQUEsZ0RBSkcsRUFJSDs7QUFBQSwrQ0FIRSxFQUdGOztBQUFBLDhDQUZDLEVBRUQ7O0FBQ2QsU0FBS0EsSUFBTCxHQUFZQSxJQUFaO0FBQ0g7Ozs7eUNBY29CQyxHLEVBQUs7QUFDdEIsVUFBSSxFQUFFQSxHQUFHLFlBQVlDLDZCQUFqQixDQUFKLEVBQ0ksTUFBTUMsS0FBSyxDQUFDLHVFQUFELENBQVg7QUFFSixXQUFLQyxrQkFBTCxDQUF3QkMsSUFBeEIsQ0FBNkJKLEdBQTdCO0FBQ0g7Ozs2QkFFUTtBQUNMLFVBQUksQ0FBQyxLQUFLRCxJQUFWLEVBQ0ksTUFBTUcsS0FBSyxxQ0FBWDtBQUNKLFVBQUksQ0FBQyxLQUFLRyxFQUFWLEVBQ0ksTUFBTUgsS0FBSyxtQ0FBWDtBQUNKLFVBQUksQ0FBQyxLQUFLSSxPQUFWLEVBQ0ksTUFBTUosS0FBSywwQ0FBWDtBQUNKLFVBQUksQ0FBQyxLQUFLSyxRQUFWLEVBQ0ksTUFBTUwsS0FBSywyQ0FBWDtBQUVKLFVBQUlNLE1BQU0sR0FBRztBQUNUVCxRQUFBQSxJQUFJLEVBQUUsS0FBS0EsSUFERjtBQUVUTSxRQUFBQSxFQUFFLEVBQUUsS0FBS0EsRUFGQTtBQUdUQyxRQUFBQSxPQUFPLEVBQUUsS0FBS0EsT0FITDtBQUlUQyxRQUFBQSxRQUFRLEVBQUUsS0FBS0E7QUFKTixPQUFiO0FBT0EsVUFBSSxLQUFLRSxZQUFULEVBQ0lELE1BQU0sQ0FBQ0UsY0FBUCxHQUF3QixLQUFLRCxZQUE3QjtBQUNKLFVBQUksS0FBS0UsT0FBVCxFQUNJSCxNQUFNLENBQUNHLE9BQVAsR0FBaUIsS0FBS0EsT0FBdEI7QUFDSixVQUFJLEtBQUtDLE1BQVQsRUFDSUosTUFBTSxDQUFDSSxNQUFQLEdBQWdCLEtBQUtBLE1BQXJCO0FBQ0osVUFBSSxLQUFLQyxpQkFBVCxFQUNJTCxNQUFNLENBQUNNLG1CQUFQLEdBQTZCLEtBQUtELGlCQUFsQztBQUVKLFVBQUlFLGdCQUFnQixHQUFHLEVBQXZCOztBQUNBLFdBQUssSUFBSUMsQ0FBVCxJQUFjLEtBQUtELGdCQUFuQjtBQUNJQSxRQUFBQSxnQkFBZ0IsQ0FBQ1gsSUFBakIsQ0FBc0JZLENBQUMsQ0FBQ0MsTUFBRixFQUF0QjtBQURKOztBQUVBLFVBQUlGLGdCQUFKLEVBQ0lQLE1BQU0sQ0FBQ1UsaUJBQVAsR0FBMkJILGdCQUEzQjtBQUVKLFVBQUlJLFlBQVksR0FBRyxFQUFuQjs7QUFDQSxXQUFLLElBQUlILEVBQVQsSUFBYyxLQUFLYixrQkFBbkI7QUFDSWdCLFFBQUFBLFlBQVksQ0FBQ2YsSUFBYixDQUFrQlksRUFBQyxDQUFDQyxNQUFGLEVBQWxCO0FBREo7O0FBRUEsVUFBSUUsWUFBSixFQUNJWCxNQUFNLENBQUNZLG1CQUFQLEdBQTZCRCxZQUE3QjtBQUVKLGFBQU9YLE1BQVA7QUFDSDs7O3NCQTFETWEsSyxFQUFPO0FBQ1YsV0FBS2hCLEVBQUwsYUFBYSxLQUFLTixJQUFsQixlQUEyQnNCLEtBQTNCO0FBQ0g7OztzQkFFZ0JBLEssRUFBTztBQUNwQixVQUFJQSxLQUFLLFlBQVlDLG9CQUFyQixFQUErQjtBQUMzQixhQUFLYixZQUFMLEdBQW9CWSxLQUFLLENBQUNoQixFQUExQjtBQUNILE9BRkQsTUFFTztBQUNILGFBQUtJLFlBQUwsR0FBb0JZLEtBQXBCO0FBQ0g7QUFDSjs7Ozs7O2VBbURVdkIsVSIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXFphY2ggU2hhbWVzXFxEb2N1bWVudHNcXERldmVsb3BtZW50XFxqcy0yLXN0aXhcXGxpYlxcb2JqZWN0cyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBJZGVudGl0eSBmcm9tICcuL2lkZW50aXR5J1xyXG5pbXBvcnQgRXh0ZXJuYWxSZWZlcmVuY2UgZnJvbSAnLi9leHRlcm5hbFJlZmVyZW5jZSdcclxuXHJcbmNsYXNzIEJhc2VPYmplY3Qge1xyXG5cclxuICAgIHR5cGUgPSBudWxsXHJcbiAgICBpZCA9IG51bGxcclxuICAgIGNyZWF0ZWRCeVJlZiA9IG51bGxcclxuICAgIGNyZWF0ZWQgPSBudWxsXHJcbiAgICBtb2RpZmllZCA9IG51bGxcclxuICAgIHJldm9rZWQgPSBudWxsXHJcbiAgICBsYWJlbHMgPSBbXVxyXG4gICAgZXh0ZXJuYWxSZWZlcmVuY2VzID0gW11cclxuICAgIG9iamVjdE1hcmtpbmdSZWZzID0gW11cclxuICAgIGdyYW51bGFyTWFya2luZ3MgPSBbXVxyXG5cclxuICAgIGNvbnN0cnVjdG9yKHR5cGUpIHtcclxuICAgICAgICB0aGlzLnR5cGUgPSB0eXBlXHJcbiAgICB9XHJcblxyXG4gICAgc2V0IGlkKHZhbHVlKSB7XHJcbiAgICAgICAgdGhpcy5pZCA9IGAke3RoaXMudHlwZX0tLSR7dmFsdWV9YFxyXG4gICAgfVxyXG5cclxuICAgIHNldCBjcmVhdGVkQnlSZWYodmFsdWUpIHtcclxuICAgICAgICBpZiAodmFsdWUgaW5zdGFuY2VvZiBJZGVudGl0eSkge1xyXG4gICAgICAgICAgICB0aGlzLmNyZWF0ZWRCeVJlZiA9IHZhbHVlLmlkXHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgdGhpcy5jcmVhdGVkQnlSZWYgPSB2YWx1ZVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBhZGRFeHRlcm5hbFJlZmVyZW5jZShyZWYpIHtcclxuICAgICAgICBpZiAoIShyZWYgaW5zdGFuY2VvZiBFeHRlcm5hbFJlZmVyZW5jZSkpXHJcbiAgICAgICAgICAgIHRocm93IEVycm9yKCdZb3UgY2FuIG9ubHkgYWRkIGFuIGV4dGVybmFsIHJlZmVyZW5jZSBvZiB0aGUgRXh0ZXJuYWxSZWZlcmVuY2UgdHlwZSEnKVxyXG4gICAgICAgICAgICBcclxuICAgICAgICB0aGlzLmV4dGVybmFsUmVmZXJlbmNlcy5wdXNoKHJlZilcclxuICAgIH1cclxuXHJcbiAgICB0b0pTT04oKSB7XHJcbiAgICAgICAgaWYgKCF0aGlzLnR5cGUpXHJcbiAgICAgICAgICAgIHRocm93IEVycm9yKGBTVElYIDIuMCByZXF1aXJlcyBhbiBvYmplY3QgdHlwZSFgKVxyXG4gICAgICAgIGlmICghdGhpcy5pZClcclxuICAgICAgICAgICAgdGhyb3cgRXJyb3IoYFNUSVggMi4wIHJlcXVpcmVzIGFuIG9iamVjdCBJRCFgKVxyXG4gICAgICAgIGlmICghdGhpcy5jcmVhdGVkKVxyXG4gICAgICAgICAgICB0aHJvdyBFcnJvcihgU1RJWCAyLjAgcmVxdWlyZXMgYSBjcmVhdGVkIHRpbWVzdGFtcCFgKVxyXG4gICAgICAgIGlmICghdGhpcy5tb2RpZmllZClcclxuICAgICAgICAgICAgdGhyb3cgRXJyb3IoYFNUSVggMi4wIHJlcXVpcmVzIGEgbW9kaWZpZWQgdGltZXN0YW1wIWApXHJcblxyXG4gICAgICAgIGxldCBvdXRwdXQgPSB7XHJcbiAgICAgICAgICAgIHR5cGU6IHRoaXMudHlwZSxcclxuICAgICAgICAgICAgaWQ6IHRoaXMuaWQsXHJcbiAgICAgICAgICAgIGNyZWF0ZWQ6IHRoaXMuY3JlYXRlZCxcclxuICAgICAgICAgICAgbW9kaWZpZWQ6IHRoaXMubW9kaWZpZWRcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmICh0aGlzLmNyZWF0ZWRCeVJlZilcclxuICAgICAgICAgICAgb3V0cHV0LmNyZWF0ZWRfYnlfcmVmID0gdGhpcy5jcmVhdGVkQnlSZWZcclxuICAgICAgICBpZiAodGhpcy5yZXZva2VkKVxyXG4gICAgICAgICAgICBvdXRwdXQucmV2b2tlZCA9IHRoaXMucmV2b2tlZFxyXG4gICAgICAgIGlmICh0aGlzLmxhYmVscylcclxuICAgICAgICAgICAgb3V0cHV0LmxhYmVscyA9IHRoaXMubGFiZWxzXHJcbiAgICAgICAgaWYgKHRoaXMub2JqZWN0TWFya2luZ1JlZnMpXHJcbiAgICAgICAgICAgIG91dHB1dC5vYmplY3RfbWFya2luZ19yZWZzID0gdGhpcy5vYmplY3RNYXJraW5nUmVmc1xyXG5cclxuICAgICAgICBsZXQgZ3JhbnVsYXJNYXJraW5ncyA9IFtdXHJcbiAgICAgICAgZm9yIChsZXQgaSBpbiB0aGlzLmdyYW51bGFyTWFya2luZ3MpXHJcbiAgICAgICAgICAgIGdyYW51bGFyTWFya2luZ3MucHVzaChpLnRvSlNPTigpKVxyXG4gICAgICAgIGlmIChncmFudWxhck1hcmtpbmdzKVxyXG4gICAgICAgICAgICBvdXRwdXQuZ3JhbnVsYXJfbWFya2luZ3MgPSBncmFudWxhck1hcmtpbmdzXHJcblxyXG4gICAgICAgIGxldCBleHRlcm5hbFJlZnMgPSBbXVxyXG4gICAgICAgIGZvciAobGV0IGkgaW4gdGhpcy5leHRlcm5hbFJlZmVyZW5jZXMpXHJcbiAgICAgICAgICAgIGV4dGVybmFsUmVmcy5wdXNoKGkudG9KU09OKCkpXHJcbiAgICAgICAgaWYgKGV4dGVybmFsUmVmcylcclxuICAgICAgICAgICAgb3V0cHV0LmV4dGVybmFsX3JlZmVyZW5jZXMgPSBleHRlcm5hbFJlZnNcclxuXHJcbiAgICAgICAgcmV0dXJuIG91dHB1dFxyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBCYXNlT2JqZWN0Il19",
    "map": {
      "version": 3,
      "sources": [
        "baseObject.js"
      ],
      "names": [
        "BaseObject",
        "type",
        "ref",
        "ExternalReference",
        "Error",
        "externalReferences",
        "push",
        "id",
        "created",
        "modified",
        "output",
        "createdByRef",
        "created_by_ref",
        "revoked",
        "labels",
        "objectMarkingRefs",
        "object_marking_refs",
        "granularMarkings",
        "i",
        "toJSON",
        "granular_markings",
        "externalRefs",
        "external_references",
        "value",
        "Identity"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;;;;;;;;;IAEMA,U;;;AAaF,sBAAYC,IAAZ,EAAkB;AAAA;;AAAA,kCAXX,IAWW;;AAAA,gCAVb,IAUa;;AAAA,0CATH,IASG;;AAAA,qCARR,IAQQ;;AAAA,sCAPP,IAOO;;AAAA,qCANR,IAMQ;;AAAA,oCALT,EAKS;;AAAA,gDAJG,EAIH;;AAAA,+CAHE,EAGF;;AAAA,8CAFC,EAED;;AACd,SAAKA,IAAL,GAAYA,IAAZ;AACH;;;;yCAcoBC,G,EAAK;AACtB,UAAI,EAAEA,GAAG,YAAYC,6BAAjB,CAAJ,EACI,MAAMC,KAAK,CAAC,uEAAD,CAAX;AAEJ,WAAKC,kBAAL,CAAwBC,IAAxB,CAA6BJ,GAA7B;AACH;;;6BAEQ;AACL,UAAI,CAAC,KAAKD,IAAV,EACI,MAAMG,KAAK,qCAAX;AACJ,UAAI,CAAC,KAAKG,EAAV,EACI,MAAMH,KAAK,mCAAX;AACJ,UAAI,CAAC,KAAKI,OAAV,EACI,MAAMJ,KAAK,0CAAX;AACJ,UAAI,CAAC,KAAKK,QAAV,EACI,MAAML,KAAK,2CAAX;AAEJ,UAAIM,MAAM,GAAG;AACTT,QAAAA,IAAI,EAAE,KAAKA,IADF;AAETM,QAAAA,EAAE,EAAE,KAAKA,EAFA;AAGTC,QAAAA,OAAO,EAAE,KAAKA,OAHL;AAITC,QAAAA,QAAQ,EAAE,KAAKA;AAJN,OAAb;AAOA,UAAI,KAAKE,YAAT,EACID,MAAM,CAACE,cAAP,GAAwB,KAAKD,YAA7B;AACJ,UAAI,KAAKE,OAAT,EACIH,MAAM,CAACG,OAAP,GAAiB,KAAKA,OAAtB;AACJ,UAAI,KAAKC,MAAT,EACIJ,MAAM,CAACI,MAAP,GAAgB,KAAKA,MAArB;AACJ,UAAI,KAAKC,iBAAT,EACIL,MAAM,CAACM,mBAAP,GAA6B,KAAKD,iBAAlC;AAEJ,UAAIE,gBAAgB,GAAG,EAAvB;;AACA,WAAK,IAAIC,CAAT,IAAc,KAAKD,gBAAnB;AACIA,QAAAA,gBAAgB,CAACX,IAAjB,CAAsBY,CAAC,CAACC,MAAF,EAAtB;AADJ;;AAEA,UAAIF,gBAAJ,EACIP,MAAM,CAACU,iBAAP,GAA2BH,gBAA3B;AAEJ,UAAII,YAAY,GAAG,EAAnB;;AACA,WAAK,IAAIH,EAAT,IAAc,KAAKb,kBAAnB;AACIgB,QAAAA,YAAY,CAACf,IAAb,CAAkBY,EAAC,CAACC,MAAF,EAAlB;AADJ;;AAEA,UAAIE,YAAJ,EACIX,MAAM,CAACY,mBAAP,GAA6BD,YAA7B;AAEJ,aAAOX,MAAP;AACH;;;sBA1DMa,K,EAAO;AACV,WAAKhB,EAAL,aAAa,KAAKN,IAAlB,eAA2BsB,KAA3B;AACH;;;sBAEgBA,K,EAAO;AACpB,UAAIA,KAAK,YAAYC,oBAArB,EAA+B;AAC3B,aAAKb,YAAL,GAAoBY,KAAK,CAAChB,EAA1B;AACH,OAFD,MAEO;AACH,aAAKI,YAAL,GAAoBY,KAApB;AACH;AACJ;;;;;;eAmDUvB,U",
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects",
      "sourcesContent": [
        "import Identity from './identity'\r\nimport ExternalReference from './externalReference'\r\n\r\nclass BaseObject {\r\n\r\n    type = null\r\n    id = null\r\n    createdByRef = null\r\n    created = null\r\n    modified = null\r\n    revoked = null\r\n    labels = []\r\n    externalReferences = []\r\n    objectMarkingRefs = []\r\n    granularMarkings = []\r\n\r\n    constructor(type) {\r\n        this.type = type\r\n    }\r\n\r\n    set id(value) {\r\n        this.id = `${this.type}--${value}`\r\n    }\r\n\r\n    set createdByRef(value) {\r\n        if (value instanceof Identity) {\r\n            this.createdByRef = value.id\r\n        } else {\r\n            this.createdByRef = value\r\n        }\r\n    }\r\n\r\n    addExternalReference(ref) {\r\n        if (!(ref instanceof ExternalReference))\r\n            throw Error('You can only add an external reference of the ExternalReference type!')\r\n            \r\n        this.externalReferences.push(ref)\r\n    }\r\n\r\n    toJSON() {\r\n        if (!this.type)\r\n            throw Error(`STIX 2.0 requires an object type!`)\r\n        if (!this.id)\r\n            throw Error(`STIX 2.0 requires an object ID!`)\r\n        if (!this.created)\r\n            throw Error(`STIX 2.0 requires a created timestamp!`)\r\n        if (!this.modified)\r\n            throw Error(`STIX 2.0 requires a modified timestamp!`)\r\n\r\n        let output = {\r\n            type: this.type,\r\n            id: this.id,\r\n            created: this.created,\r\n            modified: this.modified\r\n        }\r\n\r\n        if (this.createdByRef)\r\n            output.created_by_ref = this.createdByRef\r\n        if (this.revoked)\r\n            output.revoked = this.revoked\r\n        if (this.labels)\r\n            output.labels = this.labels\r\n        if (this.objectMarkingRefs)\r\n            output.object_marking_refs = this.objectMarkingRefs\r\n\r\n        let granularMarkings = []\r\n        for (let i in this.granularMarkings)\r\n            granularMarkings.push(i.toJSON())\r\n        if (granularMarkings)\r\n            output.granular_markings = granularMarkings\r\n\r\n        let externalRefs = []\r\n        for (let i in this.externalReferences)\r\n            externalRefs.push(i.toJSON())\r\n        if (externalRefs)\r\n            output.external_references = externalRefs\r\n\r\n        return output\r\n    }\r\n}\r\n\r\nexport default BaseObject"
      ]
    },
    "sourceType": "script",
    "mtime": 1565900310448
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\lib\\\\objects\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"filename\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\lib\\\\objects\\\\externalReference.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects\\externalReference.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects\\externalReference.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects\\externalReference.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects",
        "sourceFileName": "externalReference.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar ExternalReference =\n/*#__PURE__*/\nfunction () {\n  function ExternalReference(sourceName) {\n    _classCallCheck(this, ExternalReference);\n\n    _defineProperty(this, \"id\", null);\n\n    _defineProperty(this, \"externalId\", null);\n\n    _defineProperty(this, \"sourceName\", null);\n\n    this.sourceName = sourceName;\n  }\n\n  _createClass(ExternalReference, [{\n    key: \"toJSON\",\n    value: function toJSON() {\n      var output = {\n        sourceName: this.sourceName\n      };\n      if (!this.externalId && !this.id) throw Error('An external reference must have either an ID or an External ID!');\n      if (this.externalId) output.external_id = this.externalId;\n      if (this.id) output.id = this.id;\n      return output;\n    }\n  }]);\n\n  return ExternalReference;\n}();\n\nvar _default = ExternalReference;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImV4dGVybmFsUmVmZXJlbmNlLmpzIl0sIm5hbWVzIjpbIkV4dGVybmFsUmVmZXJlbmNlIiwic291cmNlTmFtZSIsIm91dHB1dCIsImV4dGVybmFsSWQiLCJpZCIsIkVycm9yIiwiZXh0ZXJuYWxfaWQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztJQUFNQSxpQjs7O0FBTUYsNkJBQVlDLFVBQVosRUFBd0I7QUFBQTs7QUFBQSxnQ0FKbkIsSUFJbUI7O0FBQUEsd0NBSFgsSUFHVzs7QUFBQSx3Q0FGWCxJQUVXOztBQUNwQixTQUFLQSxVQUFMLEdBQWtCQSxVQUFsQjtBQUNIOzs7OzZCQUVRO0FBQ0wsVUFBSUMsTUFBTSxHQUFHO0FBQUVELFFBQUFBLFVBQVUsRUFBRSxLQUFLQTtBQUFuQixPQUFiO0FBQ0EsVUFBSSxDQUFDLEtBQUtFLFVBQU4sSUFBb0IsQ0FBQyxLQUFLQyxFQUE5QixFQUNJLE1BQU1DLEtBQUssQ0FBQyxpRUFBRCxDQUFYO0FBRUosVUFBSSxLQUFLRixVQUFULEVBQ0lELE1BQU0sQ0FBQ0ksV0FBUCxHQUFxQixLQUFLSCxVQUExQjtBQUNKLFVBQUksS0FBS0MsRUFBVCxFQUNJRixNQUFNLENBQUNFLEVBQVAsR0FBWSxLQUFLQSxFQUFqQjtBQUVKLGFBQU9GLE1BQVA7QUFDSDs7Ozs7O2VBR1VGLGlCIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcWmFjaCBTaGFtZXNcXERvY3VtZW50c1xcRGV2ZWxvcG1lbnRcXGpzLTItc3RpeFxcbGliXFxvYmplY3RzIiwic291cmNlc0NvbnRlbnQiOlsiY2xhc3MgRXh0ZXJuYWxSZWZlcmVuY2Uge1xyXG5cclxuICAgIGlkID0gbnVsbFxyXG4gICAgZXh0ZXJuYWxJZCA9IG51bGxcclxuICAgIHNvdXJjZU5hbWUgPSBudWxsXHJcbiAgICBcclxuICAgIGNvbnN0cnVjdG9yKHNvdXJjZU5hbWUpIHtcclxuICAgICAgICB0aGlzLnNvdXJjZU5hbWUgPSBzb3VyY2VOYW1lXHJcbiAgICB9XHJcblxyXG4gICAgdG9KU09OKCkge1xyXG4gICAgICAgIGxldCBvdXRwdXQgPSB7IHNvdXJjZU5hbWU6IHRoaXMuc291cmNlTmFtZSB9XHJcbiAgICAgICAgaWYgKCF0aGlzLmV4dGVybmFsSWQgJiYgIXRoaXMuaWQpXHJcbiAgICAgICAgICAgIHRocm93IEVycm9yKCdBbiBleHRlcm5hbCByZWZlcmVuY2UgbXVzdCBoYXZlIGVpdGhlciBhbiBJRCBvciBhbiBFeHRlcm5hbCBJRCEnKVxyXG5cclxuICAgICAgICBpZiAodGhpcy5leHRlcm5hbElkKVxyXG4gICAgICAgICAgICBvdXRwdXQuZXh0ZXJuYWxfaWQgPSB0aGlzLmV4dGVybmFsSWRcclxuICAgICAgICBpZiAodGhpcy5pZClcclxuICAgICAgICAgICAgb3V0cHV0LmlkID0gdGhpcy5pZFxyXG5cclxuICAgICAgICByZXR1cm4gb3V0cHV0XHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IEV4dGVybmFsUmVmZXJlbmNlIl19",
    "map": {
      "version": 3,
      "sources": [
        "externalReference.js"
      ],
      "names": [
        "ExternalReference",
        "sourceName",
        "output",
        "externalId",
        "id",
        "Error",
        "external_id"
      ],
      "mappings": ";;;;;;;;;;;;;;;IAAMA,iB;;;AAMF,6BAAYC,UAAZ,EAAwB;AAAA;;AAAA,gCAJnB,IAImB;;AAAA,wCAHX,IAGW;;AAAA,wCAFX,IAEW;;AACpB,SAAKA,UAAL,GAAkBA,UAAlB;AACH;;;;6BAEQ;AACL,UAAIC,MAAM,GAAG;AAAED,QAAAA,UAAU,EAAE,KAAKA;AAAnB,OAAb;AACA,UAAI,CAAC,KAAKE,UAAN,IAAoB,CAAC,KAAKC,EAA9B,EACI,MAAMC,KAAK,CAAC,iEAAD,CAAX;AAEJ,UAAI,KAAKF,UAAT,EACID,MAAM,CAACI,WAAP,GAAqB,KAAKH,UAA1B;AACJ,UAAI,KAAKC,EAAT,EACIF,MAAM,CAACE,EAAP,GAAY,KAAKA,EAAjB;AAEJ,aAAOF,MAAP;AACH;;;;;;eAGUF,iB",
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects",
      "sourcesContent": [
        "class ExternalReference {\r\n\r\n    id = null\r\n    externalId = null\r\n    sourceName = null\r\n    \r\n    constructor(sourceName) {\r\n        this.sourceName = sourceName\r\n    }\r\n\r\n    toJSON() {\r\n        let output = { sourceName: this.sourceName }\r\n        if (!this.externalId && !this.id)\r\n            throw Error('An external reference must have either an ID or an External ID!')\r\n\r\n        if (this.externalId)\r\n            output.external_id = this.externalId\r\n        if (this.id)\r\n            output.id = this.id\r\n\r\n        return output\r\n    }\r\n}\r\n\r\nexport default ExternalReference"
      ]
    },
    "sourceType": "script",
    "mtime": 1565900009943
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\lib\\\\objects\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"filename\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\lib\\\\objects\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects\\index.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "// import * as Bundle from './bundle'\n// import * as GranularMarking from './granularMarking'\n// import * as Marking from './marking'\n// export default {\n//     Bundle,\n//     GranularMarking,\n//     Marking\n// }\n\"use strict\";\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxaYWNoIFNoYW1lc1xcRG9jdW1lbnRzXFxEZXZlbG9wbWVudFxcanMtMi1zdGl4XFxsaWJcXG9iamVjdHMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBpbXBvcnQgKiBhcyBCdW5kbGUgZnJvbSAnLi9idW5kbGUnXHJcbi8vIGltcG9ydCAqIGFzIEdyYW51bGFyTWFya2luZyBmcm9tICcuL2dyYW51bGFyTWFya2luZydcclxuLy8gaW1wb3J0ICogYXMgTWFya2luZyBmcm9tICcuL21hcmtpbmcnXHJcblxyXG4vLyBleHBvcnQgZGVmYXVsdCB7XHJcbi8vICAgICBCdW5kbGUsXHJcbi8vICAgICBHcmFudWxhck1hcmtpbmcsXHJcbi8vICAgICBNYXJraW5nXHJcbi8vIH0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [],
      "mappings": "AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA",
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects",
      "sourcesContent": [
        "// import * as Bundle from './bundle'\r\n// import * as GranularMarking from './granularMarking'\r\n// import * as Marking from './marking'\r\n\r\n// export default {\r\n//     Bundle,\r\n//     GranularMarking,\r\n//     Marking\r\n// }"
      ]
    },
    "sourceType": "script",
    "mtime": 1565903063770
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\examples\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"filename\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\examples\\\\identifiying-a-threatq-actor-profile.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\examples",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\examples\\identifiying-a-threatq-actor-profile.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\examples\\identifiying-a-threatq-actor-profile.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\examples\\identifiying-a-threatq-actor-profile.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\examples",
        "sourceFileName": "identifiying-a-threatq-actor-profile.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _index = require(\"../index\");\n\nvar bundle = new _index.Bundle();\nbundle.id = 'bundle--c9567f73-3803-415c-b06e-2b0622830e5d'; // Create the actor profile\n\nvar actor = new _index.ThreatActor('Disco Team Threat Actor Group');\nactor.id = 'threat-actor--dfaa8d77-07e2-4e28-b2c8-92e9f7b04428';\nactor.created = '2014-11-19T23:39:03.893Z';\nactor.modified = '2014-11-19T23:39:03.893Z';\nactor.description = 'This organized threat actor group operates to create profit from all types of crime.';\nactor.addLabel(_index.Vocabulary.ThreatActorLabels.CRIME_SYNDICATE);\nactor.addAlias('Equipo del Discoteca');\nactor.addRole(_index.Vocabulary.ThreatActorRoles.AGENT);\nactor.addGoal('Steal Credit Card information');\nactor.sophistication = _index.Vocabulary.ThreatActorSophistications.EXPERT;\nactor.resourceLevel = _index.Vocabulary.AttackResourceLevels.ORGANIZATION;\nactor.primaryMotivation = _index.Vocabulary.AttackMotivations.PERSONAL_GAIN; // Create the identity profile\n\nvar identity = new _index.Identity('Disco Team');\nidentity.id = 'identity--733c5838-34d9-4fbf-949c-62aba761184c';\nidentity.created = '2016-08-23T18:05:49.307Z';\nidentity.modified = '2016-08-23T18:05:49.307Z';\nidentity.description = 'Disco Team is the name of an organized threat actor crime-syndicate.';\nidentity.identityClass = _index.Vocabulary.IdentityClasses.ORGANIZATION, identity.contactInformation = 'disco-team@stealthmail.com'; // Add the relationship\n\nvar relationship = new _index.Relationship(_index.Vocabulary.RelationshipTypes.ATTRIBUTED_TO);\nrelationship.id = 'relationship--966c5838-34d9-4fbf-949c-62aba7611837';\nrelationship.created = '2016-08-23T18:05:49.307Z';\nrelationship.modified = '2016-08-23T18:05:49.307Z';\nrelationship.setSourceRef(actor);\nrelationship.setTargetRef(identity); // Add to bundle\n\nbundle.addObject(actor);\nbundle.addObject(identity);\nbundle.addObject(relationship); // Print out JSON\n\nconsole.log(JSON.stringify(bundle.toJSON(), null, 4));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImlkZW50aWZpeWluZy1hLXRocmVhdHEtYWN0b3ItcHJvZmlsZS5qcyJdLCJuYW1lcyI6WyJidW5kbGUiLCJCdW5kbGUiLCJpZCIsImFjdG9yIiwiVGhyZWF0QWN0b3IiLCJjcmVhdGVkIiwibW9kaWZpZWQiLCJkZXNjcmlwdGlvbiIsImFkZExhYmVsIiwiVm9jYWJ1bGFyeSIsIlRocmVhdEFjdG9yTGFiZWxzIiwiQ1JJTUVfU1lORElDQVRFIiwiYWRkQWxpYXMiLCJhZGRSb2xlIiwiVGhyZWF0QWN0b3JSb2xlcyIsIkFHRU5UIiwiYWRkR29hbCIsInNvcGhpc3RpY2F0aW9uIiwiVGhyZWF0QWN0b3JTb3BoaXN0aWNhdGlvbnMiLCJFWFBFUlQiLCJyZXNvdXJjZUxldmVsIiwiQXR0YWNrUmVzb3VyY2VMZXZlbHMiLCJPUkdBTklaQVRJT04iLCJwcmltYXJ5TW90aXZhdGlvbiIsIkF0dGFja01vdGl2YXRpb25zIiwiUEVSU09OQUxfR0FJTiIsImlkZW50aXR5IiwiSWRlbnRpdHkiLCJpZGVudGl0eUNsYXNzIiwiSWRlbnRpdHlDbGFzc2VzIiwiY29udGFjdEluZm9ybWF0aW9uIiwicmVsYXRpb25zaGlwIiwiUmVsYXRpb25zaGlwIiwiUmVsYXRpb25zaGlwVHlwZXMiLCJBVFRSSUJVVEVEX1RPIiwic2V0U291cmNlUmVmIiwic2V0VGFyZ2V0UmVmIiwiYWRkT2JqZWN0IiwiY29uc29sZSIsImxvZyIsIkpTT04iLCJzdHJpbmdpZnkiLCJ0b0pTT04iXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBRUEsSUFBTUEsTUFBTSxHQUFHLElBQUlDLGFBQUosRUFBZjtBQUNBRCxNQUFNLENBQUNFLEVBQVAsR0FBWSw4Q0FBWixDLENBRUE7O0FBQ0EsSUFBTUMsS0FBSyxHQUFHLElBQUlDLGtCQUFKLENBQWdCLCtCQUFoQixDQUFkO0FBQ0FELEtBQUssQ0FBQ0QsRUFBTixHQUFXLG9EQUFYO0FBQ0FDLEtBQUssQ0FBQ0UsT0FBTixHQUFnQiwwQkFBaEI7QUFDQUYsS0FBSyxDQUFDRyxRQUFOLEdBQWlCLDBCQUFqQjtBQUNBSCxLQUFLLENBQUNJLFdBQU4sR0FBb0Isc0ZBQXBCO0FBQ0FKLEtBQUssQ0FBQ0ssUUFBTixDQUFlQyxrQkFBV0MsaUJBQVgsQ0FBNkJDLGVBQTVDO0FBQ0FSLEtBQUssQ0FBQ1MsUUFBTixDQUFlLHNCQUFmO0FBQ0FULEtBQUssQ0FBQ1UsT0FBTixDQUFjSixrQkFBV0ssZ0JBQVgsQ0FBNEJDLEtBQTFDO0FBQ0FaLEtBQUssQ0FBQ2EsT0FBTixDQUFjLCtCQUFkO0FBQ0FiLEtBQUssQ0FBQ2MsY0FBTixHQUF1QlIsa0JBQVdTLDBCQUFYLENBQXNDQyxNQUE3RDtBQUNBaEIsS0FBSyxDQUFDaUIsYUFBTixHQUFzQlgsa0JBQVdZLG9CQUFYLENBQWdDQyxZQUF0RDtBQUNBbkIsS0FBSyxDQUFDb0IsaUJBQU4sR0FBMEJkLGtCQUFXZSxpQkFBWCxDQUE2QkMsYUFBdkQsQyxDQUVBOztBQUNBLElBQU1DLFFBQVEsR0FBRyxJQUFJQyxlQUFKLENBQWEsWUFBYixDQUFqQjtBQUNBRCxRQUFRLENBQUN4QixFQUFULEdBQWMsZ0RBQWQ7QUFDQXdCLFFBQVEsQ0FBQ3JCLE9BQVQsR0FBbUIsMEJBQW5CO0FBQ0FxQixRQUFRLENBQUNwQixRQUFULEdBQW9CLDBCQUFwQjtBQUNBb0IsUUFBUSxDQUFDbkIsV0FBVCxHQUF1QixzRUFBdkI7QUFDQW1CLFFBQVEsQ0FBQ0UsYUFBVCxHQUF5Qm5CLGtCQUFXb0IsZUFBWCxDQUEyQlAsWUFBcEQsRUFDQUksUUFBUSxDQUFDSSxrQkFBVCxHQUE4Qiw0QkFEOUIsQyxDQUdBOztBQUNBLElBQU1DLFlBQVksR0FBRyxJQUFJQyxtQkFBSixDQUFpQnZCLGtCQUFXd0IsaUJBQVgsQ0FBNkJDLGFBQTlDLENBQXJCO0FBQ0FILFlBQVksQ0FBQzdCLEVBQWIsR0FBa0Isb0RBQWxCO0FBQ0E2QixZQUFZLENBQUMxQixPQUFiLEdBQXVCLDBCQUF2QjtBQUNBMEIsWUFBWSxDQUFDekIsUUFBYixHQUF3QiwwQkFBeEI7QUFDQXlCLFlBQVksQ0FBQ0ksWUFBYixDQUEwQmhDLEtBQTFCO0FBQ0E0QixZQUFZLENBQUNLLFlBQWIsQ0FBMEJWLFFBQTFCLEUsQ0FFQTs7QUFDQTFCLE1BQU0sQ0FBQ3FDLFNBQVAsQ0FBaUJsQyxLQUFqQjtBQUNBSCxNQUFNLENBQUNxQyxTQUFQLENBQWlCWCxRQUFqQjtBQUNBMUIsTUFBTSxDQUFDcUMsU0FBUCxDQUFpQk4sWUFBakIsRSxDQUVBOztBQUNBTyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsSUFBSSxDQUFDQyxTQUFMLENBQWV6QyxNQUFNLENBQUMwQyxNQUFQLEVBQWYsRUFBZ0MsSUFBaEMsRUFBc0MsQ0FBdEMsQ0FBWiIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXFphY2ggU2hhbWVzXFxEb2N1bWVudHNcXERldmVsb3BtZW50XFxqcy0yLXN0aXhcXGV4YW1wbGVzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQnVuZGxlLCBUaHJlYXRBY3RvciwgSWRlbnRpdHksIFJlbGF0aW9uc2hpcCwgVm9jYWJ1bGFyeSB9IGZyb20gJy4uL2luZGV4J1xyXG5cclxuY29uc3QgYnVuZGxlID0gbmV3IEJ1bmRsZSgpXHJcbmJ1bmRsZS5pZCA9ICdidW5kbGUtLWM5NTY3ZjczLTM4MDMtNDE1Yy1iMDZlLTJiMDYyMjgzMGU1ZCdcclxuXHJcbi8vIENyZWF0ZSB0aGUgYWN0b3IgcHJvZmlsZVxyXG5jb25zdCBhY3RvciA9IG5ldyBUaHJlYXRBY3RvcignRGlzY28gVGVhbSBUaHJlYXQgQWN0b3IgR3JvdXAnKVxyXG5hY3Rvci5pZCA9ICd0aHJlYXQtYWN0b3ItLWRmYWE4ZDc3LTA3ZTItNGUyOC1iMmM4LTkyZTlmN2IwNDQyOCdcclxuYWN0b3IuY3JlYXRlZCA9ICcyMDE0LTExLTE5VDIzOjM5OjAzLjg5M1onXHJcbmFjdG9yLm1vZGlmaWVkID0gJzIwMTQtMTEtMTlUMjM6Mzk6MDMuODkzWidcclxuYWN0b3IuZGVzY3JpcHRpb24gPSAnVGhpcyBvcmdhbml6ZWQgdGhyZWF0IGFjdG9yIGdyb3VwIG9wZXJhdGVzIHRvIGNyZWF0ZSBwcm9maXQgZnJvbSBhbGwgdHlwZXMgb2YgY3JpbWUuJ1xyXG5hY3Rvci5hZGRMYWJlbChWb2NhYnVsYXJ5LlRocmVhdEFjdG9yTGFiZWxzLkNSSU1FX1NZTkRJQ0FURSlcclxuYWN0b3IuYWRkQWxpYXMoJ0VxdWlwbyBkZWwgRGlzY290ZWNhJylcclxuYWN0b3IuYWRkUm9sZShWb2NhYnVsYXJ5LlRocmVhdEFjdG9yUm9sZXMuQUdFTlQpXHJcbmFjdG9yLmFkZEdvYWwoJ1N0ZWFsIENyZWRpdCBDYXJkIGluZm9ybWF0aW9uJylcclxuYWN0b3Iuc29waGlzdGljYXRpb24gPSBWb2NhYnVsYXJ5LlRocmVhdEFjdG9yU29waGlzdGljYXRpb25zLkVYUEVSVFxyXG5hY3Rvci5yZXNvdXJjZUxldmVsID0gVm9jYWJ1bGFyeS5BdHRhY2tSZXNvdXJjZUxldmVscy5PUkdBTklaQVRJT05cclxuYWN0b3IucHJpbWFyeU1vdGl2YXRpb24gPSBWb2NhYnVsYXJ5LkF0dGFja01vdGl2YXRpb25zLlBFUlNPTkFMX0dBSU5cclxuXHJcbi8vIENyZWF0ZSB0aGUgaWRlbnRpdHkgcHJvZmlsZVxyXG5jb25zdCBpZGVudGl0eSA9IG5ldyBJZGVudGl0eSgnRGlzY28gVGVhbScpXHJcbmlkZW50aXR5LmlkID0gJ2lkZW50aXR5LS03MzNjNTgzOC0zNGQ5LTRmYmYtOTQ5Yy02MmFiYTc2MTE4NGMnXHJcbmlkZW50aXR5LmNyZWF0ZWQgPSAnMjAxNi0wOC0yM1QxODowNTo0OS4zMDdaJ1xyXG5pZGVudGl0eS5tb2RpZmllZCA9ICcyMDE2LTA4LTIzVDE4OjA1OjQ5LjMwN1onXHJcbmlkZW50aXR5LmRlc2NyaXB0aW9uID0gJ0Rpc2NvIFRlYW0gaXMgdGhlIG5hbWUgb2YgYW4gb3JnYW5pemVkIHRocmVhdCBhY3RvciBjcmltZS1zeW5kaWNhdGUuJ1xyXG5pZGVudGl0eS5pZGVudGl0eUNsYXNzID0gVm9jYWJ1bGFyeS5JZGVudGl0eUNsYXNzZXMuT1JHQU5JWkFUSU9OLFxyXG5pZGVudGl0eS5jb250YWN0SW5mb3JtYXRpb24gPSAnZGlzY28tdGVhbUBzdGVhbHRobWFpbC5jb20nXHJcblxyXG4vLyBBZGQgdGhlIHJlbGF0aW9uc2hpcFxyXG5jb25zdCByZWxhdGlvbnNoaXAgPSBuZXcgUmVsYXRpb25zaGlwKFZvY2FidWxhcnkuUmVsYXRpb25zaGlwVHlwZXMuQVRUUklCVVRFRF9UTylcclxucmVsYXRpb25zaGlwLmlkID0gJ3JlbGF0aW9uc2hpcC0tOTY2YzU4MzgtMzRkOS00ZmJmLTk0OWMtNjJhYmE3NjExODM3J1xyXG5yZWxhdGlvbnNoaXAuY3JlYXRlZCA9ICcyMDE2LTA4LTIzVDE4OjA1OjQ5LjMwN1onXHJcbnJlbGF0aW9uc2hpcC5tb2RpZmllZCA9ICcyMDE2LTA4LTIzVDE4OjA1OjQ5LjMwN1onXHJcbnJlbGF0aW9uc2hpcC5zZXRTb3VyY2VSZWYoYWN0b3IpXHJcbnJlbGF0aW9uc2hpcC5zZXRUYXJnZXRSZWYoaWRlbnRpdHkpXHJcblxyXG4vLyBBZGQgdG8gYnVuZGxlXHJcbmJ1bmRsZS5hZGRPYmplY3QoYWN0b3IpXHJcbmJ1bmRsZS5hZGRPYmplY3QoaWRlbnRpdHkpXHJcbmJ1bmRsZS5hZGRPYmplY3QocmVsYXRpb25zaGlwKVxyXG5cclxuLy8gUHJpbnQgb3V0IEpTT05cclxuY29uc29sZS5sb2coSlNPTi5zdHJpbmdpZnkoYnVuZGxlLnRvSlNPTigpLCBudWxsLCA0KSlcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "identifiying-a-threatq-actor-profile.js"
      ],
      "names": [
        "bundle",
        "Bundle",
        "id",
        "actor",
        "ThreatActor",
        "created",
        "modified",
        "description",
        "addLabel",
        "Vocabulary",
        "ThreatActorLabels",
        "CRIME_SYNDICATE",
        "addAlias",
        "addRole",
        "ThreatActorRoles",
        "AGENT",
        "addGoal",
        "sophistication",
        "ThreatActorSophistications",
        "EXPERT",
        "resourceLevel",
        "AttackResourceLevels",
        "ORGANIZATION",
        "primaryMotivation",
        "AttackMotivations",
        "PERSONAL_GAIN",
        "identity",
        "Identity",
        "identityClass",
        "IdentityClasses",
        "contactInformation",
        "relationship",
        "Relationship",
        "RelationshipTypes",
        "ATTRIBUTED_TO",
        "setSourceRef",
        "setTargetRef",
        "addObject",
        "console",
        "log",
        "JSON",
        "stringify",
        "toJSON"
      ],
      "mappings": ";;AAAA;;AAEA,IAAMA,MAAM,GAAG,IAAIC,aAAJ,EAAf;AACAD,MAAM,CAACE,EAAP,GAAY,8CAAZ,C,CAEA;;AACA,IAAMC,KAAK,GAAG,IAAIC,kBAAJ,CAAgB,+BAAhB,CAAd;AACAD,KAAK,CAACD,EAAN,GAAW,oDAAX;AACAC,KAAK,CAACE,OAAN,GAAgB,0BAAhB;AACAF,KAAK,CAACG,QAAN,GAAiB,0BAAjB;AACAH,KAAK,CAACI,WAAN,GAAoB,sFAApB;AACAJ,KAAK,CAACK,QAAN,CAAeC,kBAAWC,iBAAX,CAA6BC,eAA5C;AACAR,KAAK,CAACS,QAAN,CAAe,sBAAf;AACAT,KAAK,CAACU,OAAN,CAAcJ,kBAAWK,gBAAX,CAA4BC,KAA1C;AACAZ,KAAK,CAACa,OAAN,CAAc,+BAAd;AACAb,KAAK,CAACc,cAAN,GAAuBR,kBAAWS,0BAAX,CAAsCC,MAA7D;AACAhB,KAAK,CAACiB,aAAN,GAAsBX,kBAAWY,oBAAX,CAAgCC,YAAtD;AACAnB,KAAK,CAACoB,iBAAN,GAA0Bd,kBAAWe,iBAAX,CAA6BC,aAAvD,C,CAEA;;AACA,IAAMC,QAAQ,GAAG,IAAIC,eAAJ,CAAa,YAAb,CAAjB;AACAD,QAAQ,CAACxB,EAAT,GAAc,gDAAd;AACAwB,QAAQ,CAACrB,OAAT,GAAmB,0BAAnB;AACAqB,QAAQ,CAACpB,QAAT,GAAoB,0BAApB;AACAoB,QAAQ,CAACnB,WAAT,GAAuB,sEAAvB;AACAmB,QAAQ,CAACE,aAAT,GAAyBnB,kBAAWoB,eAAX,CAA2BP,YAApD,EACAI,QAAQ,CAACI,kBAAT,GAA8B,4BAD9B,C,CAGA;;AACA,IAAMC,YAAY,GAAG,IAAIC,mBAAJ,CAAiBvB,kBAAWwB,iBAAX,CAA6BC,aAA9C,CAArB;AACAH,YAAY,CAAC7B,EAAb,GAAkB,oDAAlB;AACA6B,YAAY,CAAC1B,OAAb,GAAuB,0BAAvB;AACA0B,YAAY,CAACzB,QAAb,GAAwB,0BAAxB;AACAyB,YAAY,CAACI,YAAb,CAA0BhC,KAA1B;AACA4B,YAAY,CAACK,YAAb,CAA0BV,QAA1B,E,CAEA;;AACA1B,MAAM,CAACqC,SAAP,CAAiBlC,KAAjB;AACAH,MAAM,CAACqC,SAAP,CAAiBX,QAAjB;AACA1B,MAAM,CAACqC,SAAP,CAAiBN,YAAjB,E,CAEA;;AACAO,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAezC,MAAM,CAAC0C,MAAP,EAAf,EAAgC,IAAhC,EAAsC,CAAtC,CAAZ",
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\examples",
      "sourcesContent": [
        "import { Bundle, ThreatActor, Identity, Relationship, Vocabulary } from '../index'\r\n\r\nconst bundle = new Bundle()\r\nbundle.id = 'bundle--c9567f73-3803-415c-b06e-2b0622830e5d'\r\n\r\n// Create the actor profile\r\nconst actor = new ThreatActor('Disco Team Threat Actor Group')\r\nactor.id = 'threat-actor--dfaa8d77-07e2-4e28-b2c8-92e9f7b04428'\r\nactor.created = '2014-11-19T23:39:03.893Z'\r\nactor.modified = '2014-11-19T23:39:03.893Z'\r\nactor.description = 'This organized threat actor group operates to create profit from all types of crime.'\r\nactor.addLabel(Vocabulary.ThreatActorLabels.CRIME_SYNDICATE)\r\nactor.addAlias('Equipo del Discoteca')\r\nactor.addRole(Vocabulary.ThreatActorRoles.AGENT)\r\nactor.addGoal('Steal Credit Card information')\r\nactor.sophistication = Vocabulary.ThreatActorSophistications.EXPERT\r\nactor.resourceLevel = Vocabulary.AttackResourceLevels.ORGANIZATION\r\nactor.primaryMotivation = Vocabulary.AttackMotivations.PERSONAL_GAIN\r\n\r\n// Create the identity profile\r\nconst identity = new Identity('Disco Team')\r\nidentity.id = 'identity--733c5838-34d9-4fbf-949c-62aba761184c'\r\nidentity.created = '2016-08-23T18:05:49.307Z'\r\nidentity.modified = '2016-08-23T18:05:49.307Z'\r\nidentity.description = 'Disco Team is the name of an organized threat actor crime-syndicate.'\r\nidentity.identityClass = Vocabulary.IdentityClasses.ORGANIZATION,\r\nidentity.contactInformation = 'disco-team@stealthmail.com'\r\n\r\n// Add the relationship\r\nconst relationship = new Relationship(Vocabulary.RelationshipTypes.ATTRIBUTED_TO)\r\nrelationship.id = 'relationship--966c5838-34d9-4fbf-949c-62aba7611837'\r\nrelationship.created = '2016-08-23T18:05:49.307Z'\r\nrelationship.modified = '2016-08-23T18:05:49.307Z'\r\nrelationship.setSourceRef(actor)\r\nrelationship.setTargetRef(identity)\r\n\r\n// Add to bundle\r\nbundle.addObject(actor)\r\nbundle.addObject(identity)\r\nbundle.addObject(relationship)\r\n\r\n// Print out JSON\r\nconsole.log(JSON.stringify(bundle.toJSON(), null, 4))\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1565910049355
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"filename\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\index.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"GranularMarking\", {\n  enumerable: true,\n  get: function get() {\n    return _granularMarking[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"Marking\", {\n  enumerable: true,\n  get: function get() {\n    return _marking[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"Bundle\", {\n  enumerable: true,\n  get: function get() {\n    return _bundle[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"AttackPattern\", {\n  enumerable: true,\n  get: function get() {\n    return _attackPattern[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"BaseObject\", {\n  enumerable: true,\n  get: function get() {\n    return _baseObject[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"Campaign\", {\n  enumerable: true,\n  get: function get() {\n    return _campaign[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"CourseOfAction\", {\n  enumerable: true,\n  get: function get() {\n    return _courseOfAction[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"ExternalReference\", {\n  enumerable: true,\n  get: function get() {\n    return _externalReference[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"Identity\", {\n  enumerable: true,\n  get: function get() {\n    return _identity[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"Indicator\", {\n  enumerable: true,\n  get: function get() {\n    return _indicator[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"IntrusionSet\", {\n  enumerable: true,\n  get: function get() {\n    return _intrusionSet[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"KillChainPhase\", {\n  enumerable: true,\n  get: function get() {\n    return _killChainPhase[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"Malware\", {\n  enumerable: true,\n  get: function get() {\n    return _malware[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"ObservedData\", {\n  enumerable: true,\n  get: function get() {\n    return _observedData[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"Relationship\", {\n  enumerable: true,\n  get: function get() {\n    return _relationship[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"Report\", {\n  enumerable: true,\n  get: function get() {\n    return _report[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"Sighting\", {\n  enumerable: true,\n  get: function get() {\n    return _sighting[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"ThreatActor\", {\n  enumerable: true,\n  get: function get() {\n    return _threatActor[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"Tool\", {\n  enumerable: true,\n  get: function get() {\n    return _tool[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"Vulnerability\", {\n  enumerable: true,\n  get: function get() {\n    return _vulernability[\"default\"];\n  }\n});\nexports.Vocabulary = void 0;\n\nvar _granularMarking = _interopRequireDefault(require(\"./lib/definitions/granularMarking\"));\n\nvar _marking = _interopRequireDefault(require(\"./lib/definitions/marking\"));\n\nvar _bundle = _interopRequireDefault(require(\"./lib/definitions/bundle\"));\n\nvar Vocabulary = _interopRequireWildcard(require(\"./lib/definitions/vocabulary\"));\n\nexports.Vocabulary = Vocabulary;\n\nvar _attackPattern = _interopRequireDefault(require(\"./lib/objects/attackPattern\"));\n\nvar _baseObject = _interopRequireDefault(require(\"./lib/objects/baseObject\"));\n\nvar _campaign = _interopRequireDefault(require(\"./lib/objects/campaign\"));\n\nvar _courseOfAction = _interopRequireDefault(require(\"./lib/objects/courseOfAction\"));\n\nvar _externalReference = _interopRequireDefault(require(\"./lib/objects/externalReference\"));\n\nvar _identity = _interopRequireDefault(require(\"./lib/objects/identity\"));\n\nvar _indicator = _interopRequireDefault(require(\"./lib/objects/indicator\"));\n\nvar _intrusionSet = _interopRequireDefault(require(\"./lib/objects/intrusionSet\"));\n\nvar _killChainPhase = _interopRequireDefault(require(\"./lib/objects/killChainPhase\"));\n\nvar _malware = _interopRequireDefault(require(\"./lib/objects/malware\"));\n\nvar _observedData = _interopRequireDefault(require(\"./lib/objects/observedData\"));\n\nvar _relationship = _interopRequireDefault(require(\"./lib/objects/relationship\"));\n\nvar _report = _interopRequireDefault(require(\"./lib/objects/report\"));\n\nvar _sighting = _interopRequireDefault(require(\"./lib/objects/sighting\"));\n\nvar _threatActor = _interopRequireDefault(require(\"./lib/objects/threatActor\"));\n\nvar _tool = _interopRequireDefault(require(\"./lib/objects/tool\"));\n\nvar _vulernability = _interopRequireDefault(require(\"./lib/objects/vulernability\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj[\"default\"] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQUdBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcWmFjaCBTaGFtZXNcXERvY3VtZW50c1xcRGV2ZWxvcG1lbnRcXGpzLTItc3RpeCIsInNvdXJjZXNDb250ZW50IjpbIi8vIERlZmluaXRpb25zXHJcbmltcG9ydCBHcmFudWxhck1hcmtpbmcgZnJvbSAnLi9saWIvZGVmaW5pdGlvbnMvZ3JhbnVsYXJNYXJraW5nJ1xyXG5pbXBvcnQgTWFya2luZyBmcm9tICcuL2xpYi9kZWZpbml0aW9ucy9tYXJraW5nJ1xyXG5pbXBvcnQgQnVuZGxlIGZyb20gJy4vbGliL2RlZmluaXRpb25zL2J1bmRsZSdcclxuaW1wb3J0ICogYXMgVm9jYWJ1bGFyeSBmcm9tICcuL2xpYi9kZWZpbml0aW9ucy92b2NhYnVsYXJ5J1xyXG5cclxuLy8gT2JqZWN0c1xyXG5pbXBvcnQgQXR0YWNrUGF0dGVybiBmcm9tICcuL2xpYi9vYmplY3RzL2F0dGFja1BhdHRlcm4nXHJcbmltcG9ydCBCYXNlT2JqZWN0IGZyb20gJy4vbGliL29iamVjdHMvYmFzZU9iamVjdCdcclxuaW1wb3J0IENhbXBhaWduIGZyb20gJy4vbGliL29iamVjdHMvY2FtcGFpZ24nXHJcbmltcG9ydCBDb3Vyc2VPZkFjdGlvbiBmcm9tICcuL2xpYi9vYmplY3RzL2NvdXJzZU9mQWN0aW9uJ1xyXG5pbXBvcnQgRXh0ZXJuYWxSZWZlcmVuY2UgZnJvbSAnLi9saWIvb2JqZWN0cy9leHRlcm5hbFJlZmVyZW5jZSdcclxuaW1wb3J0IElkZW50aXR5IGZyb20gJy4vbGliL29iamVjdHMvaWRlbnRpdHknXHJcbmltcG9ydCBJbmRpY2F0b3IgZnJvbSAnLi9saWIvb2JqZWN0cy9pbmRpY2F0b3InXHJcbmltcG9ydCBJbnRydXNpb25TZXQgZnJvbSAnLi9saWIvb2JqZWN0cy9pbnRydXNpb25TZXQnXHJcbmltcG9ydCBLaWxsQ2hhaW5QaGFzZSBmcm9tICcuL2xpYi9vYmplY3RzL2tpbGxDaGFpblBoYXNlJ1xyXG5pbXBvcnQgTWFsd2FyZSBmcm9tICcuL2xpYi9vYmplY3RzL21hbHdhcmUnXHJcbmltcG9ydCBPYnNlcnZlZERhdGEgZnJvbSAnLi9saWIvb2JqZWN0cy9vYnNlcnZlZERhdGEnXHJcbmltcG9ydCBSZWxhdGlvbnNoaXAgZnJvbSAnLi9saWIvb2JqZWN0cy9yZWxhdGlvbnNoaXAnXHJcbmltcG9ydCBSZXBvcnQgZnJvbSAnLi9saWIvb2JqZWN0cy9yZXBvcnQnXHJcbmltcG9ydCBTaWdodGluZyBmcm9tICcuL2xpYi9vYmplY3RzL3NpZ2h0aW5nJ1xyXG5pbXBvcnQgVGhyZWF0QWN0b3IgZnJvbSAnLi9saWIvb2JqZWN0cy90aHJlYXRBY3RvcidcclxuaW1wb3J0IFRvb2wgZnJvbSAnLi9saWIvb2JqZWN0cy90b29sJ1xyXG5pbXBvcnQgVnVsbmVyYWJpbGl0eSBmcm9tICcuL2xpYi9vYmplY3RzL3Z1bGVybmFiaWxpdHknXHJcblxyXG5cclxuZXhwb3J0IHtcclxuICAgIC8vIERlZmluaXRpb25zXHJcbiAgICBNYXJraW5nLFxyXG4gICAgR3JhbnVsYXJNYXJraW5nLFxyXG4gICAgQnVuZGxlLFxyXG4gICAgVm9jYWJ1bGFyeSxcclxuXHJcbiAgICAvLyBPYmplY3RzXHJcbiAgICBBdHRhY2tQYXR0ZXJuLFxyXG4gICAgQmFzZU9iamVjdCxcclxuICAgIENhbXBhaWduLFxyXG4gICAgQ291cnNlT2ZBY3Rpb24sXHJcbiAgICBFeHRlcm5hbFJlZmVyZW5jZSxcclxuICAgIElkZW50aXR5LFxyXG4gICAgSW5kaWNhdG9yLFxyXG4gICAgSW50cnVzaW9uU2V0LFxyXG4gICAgS2lsbENoYWluUGhhc2UsXHJcbiAgICBNYWx3YXJlLFxyXG4gICAgT2JzZXJ2ZWREYXRhLFxyXG4gICAgUmVsYXRpb25zaGlwLFxyXG4gICAgUmVwb3J0LFxyXG4gICAgU2lnaHRpbmcsXHJcbiAgICBUaHJlYXRBY3RvcixcclxuICAgIFRvb2wsXHJcbiAgICBWdWxuZXJhYmlsaXR5XHJcbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [],
      "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;AACA;;AACA;;AACA;;;;AAGA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA",
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "sourcesContent": [
        "// Definitions\r\nimport GranularMarking from './lib/definitions/granularMarking'\r\nimport Marking from './lib/definitions/marking'\r\nimport Bundle from './lib/definitions/bundle'\r\nimport * as Vocabulary from './lib/definitions/vocabulary'\r\n\r\n// Objects\r\nimport AttackPattern from './lib/objects/attackPattern'\r\nimport BaseObject from './lib/objects/baseObject'\r\nimport Campaign from './lib/objects/campaign'\r\nimport CourseOfAction from './lib/objects/courseOfAction'\r\nimport ExternalReference from './lib/objects/externalReference'\r\nimport Identity from './lib/objects/identity'\r\nimport Indicator from './lib/objects/indicator'\r\nimport IntrusionSet from './lib/objects/intrusionSet'\r\nimport KillChainPhase from './lib/objects/killChainPhase'\r\nimport Malware from './lib/objects/malware'\r\nimport ObservedData from './lib/objects/observedData'\r\nimport Relationship from './lib/objects/relationship'\r\nimport Report from './lib/objects/report'\r\nimport Sighting from './lib/objects/sighting'\r\nimport ThreatActor from './lib/objects/threatActor'\r\nimport Tool from './lib/objects/tool'\r\nimport Vulnerability from './lib/objects/vulernability'\r\n\r\n\r\nexport {\r\n    // Definitions\r\n    Marking,\r\n    GranularMarking,\r\n    Bundle,\r\n    Vocabulary,\r\n\r\n    // Objects\r\n    AttackPattern,\r\n    BaseObject,\r\n    Campaign,\r\n    CourseOfAction,\r\n    ExternalReference,\r\n    Identity,\r\n    Indicator,\r\n    IntrusionSet,\r\n    KillChainPhase,\r\n    Malware,\r\n    ObservedData,\r\n    Relationship,\r\n    Report,\r\n    Sighting,\r\n    ThreatActor,\r\n    Tool,\r\n    Vulnerability\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1565907877309
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\lib\\\\constants\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"filename\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\lib\\\\constants\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\constants",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\constants\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\constants\\index.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\constants\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\constants",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar General = _interopRequireWildcard(require(\"./general\"));\n\nvar Vocabulary = _interopRequireWildcard(require(\"./vocabulary\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj[\"default\"] = obj; return newObj; } }\n\nvar _default = {\n  General: General,\n  Vocabulary: Vocabulary\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIkdlbmVyYWwiLCJWb2NhYnVsYXJ5Il0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7Ozs7ZUFFZTtBQUNYQSxFQUFBQSxPQUFPLEVBQVBBLE9BRFc7QUFFWEMsRUFBQUEsVUFBVSxFQUFWQTtBQUZXLEMiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxaYWNoIFNoYW1lc1xcRG9jdW1lbnRzXFxEZXZlbG9wbWVudFxcanMtMi1zdGl4XFxsaWJcXGNvbnN0YW50cyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIEdlbmVyYWwgZnJvbSAnLi9nZW5lcmFsJ1xyXG5pbXBvcnQgKiBhcyBWb2NhYnVsYXJ5IGZyb20gJy4vdm9jYWJ1bGFyeSdcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHtcclxuICAgIEdlbmVyYWwsXHJcbiAgICBWb2NhYnVsYXJ5XHJcbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "General",
        "Vocabulary"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;eAEe;AACXA,EAAAA,OAAO,EAAPA,OADW;AAEXC,EAAAA,UAAU,EAAVA;AAFW,C",
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\constants",
      "sourcesContent": [
        "import * as General from './general'\r\nimport * as Vocabulary from './vocabulary'\r\n\r\nexport default {\r\n    General,\r\n    Vocabulary\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1565902525245
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\lib\\\\constants\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"filename\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\lib\\\\constants\\\\general.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\constants",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\constants\\general.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\constants\\general.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\constants\\general.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\constants",
        "sourceFileName": "general.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TLPs = exports.DefinitionTypes = void 0;\nvar DefinitionTypes = {\n  TLP: 'tlp',\n  STATEMENT: 'statement'\n};\nexports.DefinitionTypes = DefinitionTypes;\nvar TLPs = {\n  WHITE: 'white',\n  GREEN: 'green',\n  AMBER: 'amber',\n  RED: 'red'\n};\nexports.TLPs = TLPs;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdlbmVyYWwuanMiXSwibmFtZXMiOlsiRGVmaW5pdGlvblR5cGVzIiwiVExQIiwiU1RBVEVNRU5UIiwiVExQcyIsIldISVRFIiwiR1JFRU4iLCJBTUJFUiIsIlJFRCJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQU8sSUFBTUEsZUFBZSxHQUFHO0FBQzNCQyxFQUFBQSxHQUFHLEVBQUUsS0FEc0I7QUFFM0JDLEVBQUFBLFNBQVMsRUFBRTtBQUZnQixDQUF4Qjs7QUFLQSxJQUFNQyxJQUFJLEdBQUc7QUFDaEJDLEVBQUFBLEtBQUssRUFBRSxPQURTO0FBRWhCQyxFQUFBQSxLQUFLLEVBQUUsT0FGUztBQUdoQkMsRUFBQUEsS0FBSyxFQUFFLE9BSFM7QUFJaEJDLEVBQUFBLEdBQUcsRUFBRTtBQUpXLENBQWIiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxaYWNoIFNoYW1lc1xcRG9jdW1lbnRzXFxEZXZlbG9wbWVudFxcanMtMi1zdGl4XFxsaWJcXGNvbnN0YW50cyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBEZWZpbml0aW9uVHlwZXMgPSB7XHJcbiAgICBUTFA6ICd0bHAnLFxyXG4gICAgU1RBVEVNRU5UOiAnc3RhdGVtZW50J1xyXG59XHJcblxyXG5leHBvcnQgY29uc3QgVExQcyA9IHtcclxuICAgIFdISVRFOiAnd2hpdGUnLFxyXG4gICAgR1JFRU46ICdncmVlbicsXHJcbiAgICBBTUJFUjogJ2FtYmVyJyxcclxuICAgIFJFRDogJ3JlZCdcclxufSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "general.js"
      ],
      "names": [
        "DefinitionTypes",
        "TLP",
        "STATEMENT",
        "TLPs",
        "WHITE",
        "GREEN",
        "AMBER",
        "RED"
      ],
      "mappings": ";;;;;;AAAO,IAAMA,eAAe,GAAG;AAC3BC,EAAAA,GAAG,EAAE,KADsB;AAE3BC,EAAAA,SAAS,EAAE;AAFgB,CAAxB;;AAKA,IAAMC,IAAI,GAAG;AAChBC,EAAAA,KAAK,EAAE,OADS;AAEhBC,EAAAA,KAAK,EAAE,OAFS;AAGhBC,EAAAA,KAAK,EAAE,OAHS;AAIhBC,EAAAA,GAAG,EAAE;AAJW,CAAb",
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\constants",
      "sourcesContent": [
        "export const DefinitionTypes = {\r\n    TLP: 'tlp',\r\n    STATEMENT: 'statement'\r\n}\r\n\r\nexport const TLPs = {\r\n    WHITE: 'white',\r\n    GREEN: 'green',\r\n    AMBER: 'amber',\r\n    RED: 'red'\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1565901740061
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\lib\\\\constants\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"filename\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\lib\\\\constants\\\\vocabulary.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\constants",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\constants\\vocabulary.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\constants\\vocabulary.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\constants\\vocabulary.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\constants",
        "sourceFileName": "vocabulary.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TLPs = exports.DefinitionTypes = exports.RelationshipTypes = exports.ToolLabels = exports.ThreatActorSophistications = exports.ThreatActorRoles = exports.ThreatActorLabels = exports.ReportLabels = exports.MalwareLabels = exports.IndustrySectors = exports.IndicatorLabels = exports.IdentityClasses = exports.HashingAlgorithms = exports.AttackResourceLevels = exports.AttackMotivations = void 0;\nvar AttackMotivations = {\n  ACCIDENTAL: 'accidental',\n  COERCION: 'coercion',\n  DOMINANCE: 'dominance',\n  IDEOLOGY: 'ideology',\n  NOTORIETY: 'notoriety',\n  ORGANIZATIONAL_GAIN: 'organizational-gain',\n  PERSONAL_GAIN: 'personal-gain',\n  PERSONAL_SATISFACTION: 'personal-satisfaction',\n  REVENGE: 'revenge',\n  UNPREDICTABLE: 'unpredictable'\n};\nexports.AttackMotivations = AttackMotivations;\nvar AttackResourceLevels = {\n  INDIVIDUAL: 'individual',\n  CLUB: 'club',\n  CONTEST: 'contest',\n  TEAM: 'team',\n  ORGANIZATION: 'organization',\n  GOVERNMENT: 'government'\n};\nexports.AttackResourceLevels = AttackResourceLevels;\nvar HashingAlgorithms = {\n  MD5: 'MD5',\n  MD6: 'MD6',\n  RIPEMD_160: 'RIPEMD-160',\n  SHA_1: 'SHA-1',\n  SHA_224: 'SHA-224',\n  SHA_256: 'SHA-256',\n  SHA_384: 'SHA-384',\n  SHA_512: 'SHA-512',\n  SHA3_224: 'SHA3-224',\n  SHA3_256: 'SHA3-256',\n  SHA3_384: 'SHA3-384',\n  SHA3_512: 'SHA3-512',\n  SSDEEP: 'ssdeep',\n  WHIRLPOOL: 'WHIRLPOOL'\n};\nexports.HashingAlgorithms = HashingAlgorithms;\nvar IdentityClasses = {\n  INDIVIDUAL: 'individual',\n  GROUP: 'group',\n  ORGANIZATION: 'organization',\n  CLASS: 'class',\n  UNKNOWN: 'unknown'\n};\nexports.IdentityClasses = IdentityClasses;\nvar IndicatorLabels = {\n  ANOMALOUS_ACTIVITY: 'anomalous-activity',\n  ANONYMIZATION: 'anonymization',\n  BENIGN: 'benign',\n  COMPROMISED: 'compromised',\n  MALICIOUS_ACTIVITY: 'malicious-activity',\n  ATTRIBUTION: 'attribution'\n};\nexports.IndicatorLabels = IndicatorLabels;\nvar IndustrySectors = {\n  AGRICULTURE: 'agriculture',\n  AEROSPACE: 'aerospace',\n  AUTOMOTIVE: 'automotive',\n  COMMUNICATIONS: 'communications',\n  CONSTRUCTION: 'construction',\n  DEFENCE: 'defence',\n  EDUCATION: 'education',\n  ENERGY: 'energy',\n  ENTERTAINMENT: 'entertainment',\n  FINANCIAL_SERVICES: 'financial-services',\n  GOVERNMENT_NATIONAL: 'government-national',\n  GOVERNMENT_REGIONAL: 'government-regional',\n  GOVERNMENT_LOCAL: 'government-local',\n  GOVERNMENT_PUBLIC_SERVICES: 'government-public-services',\n  HEALTHCARE: 'healthcare',\n  HOSPITALITY_LEISURE: 'hospitality-leisure',\n  INFRASTRUCTURE: 'infrastructure',\n  INSURANCE: 'insurance',\n  MANUFACTURING: 'manufacturing',\n  MINING: 'mining',\n  NON_PROFIT: 'non-profit',\n  PHARMACEUTICALS: 'pharmaceuticals',\n  RETAIL: 'retail',\n  TECHNOLOGY: 'technology',\n  TELECOMMUNICATIONS: 'telecommunications',\n  TRANSPORTATION: 'transportation',\n  UTILITIES: 'utilities'\n};\nexports.IndustrySectors = IndustrySectors;\nvar MalwareLabels = {\n  ADWARE: 'adware',\n  BACKDOOR: 'backdoor',\n  BOT: 'bot',\n  DDOS: 'ddos',\n  DROPPER: 'dropper',\n  EXPLOT_KIT: 'explot-kit',\n  KEYLOGGER: 'keylogger',\n  RANSOMWARE: 'ransomware',\n  REMOTE_ACCESS_TROJAN: 'remote-access-trojan',\n  RESOURCE_EXPLOITATION: 'resource-exploitation',\n  ROGUE_SECURITY_SOFTWARE: 'rogue-security-software',\n  ROOTKIT: 'rootkit',\n  SCREEN_CAPTURE: 'screen-capture',\n  SPYWARE: 'spyware',\n  TROJAN: 'trojan',\n  VIRUS: 'virus',\n  WORM: 'worm'\n};\nexports.MalwareLabels = MalwareLabels;\nvar ReportLabels = {\n  THREAT_REPORT: 'threat-report',\n  ATTACK_PATTERN: 'attack-pattern',\n  CAMPAIGN: 'campaign',\n  IDENTITY: 'identity',\n  INDICATOR: 'indicator',\n  INTRUSION_SET: 'intrusion-set',\n  MALWARE: 'malware',\n  THREAT_ACTOR: 'threat-actor',\n  TOOL: 'tool',\n  VULNERABILITY: 'vulnerability'\n};\nexports.ReportLabels = ReportLabels;\nvar ThreatActorLabels = {\n  ACTIVIST: 'activist',\n  COMPETITOR: 'competitor',\n  CRIME_SYNDICATE: 'crime-syndicate',\n  CRIMINAL: 'criminal',\n  HACKER: 'hacker',\n  INSIDER_ACCIDENTAL: 'insider-accidental',\n  INSIDER_DISGRUNTLED: 'insider-disgruntled',\n  NATION_STATE: 'nation-state',\n  SENSATIONALIST: 'sensationalist',\n  SPY: 'spy',\n  TERRORIST: 'terrorist'\n};\nexports.ThreatActorLabels = ThreatActorLabels;\nvar ThreatActorRoles = {\n  AGENT: 'agent',\n  DIRECTOR: 'director',\n  INDEPENDENT: 'independent',\n  INFRASTRUCTURE_ARCHITECT: 'infrastructure-architect',\n  INFRASTRUCTURE_OPERATOR: 'infrastructure-operator',\n  MALWARE_AUTHOR: 'malware-author',\n  SPONSOR: 'sponsor'\n};\nexports.ThreatActorRoles = ThreatActorRoles;\nvar ThreatActorSophistications = {\n  NONE: 'none',\n  MINIMAL: 'minimal',\n  INTERMEDIATE: 'intermediate',\n  ADVANCED: 'advanced',\n  EXPERT: 'expert',\n  INNOVATOR: 'innovator',\n  STRATEGIC: 'strategic'\n};\nexports.ThreatActorSophistications = ThreatActorSophistications;\nvar ToolLabels = {\n  DENIAL_OF_SERVICE: 'denial-of-service',\n  EXPLOITATION: 'exploitation',\n  INFORMATION_GATHERING: 'information-gathering',\n  NETWORK_CAPTURE: 'network-capture',\n  CREDENTIAL_EXPLOITATION: 'credential-exploitation',\n  REMOTE_ACCESS: 'remote-access',\n  VULNERABILITY_SCANNING: 'vulnerability-scanning'\n};\nexports.ToolLabels = ToolLabels;\nvar RelationshipTypes = {\n  TARGETS: 'targets',\n  USES: 'uses',\n  ATTRIBUTED_TO: 'attributed-to',\n  MITIGATES: 'mitigates',\n  INDICATES: 'indicates',\n  VARIANT_OF: 'variant-of',\n  IMPERSONATES: 'impersonates'\n};\nexports.RelationshipTypes = RelationshipTypes;\nvar DefinitionTypes = {\n  TLP: 'tlp',\n  STATEMENT: 'statement'\n};\nexports.DefinitionTypes = DefinitionTypes;\nvar TLPs = {\n  WHITE: 'white',\n  GREEN: 'green',\n  AMBER: 'amber',\n  RED: 'red'\n};\nexports.TLPs = TLPs;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "vocabulary.js"
      ],
      "names": [
        "AttackMotivations",
        "ACCIDENTAL",
        "COERCION",
        "DOMINANCE",
        "IDEOLOGY",
        "NOTORIETY",
        "ORGANIZATIONAL_GAIN",
        "PERSONAL_GAIN",
        "PERSONAL_SATISFACTION",
        "REVENGE",
        "UNPREDICTABLE",
        "AttackResourceLevels",
        "INDIVIDUAL",
        "CLUB",
        "CONTEST",
        "TEAM",
        "ORGANIZATION",
        "GOVERNMENT",
        "HashingAlgorithms",
        "MD5",
        "MD6",
        "RIPEMD_160",
        "SHA_1",
        "SHA_224",
        "SHA_256",
        "SHA_384",
        "SHA_512",
        "SHA3_224",
        "SHA3_256",
        "SHA3_384",
        "SHA3_512",
        "SSDEEP",
        "WHIRLPOOL",
        "IdentityClasses",
        "GROUP",
        "CLASS",
        "UNKNOWN",
        "IndicatorLabels",
        "ANOMALOUS_ACTIVITY",
        "ANONYMIZATION",
        "BENIGN",
        "COMPROMISED",
        "MALICIOUS_ACTIVITY",
        "ATTRIBUTION",
        "IndustrySectors",
        "AGRICULTURE",
        "AEROSPACE",
        "AUTOMOTIVE",
        "COMMUNICATIONS",
        "CONSTRUCTION",
        "DEFENCE",
        "EDUCATION",
        "ENERGY",
        "ENTERTAINMENT",
        "FINANCIAL_SERVICES",
        "GOVERNMENT_NATIONAL",
        "GOVERNMENT_REGIONAL",
        "GOVERNMENT_LOCAL",
        "GOVERNMENT_PUBLIC_SERVICES",
        "HEALTHCARE",
        "HOSPITALITY_LEISURE",
        "INFRASTRUCTURE",
        "INSURANCE",
        "MANUFACTURING",
        "MINING",
        "NON_PROFIT",
        "PHARMACEUTICALS",
        "RETAIL",
        "TECHNOLOGY",
        "TELECOMMUNICATIONS",
        "TRANSPORTATION",
        "UTILITIES",
        "MalwareLabels",
        "ADWARE",
        "BACKDOOR",
        "BOT",
        "DDOS",
        "DROPPER",
        "EXPLOT_KIT",
        "KEYLOGGER",
        "RANSOMWARE",
        "REMOTE_ACCESS_TROJAN",
        "RESOURCE_EXPLOITATION",
        "ROGUE_SECURITY_SOFTWARE",
        "ROOTKIT",
        "SCREEN_CAPTURE",
        "SPYWARE",
        "TROJAN",
        "VIRUS",
        "WORM",
        "ReportLabels",
        "THREAT_REPORT",
        "ATTACK_PATTERN",
        "CAMPAIGN",
        "IDENTITY",
        "INDICATOR",
        "INTRUSION_SET",
        "MALWARE",
        "THREAT_ACTOR",
        "TOOL",
        "VULNERABILITY",
        "ThreatActorLabels",
        "ACTIVIST",
        "COMPETITOR",
        "CRIME_SYNDICATE",
        "CRIMINAL",
        "HACKER",
        "INSIDER_ACCIDENTAL",
        "INSIDER_DISGRUNTLED",
        "NATION_STATE",
        "SENSATIONALIST",
        "SPY",
        "TERRORIST",
        "ThreatActorRoles",
        "AGENT",
        "DIRECTOR",
        "INDEPENDENT",
        "INFRASTRUCTURE_ARCHITECT",
        "INFRASTRUCTURE_OPERATOR",
        "MALWARE_AUTHOR",
        "SPONSOR",
        "ThreatActorSophistications",
        "NONE",
        "MINIMAL",
        "INTERMEDIATE",
        "ADVANCED",
        "EXPERT",
        "INNOVATOR",
        "STRATEGIC",
        "ToolLabels",
        "DENIAL_OF_SERVICE",
        "EXPLOITATION",
        "INFORMATION_GATHERING",
        "NETWORK_CAPTURE",
        "CREDENTIAL_EXPLOITATION",
        "REMOTE_ACCESS",
        "VULNERABILITY_SCANNING",
        "RelationshipTypes",
        "TARGETS",
        "USES",
        "ATTRIBUTED_TO",
        "MITIGATES",
        "INDICATES",
        "VARIANT_OF",
        "IMPERSONATES",
        "DefinitionTypes",
        "TLP",
        "STATEMENT",
        "TLPs",
        "WHITE",
        "GREEN",
        "AMBER",
        "RED"
      ],
      "mappings": ";;;;;;AAAO,IAAMA,iBAAiB,GAAG;AAC7BC,EAAAA,UAAU,EAAE,YADiB;AAE7BC,EAAAA,QAAQ,EAAE,UAFmB;AAG7BC,EAAAA,SAAS,EAAE,WAHkB;AAI7BC,EAAAA,QAAQ,EAAE,UAJmB;AAK7BC,EAAAA,SAAS,EAAE,WALkB;AAM7BC,EAAAA,mBAAmB,EAAE,qBANQ;AAO7BC,EAAAA,aAAa,EAAE,eAPc;AAQ7BC,EAAAA,qBAAqB,EAAE,uBARM;AAS7BC,EAAAA,OAAO,EAAE,SAToB;AAU7BC,EAAAA,aAAa,EAAE;AAVc,CAA1B;;AAaA,IAAMC,oBAAoB,GAAG;AAChCC,EAAAA,UAAU,EAAE,YADoB;AAEhCC,EAAAA,IAAI,EAAE,MAF0B;AAGhCC,EAAAA,OAAO,EAAE,SAHuB;AAIhCC,EAAAA,IAAI,EAAE,MAJ0B;AAKhCC,EAAAA,YAAY,EAAE,cALkB;AAMhCC,EAAAA,UAAU,EAAE;AANoB,CAA7B;;AASA,IAAMC,iBAAiB,GAAG;AAC7BC,EAAAA,GAAG,EAAE,KADwB;AAE7BC,EAAAA,GAAG,EAAE,KAFwB;AAG7BC,EAAAA,UAAU,EAAE,YAHiB;AAI7BC,EAAAA,KAAK,EAAE,OAJsB;AAK7BC,EAAAA,OAAO,EAAE,SALoB;AAM7BC,EAAAA,OAAO,EAAE,SANoB;AAO7BC,EAAAA,OAAO,EAAE,SAPoB;AAQ7BC,EAAAA,OAAO,EAAE,SARoB;AAS7BC,EAAAA,QAAQ,EAAE,UATmB;AAU7BC,EAAAA,QAAQ,EAAE,UAVmB;AAW7BC,EAAAA,QAAQ,EAAE,UAXmB;AAY7BC,EAAAA,QAAQ,EAAE,UAZmB;AAa7BC,EAAAA,MAAM,EAAE,QAbqB;AAc7BC,EAAAA,SAAS,EAAE;AAdkB,CAA1B;;AAiBA,IAAMC,eAAe,GAAG;AAC3BrB,EAAAA,UAAU,EAAE,YADe;AAE3BsB,EAAAA,KAAK,EAAE,OAFoB;AAG3BlB,EAAAA,YAAY,EAAE,cAHa;AAI3BmB,EAAAA,KAAK,EAAE,OAJoB;AAK3BC,EAAAA,OAAO,EAAE;AALkB,CAAxB;;AAQA,IAAMC,eAAe,GAAG;AAC3BC,EAAAA,kBAAkB,EAAE,oBADO;AAE3BC,EAAAA,aAAa,EAAE,eAFY;AAG3BC,EAAAA,MAAM,EAAE,QAHmB;AAI3BC,EAAAA,WAAW,EAAE,aAJc;AAK3BC,EAAAA,kBAAkB,EAAE,oBALO;AAM3BC,EAAAA,WAAW,EAAE;AANc,CAAxB;;AASA,IAAMC,eAAe,GAAG;AAC3BC,EAAAA,WAAW,EAAE,aADc;AAE3BC,EAAAA,SAAS,EAAE,WAFgB;AAG3BC,EAAAA,UAAU,EAAE,YAHe;AAI3BC,EAAAA,cAAc,EAAE,gBAJW;AAK3BC,EAAAA,YAAY,EAAE,cALa;AAM3BC,EAAAA,OAAO,EAAE,SANkB;AAO3BC,EAAAA,SAAS,EAAE,WAPgB;AAQ3BC,EAAAA,MAAM,EAAE,QARmB;AAS3BC,EAAAA,aAAa,EAAE,eATY;AAU3BC,EAAAA,kBAAkB,EAAE,oBAVO;AAW3BC,EAAAA,mBAAmB,EAAE,qBAXM;AAY3BC,EAAAA,mBAAmB,EAAE,qBAZM;AAa3BC,EAAAA,gBAAgB,EAAE,kBAbS;AAc3BC,EAAAA,0BAA0B,EAAE,4BAdD;AAe3BC,EAAAA,UAAU,EAAE,YAfe;AAgB3BC,EAAAA,mBAAmB,EAAE,qBAhBM;AAiB3BC,EAAAA,cAAc,EAAE,gBAjBW;AAkB3BC,EAAAA,SAAS,EAAE,WAlBgB;AAmB3BC,EAAAA,aAAa,EAAE,eAnBY;AAoB3BC,EAAAA,MAAM,EAAE,QApBmB;AAqB3BC,EAAAA,UAAU,EAAE,YArBe;AAsB3BC,EAAAA,eAAe,EAAE,iBAtBU;AAuB3BC,EAAAA,MAAM,EAAE,QAvBmB;AAwB3BC,EAAAA,UAAU,EAAE,YAxBe;AAyB3BC,EAAAA,kBAAkB,EAAE,oBAzBO;AA0B3BC,EAAAA,cAAc,EAAE,gBA1BW;AA2B3BC,EAAAA,SAAS,EAAE;AA3BgB,CAAxB;;AA8BA,IAAMC,aAAa,GAAG;AACzBC,EAAAA,MAAM,EAAE,QADiB;AAEzBC,EAAAA,QAAQ,EAAE,UAFe;AAGzBC,EAAAA,GAAG,EAAE,KAHoB;AAIzBC,EAAAA,IAAI,EAAE,MAJmB;AAKzBC,EAAAA,OAAO,EAAE,SALgB;AAMzBC,EAAAA,UAAU,EAAE,YANa;AAOzBC,EAAAA,SAAS,EAAE,WAPc;AAQzBC,EAAAA,UAAU,EAAE,YARa;AASzBC,EAAAA,oBAAoB,EAAE,sBATG;AAUzBC,EAAAA,qBAAqB,EAAE,uBAVE;AAWzBC,EAAAA,uBAAuB,EAAE,yBAXA;AAYzBC,EAAAA,OAAO,EAAE,SAZgB;AAazBC,EAAAA,cAAc,EAAE,gBAbS;AAczBC,EAAAA,OAAO,EAAE,SAdgB;AAezBC,EAAAA,MAAM,EAAE,QAfiB;AAgBzBC,EAAAA,KAAK,EAAE,OAhBkB;AAiBzBC,EAAAA,IAAI,EAAE;AAjBmB,CAAtB;;AAoBA,IAAMC,YAAY,GAAG;AACxBC,EAAAA,aAAa,EAAE,eADS;AAExBC,EAAAA,cAAc,EAAE,gBAFQ;AAGxBC,EAAAA,QAAQ,EAAE,UAHc;AAIxBC,EAAAA,QAAQ,EAAE,UAJc;AAKxBC,EAAAA,SAAS,EAAE,WALa;AAMxBC,EAAAA,aAAa,EAAE,eANS;AAOxBC,EAAAA,OAAO,EAAE,SAPe;AAQxBC,EAAAA,YAAY,EAAE,cARU;AASxBC,EAAAA,IAAI,EAAE,MATkB;AAUxBC,EAAAA,aAAa,EAAE;AAVS,CAArB;;AAaA,IAAMC,iBAAiB,GAAG;AAC7BC,EAAAA,QAAQ,EAAE,UADmB;AAE7BC,EAAAA,UAAU,EAAE,YAFiB;AAG7BC,EAAAA,eAAe,EAAE,iBAHY;AAI7BC,EAAAA,QAAQ,EAAE,UAJmB;AAK7BC,EAAAA,MAAM,EAAE,QALqB;AAM7BC,EAAAA,kBAAkB,EAAE,oBANS;AAO7BC,EAAAA,mBAAmB,EAAE,qBAPQ;AAQ7BC,EAAAA,YAAY,EAAE,cARe;AAS7BC,EAAAA,cAAc,EAAE,gBATa;AAU7BC,EAAAA,GAAG,EAAE,KAVwB;AAW7BC,EAAAA,SAAS,EAAE;AAXkB,CAA1B;;AAcA,IAAMC,gBAAgB,GAAG;AAC5BC,EAAAA,KAAK,EAAE,OADqB;AAE5BC,EAAAA,QAAQ,EAAE,UAFkB;AAG5BC,EAAAA,WAAW,EAAE,aAHe;AAI5BC,EAAAA,wBAAwB,EAAE,0BAJE;AAK5BC,EAAAA,uBAAuB,EAAE,yBALG;AAM5BC,EAAAA,cAAc,EAAE,gBANY;AAO5BC,EAAAA,OAAO,EAAE;AAPmB,CAAzB;;AAUA,IAAMC,0BAA0B,GAAG;AACtCC,EAAAA,IAAI,EAAE,MADgC;AAEtCC,EAAAA,OAAO,EAAE,SAF6B;AAGtCC,EAAAA,YAAY,EAAE,cAHwB;AAItCC,EAAAA,QAAQ,EAAE,UAJ4B;AAKtCC,EAAAA,MAAM,EAAE,QAL8B;AAMtCC,EAAAA,SAAS,EAAE,WAN2B;AAOtCC,EAAAA,SAAS,EAAE;AAP2B,CAAnC;;AAUA,IAAMC,UAAU,GAAG;AACtBC,EAAAA,iBAAiB,EAAE,mBADG;AAEtBC,EAAAA,YAAY,EAAE,cAFQ;AAGtBC,EAAAA,qBAAqB,EAAE,uBAHD;AAItBC,EAAAA,eAAe,EAAE,iBAJK;AAKtBC,EAAAA,uBAAuB,EAAE,yBALH;AAMtBC,EAAAA,aAAa,EAAE,eANO;AAOtBC,EAAAA,sBAAsB,EAAE;AAPF,CAAnB;;AAUA,IAAMC,iBAAiB,GAAG;AAC7BC,EAAAA,OAAO,EAAE,SADoB;AAE7BC,EAAAA,IAAI,EAAE,MAFuB;AAG7BC,EAAAA,aAAa,EAAE,eAHc;AAI7BC,EAAAA,SAAS,EAAE,WAJkB;AAK7BC,EAAAA,SAAS,EAAE,WALkB;AAM7BC,EAAAA,UAAU,EAAE,YANiB;AAO7BC,EAAAA,YAAY,EAAE;AAPe,CAA1B;;AAUA,IAAMC,eAAe,GAAG;AAC3BC,EAAAA,GAAG,EAAE,KADsB;AAE3BC,EAAAA,SAAS,EAAE;AAFgB,CAAxB;;AAKA,IAAMC,IAAI,GAAG;AAChBC,EAAAA,KAAK,EAAE,OADS;AAEhBC,EAAAA,KAAK,EAAE,OAFS;AAGhBC,EAAAA,KAAK,EAAE,OAHS;AAIhBC,EAAAA,GAAG,EAAE;AAJW,CAAb",
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\constants",
      "sourcesContent": [
        "export const AttackMotivations = {\r\n    ACCIDENTAL: 'accidental',\r\n    COERCION: 'coercion',\r\n    DOMINANCE: 'dominance',\r\n    IDEOLOGY: 'ideology',\r\n    NOTORIETY: 'notoriety',\r\n    ORGANIZATIONAL_GAIN: 'organizational-gain',\r\n    PERSONAL_GAIN: 'personal-gain',\r\n    PERSONAL_SATISFACTION: 'personal-satisfaction',\r\n    REVENGE: 'revenge',\r\n    UNPREDICTABLE: 'unpredictable'\r\n}\r\n\r\nexport const AttackResourceLevels = {\r\n    INDIVIDUAL: 'individual',\r\n    CLUB: 'club',\r\n    CONTEST: 'contest',\r\n    TEAM: 'team',\r\n    ORGANIZATION: 'organization',\r\n    GOVERNMENT: 'government'\r\n}\r\n\r\nexport const HashingAlgorithms = {\r\n    MD5: 'MD5',\r\n    MD6: 'MD6',\r\n    RIPEMD_160: 'RIPEMD-160',\r\n    SHA_1: 'SHA-1',\r\n    SHA_224: 'SHA-224',\r\n    SHA_256: 'SHA-256',\r\n    SHA_384: 'SHA-384',\r\n    SHA_512: 'SHA-512',\r\n    SHA3_224: 'SHA3-224',\r\n    SHA3_256: 'SHA3-256',\r\n    SHA3_384: 'SHA3-384',\r\n    SHA3_512: 'SHA3-512',\r\n    SSDEEP: 'ssdeep',\r\n    WHIRLPOOL: 'WHIRLPOOL'\r\n}\r\n\r\nexport const IdentityClasses = {\r\n    INDIVIDUAL: 'individual',\r\n    GROUP: 'group',\r\n    ORGANIZATION: 'organization',\r\n    CLASS: 'class',\r\n    UNKNOWN: 'unknown'\r\n}\r\n\r\nexport const IndicatorLabels = {\r\n    ANOMALOUS_ACTIVITY: 'anomalous-activity',\r\n    ANONYMIZATION: 'anonymization',\r\n    BENIGN: 'benign',\r\n    COMPROMISED: 'compromised',\r\n    MALICIOUS_ACTIVITY: 'malicious-activity',\r\n    ATTRIBUTION: 'attribution'\r\n}\r\n\r\nexport const IndustrySectors = {\r\n    AGRICULTURE: 'agriculture',\r\n    AEROSPACE: 'aerospace',\r\n    AUTOMOTIVE: 'automotive',\r\n    COMMUNICATIONS: 'communications',\r\n    CONSTRUCTION: 'construction',\r\n    DEFENCE: 'defence',\r\n    EDUCATION: 'education',\r\n    ENERGY: 'energy',\r\n    ENTERTAINMENT: 'entertainment',\r\n    FINANCIAL_SERVICES: 'financial-services',\r\n    GOVERNMENT_NATIONAL: 'government-national',\r\n    GOVERNMENT_REGIONAL: 'government-regional',\r\n    GOVERNMENT_LOCAL: 'government-local',\r\n    GOVERNMENT_PUBLIC_SERVICES: 'government-public-services',\r\n    HEALTHCARE: 'healthcare',\r\n    HOSPITALITY_LEISURE: 'hospitality-leisure',\r\n    INFRASTRUCTURE: 'infrastructure',\r\n    INSURANCE: 'insurance',\r\n    MANUFACTURING: 'manufacturing',\r\n    MINING: 'mining',\r\n    NON_PROFIT: 'non-profit',\r\n    PHARMACEUTICALS: 'pharmaceuticals',\r\n    RETAIL: 'retail',\r\n    TECHNOLOGY: 'technology',\r\n    TELECOMMUNICATIONS: 'telecommunications',\r\n    TRANSPORTATION: 'transportation',\r\n    UTILITIES: 'utilities'\r\n}\r\n\r\nexport const MalwareLabels = {\r\n    ADWARE: 'adware',\r\n    BACKDOOR: 'backdoor',\r\n    BOT: 'bot',\r\n    DDOS: 'ddos',\r\n    DROPPER: 'dropper',\r\n    EXPLOT_KIT: 'explot-kit',\r\n    KEYLOGGER: 'keylogger',\r\n    RANSOMWARE: 'ransomware',\r\n    REMOTE_ACCESS_TROJAN: 'remote-access-trojan',\r\n    RESOURCE_EXPLOITATION: 'resource-exploitation',\r\n    ROGUE_SECURITY_SOFTWARE: 'rogue-security-software',\r\n    ROOTKIT: 'rootkit',\r\n    SCREEN_CAPTURE: 'screen-capture',\r\n    SPYWARE: 'spyware',\r\n    TROJAN: 'trojan',\r\n    VIRUS: 'virus',\r\n    WORM: 'worm'\r\n}\r\n\r\nexport const ReportLabels = {\r\n    THREAT_REPORT: 'threat-report',\r\n    ATTACK_PATTERN: 'attack-pattern',\r\n    CAMPAIGN: 'campaign',\r\n    IDENTITY: 'identity',\r\n    INDICATOR: 'indicator',\r\n    INTRUSION_SET: 'intrusion-set',\r\n    MALWARE: 'malware',\r\n    THREAT_ACTOR: 'threat-actor',\r\n    TOOL: 'tool',\r\n    VULNERABILITY: 'vulnerability'\r\n}\r\n\r\nexport const ThreatActorLabels = {\r\n    ACTIVIST: 'activist',\r\n    COMPETITOR: 'competitor',\r\n    CRIME_SYNDICATE: 'crime-syndicate',\r\n    CRIMINAL: 'criminal',\r\n    HACKER: 'hacker',\r\n    INSIDER_ACCIDENTAL: 'insider-accidental',\r\n    INSIDER_DISGRUNTLED: 'insider-disgruntled',\r\n    NATION_STATE: 'nation-state',\r\n    SENSATIONALIST: 'sensationalist',\r\n    SPY: 'spy',\r\n    TERRORIST: 'terrorist'\r\n}\r\n\r\nexport const ThreatActorRoles = {\r\n    AGENT: 'agent',\r\n    DIRECTOR: 'director',\r\n    INDEPENDENT: 'independent',\r\n    INFRASTRUCTURE_ARCHITECT: 'infrastructure-architect',\r\n    INFRASTRUCTURE_OPERATOR: 'infrastructure-operator',\r\n    MALWARE_AUTHOR: 'malware-author',\r\n    SPONSOR: 'sponsor'\r\n}\r\n\r\nexport const ThreatActorSophistications = {\r\n    NONE: 'none',\r\n    MINIMAL: 'minimal',\r\n    INTERMEDIATE: 'intermediate',\r\n    ADVANCED: 'advanced',\r\n    EXPERT: 'expert',\r\n    INNOVATOR: 'innovator',\r\n    STRATEGIC: 'strategic'\r\n}\r\n\r\nexport const ToolLabels = {\r\n    DENIAL_OF_SERVICE: 'denial-of-service',\r\n    EXPLOITATION: 'exploitation',\r\n    INFORMATION_GATHERING: 'information-gathering',\r\n    NETWORK_CAPTURE: 'network-capture',\r\n    CREDENTIAL_EXPLOITATION: 'credential-exploitation',\r\n    REMOTE_ACCESS: 'remote-access',\r\n    VULNERABILITY_SCANNING: 'vulnerability-scanning'\r\n}\r\n\r\nexport const RelationshipTypes = {\r\n    TARGETS: 'targets',\r\n    USES: 'uses',\r\n    ATTRIBUTED_TO: 'attributed-to',\r\n    MITIGATES: 'mitigates',\r\n    INDICATES: 'indicates',\r\n    VARIANT_OF: 'variant-of',\r\n    IMPERSONATES: 'impersonates'\r\n}\r\n\r\nexport const DefinitionTypes = {\r\n    TLP: 'tlp',\r\n    STATEMENT: 'statement'\r\n}\r\n\r\nexport const TLPs = {\r\n    WHITE: 'white',\r\n    GREEN: 'green',\r\n    AMBER: 'amber',\r\n    RED: 'red'\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1565907007443
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\lib\\\\definitions\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"filename\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\lib\\\\definitions\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\definitions",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\definitions\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\definitions\\index.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\definitions\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\definitions",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _bundle = _interopRequireDefault(require(\"./bundle\"));\n\nvar _granularMarking = _interopRequireDefault(require(\"./granularMarking\"));\n\nvar _marking = _interopRequireDefault(require(\"./marking\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar _default = {\n  Bundle: _bundle[\"default\"],\n  GranularMarking: _granularMarking[\"default\"],\n  Marking: _marking[\"default\"]\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIkJ1bmRsZSIsIkdyYW51bGFyTWFya2luZyIsIk1hcmtpbmciXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7OztlQUVlO0FBQ1hBLEVBQUFBLE1BQU0sRUFBTkEsa0JBRFc7QUFFWEMsRUFBQUEsZUFBZSxFQUFmQSwyQkFGVztBQUdYQyxFQUFBQSxPQUFPLEVBQVBBO0FBSFcsQyIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXFphY2ggU2hhbWVzXFxEb2N1bWVudHNcXERldmVsb3BtZW50XFxqcy0yLXN0aXhcXGxpYlxcZGVmaW5pdGlvbnMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQnVuZGxlIGZyb20gJy4vYnVuZGxlJ1xyXG5pbXBvcnQgR3JhbnVsYXJNYXJraW5nIGZyb20gJy4vZ3JhbnVsYXJNYXJraW5nJ1xyXG5pbXBvcnQgTWFya2luZyBmcm9tICcuL21hcmtpbmcnXHJcblxyXG5leHBvcnQgZGVmYXVsdCB7XHJcbiAgICBCdW5kbGUsXHJcbiAgICBHcmFudWxhck1hcmtpbmcsXHJcbiAgICBNYXJraW5nXHJcbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "Bundle",
        "GranularMarking",
        "Marking"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;;;eAEe;AACXA,EAAAA,MAAM,EAANA,kBADW;AAEXC,EAAAA,eAAe,EAAfA,2BAFW;AAGXC,EAAAA,OAAO,EAAPA;AAHW,C",
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\definitions",
      "sourcesContent": [
        "import Bundle from './bundle'\r\nimport GranularMarking from './granularMarking'\r\nimport Marking from './marking'\r\n\r\nexport default {\r\n    Bundle,\r\n    GranularMarking,\r\n    Marking\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1565903308714
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\lib\\\\definitions\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"filename\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\lib\\\\definitions\\\\bundle.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\definitions",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\definitions\\bundle.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\definitions\\bundle.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\definitions\\bundle.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\definitions",
        "sourceFileName": "bundle.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _baseObject = require(\"../objects/baseObject\");\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar Bundle =\n/*#__PURE__*/\nfunction () {\n  function Bundle() {// TODO: Generate ID\n\n    _classCallCheck(this, Bundle);\n\n    _defineProperty(this, \"type\", 'bundle');\n\n    _defineProperty(this, \"id\", null);\n\n    _defineProperty(this, \"specVersion\", \"2.0\");\n\n    _defineProperty(this, \"objects\", []);\n  }\n\n  _createClass(Bundle, [{\n    key: \"setId\",\n    value: function setId(value) {\n      this.id = \"\".concat(this.type, \"--\").concat(value);\n    }\n  }, {\n    key: \"addObject\",\n    value: function addObject(object) {\n      if (!(object instanceof _baseObject.BaseObject)) throw Error('You cannot add a non-object to a bundle!');\n      this.objects.push(object);\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      if (!this.type) throw Error(\"STIX 2.0 requires a type!\");\n      if (!this.id) throw Error(\"STIX 2.0 requires an ID!\"); // Compile objects as JSON\n\n      var outputObjects = [];\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.objects[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var i = _step.value;\n          outputObjects.push(i.toJSON());\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n            _iterator[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return {\n        type: this.type,\n        id: this.id,\n        spec_version: this.specVersion,\n        objects: outputObjects\n      };\n    }\n  }]);\n\n  return Bundle;\n}();\n\nvar _default = Bundle;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJ1bmRsZS5qcyJdLCJuYW1lcyI6WyJCdW5kbGUiLCJ2YWx1ZSIsImlkIiwidHlwZSIsIm9iamVjdCIsIkJhc2VPYmplY3QiLCJFcnJvciIsIm9iamVjdHMiLCJwdXNoIiwib3V0cHV0T2JqZWN0cyIsImkiLCJ0b0pTT04iLCJzcGVjX3ZlcnNpb24iLCJzcGVjVmVyc2lvbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7Ozs7Ozs7O0lBRU1BLE07OztBQU9GLG9CQUFjLENBQ1Y7O0FBRFU7O0FBQUEsa0NBTFAsUUFLTzs7QUFBQSxnQ0FKVCxJQUlTOztBQUFBLHlDQUhBLEtBR0E7O0FBQUEscUNBRkosRUFFSTtBQUViOzs7OzBCQUVLQyxLLEVBQU87QUFDVCxXQUFLQyxFQUFMLGFBQWEsS0FBS0MsSUFBbEIsZUFBMkJGLEtBQTNCO0FBQ0g7Ozs4QkFFU0csTSxFQUFRO0FBQ2QsVUFBSSxFQUFFQSxNQUFNLFlBQVlDLHNCQUFwQixDQUFKLEVBQ0ksTUFBTUMsS0FBSyxDQUFDLDBDQUFELENBQVg7QUFFSixXQUFLQyxPQUFMLENBQWFDLElBQWIsQ0FBa0JKLE1BQWxCO0FBQ0g7Ozs2QkFFUTtBQUNMLFVBQUksQ0FBQyxLQUFLRCxJQUFWLEVBQ0ksTUFBTUcsS0FBSyw2QkFBWDtBQUNKLFVBQUksQ0FBQyxLQUFLSixFQUFWLEVBQ0ksTUFBTUksS0FBSyw0QkFBWCxDQUpDLENBTUw7O0FBQ0EsVUFBSUcsYUFBYSxHQUFHLEVBQXBCO0FBUEs7QUFBQTtBQUFBOztBQUFBO0FBUUwsNkJBQWMsS0FBS0YsT0FBbkI7QUFBQSxjQUFTRyxDQUFUO0FBQ0lELFVBQUFBLGFBQWEsQ0FBQ0QsSUFBZCxDQUFtQkUsQ0FBQyxDQUFDQyxNQUFGLEVBQW5CO0FBREo7QUFSSztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBOztBQVdMLGFBQU87QUFDSFIsUUFBQUEsSUFBSSxFQUFFLEtBQUtBLElBRFI7QUFFSEQsUUFBQUEsRUFBRSxFQUFFLEtBQUtBLEVBRk47QUFHSFUsUUFBQUEsWUFBWSxFQUFFLEtBQUtDLFdBSGhCO0FBSUhOLFFBQUFBLE9BQU8sRUFBRUU7QUFKTixPQUFQO0FBTUg7Ozs7OztlQUdVVCxNIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcWmFjaCBTaGFtZXNcXERvY3VtZW50c1xcRGV2ZWxvcG1lbnRcXGpzLTItc3RpeFxcbGliXFxkZWZpbml0aW9ucyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJhc2VPYmplY3QgfSBmcm9tICcuLi9vYmplY3RzL2Jhc2VPYmplY3QnXHJcblxyXG5jbGFzcyBCdW5kbGUge1xyXG5cclxuICAgIHR5cGUgPSAnYnVuZGxlJ1xyXG4gICAgaWQgPSBudWxsXHJcbiAgICBzcGVjVmVyc2lvbiA9IFwiMi4wXCJcclxuICAgIG9iamVjdHMgPSBbXVxyXG5cclxuICAgIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgICAgIC8vIFRPRE86IEdlbmVyYXRlIElEXHJcbiAgICB9XHJcblxyXG4gICAgc2V0SWQodmFsdWUpIHtcclxuICAgICAgICB0aGlzLmlkID0gYCR7dGhpcy50eXBlfS0tJHt2YWx1ZX1gXHJcbiAgICB9XHJcblxyXG4gICAgYWRkT2JqZWN0KG9iamVjdCkge1xyXG4gICAgICAgIGlmICghKG9iamVjdCBpbnN0YW5jZW9mIEJhc2VPYmplY3QpKVxyXG4gICAgICAgICAgICB0aHJvdyBFcnJvcignWW91IGNhbm5vdCBhZGQgYSBub24tb2JqZWN0IHRvIGEgYnVuZGxlIScpXHJcblxyXG4gICAgICAgIHRoaXMub2JqZWN0cy5wdXNoKG9iamVjdClcclxuICAgIH1cclxuXHJcbiAgICB0b0pTT04oKSB7XHJcbiAgICAgICAgaWYgKCF0aGlzLnR5cGUpXHJcbiAgICAgICAgICAgIHRocm93IEVycm9yKGBTVElYIDIuMCByZXF1aXJlcyBhIHR5cGUhYClcclxuICAgICAgICBpZiAoIXRoaXMuaWQpXHJcbiAgICAgICAgICAgIHRocm93IEVycm9yKGBTVElYIDIuMCByZXF1aXJlcyBhbiBJRCFgKVxyXG5cclxuICAgICAgICAvLyBDb21waWxlIG9iamVjdHMgYXMgSlNPTlxyXG4gICAgICAgIGxldCBvdXRwdXRPYmplY3RzID0gW11cclxuICAgICAgICBmb3IgKGxldCBpIG9mIHRoaXMub2JqZWN0cylcclxuICAgICAgICAgICAgb3V0cHV0T2JqZWN0cy5wdXNoKGkudG9KU09OKCkpXHJcblxyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIHR5cGU6IHRoaXMudHlwZSxcclxuICAgICAgICAgICAgaWQ6IHRoaXMuaWQsXHJcbiAgICAgICAgICAgIHNwZWNfdmVyc2lvbjogdGhpcy5zcGVjVmVyc2lvbixcclxuICAgICAgICAgICAgb2JqZWN0czogb3V0cHV0T2JqZWN0c1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgQnVuZGxlIl19",
    "map": {
      "version": 3,
      "sources": [
        "bundle.js"
      ],
      "names": [
        "Bundle",
        "value",
        "id",
        "type",
        "object",
        "BaseObject",
        "Error",
        "objects",
        "push",
        "outputObjects",
        "i",
        "toJSON",
        "spec_version",
        "specVersion"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;;;;IAEMA,M;;;AAOF,oBAAc,CACV;;AADU;;AAAA,kCALP,QAKO;;AAAA,gCAJT,IAIS;;AAAA,yCAHA,KAGA;;AAAA,qCAFJ,EAEI;AAEb;;;;0BAEKC,K,EAAO;AACT,WAAKC,EAAL,aAAa,KAAKC,IAAlB,eAA2BF,KAA3B;AACH;;;8BAESG,M,EAAQ;AACd,UAAI,EAAEA,MAAM,YAAYC,sBAApB,CAAJ,EACI,MAAMC,KAAK,CAAC,0CAAD,CAAX;AAEJ,WAAKC,OAAL,CAAaC,IAAb,CAAkBJ,MAAlB;AACH;;;6BAEQ;AACL,UAAI,CAAC,KAAKD,IAAV,EACI,MAAMG,KAAK,6BAAX;AACJ,UAAI,CAAC,KAAKJ,EAAV,EACI,MAAMI,KAAK,4BAAX,CAJC,CAML;;AACA,UAAIG,aAAa,GAAG,EAApB;AAPK;AAAA;AAAA;;AAAA;AAQL,6BAAc,KAAKF,OAAnB;AAAA,cAASG,CAAT;AACID,UAAAA,aAAa,CAACD,IAAd,CAAmBE,CAAC,CAACC,MAAF,EAAnB;AADJ;AARK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAWL,aAAO;AACHR,QAAAA,IAAI,EAAE,KAAKA,IADR;AAEHD,QAAAA,EAAE,EAAE,KAAKA,EAFN;AAGHU,QAAAA,YAAY,EAAE,KAAKC,WAHhB;AAIHN,QAAAA,OAAO,EAAEE;AAJN,OAAP;AAMH;;;;;;eAGUT,M",
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\definitions",
      "sourcesContent": [
        "import { BaseObject } from '../objects/baseObject'\r\n\r\nclass Bundle {\r\n\r\n    type = 'bundle'\r\n    id = null\r\n    specVersion = \"2.0\"\r\n    objects = []\r\n\r\n    constructor() {\r\n        // TODO: Generate ID\r\n    }\r\n\r\n    setId(value) {\r\n        this.id = `${this.type}--${value}`\r\n    }\r\n\r\n    addObject(object) {\r\n        if (!(object instanceof BaseObject))\r\n            throw Error('You cannot add a non-object to a bundle!')\r\n\r\n        this.objects.push(object)\r\n    }\r\n\r\n    toJSON() {\r\n        if (!this.type)\r\n            throw Error(`STIX 2.0 requires a type!`)\r\n        if (!this.id)\r\n            throw Error(`STIX 2.0 requires an ID!`)\r\n\r\n        // Compile objects as JSON\r\n        let outputObjects = []\r\n        for (let i of this.objects)\r\n            outputObjects.push(i.toJSON())\r\n\r\n        return {\r\n            type: this.type,\r\n            id: this.id,\r\n            spec_version: this.specVersion,\r\n            objects: outputObjects\r\n        }\r\n    }\r\n}\r\n\r\nexport default Bundle"
      ]
    },
    "sourceType": "script",
    "mtime": 1565910043088
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\lib\\\\definitions\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"filename\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\lib\\\\definitions\\\\granularMarking.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\definitions",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\definitions\\granularMarking.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\definitions\\granularMarking.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\definitions\\granularMarking.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\definitions",
        "sourceFileName": "granularMarking.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _marking = require(\"./marking\");\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar GranularMarking =\n/*#__PURE__*/\nfunction () {\n  function GranularMarking() {// Nothing for now\n\n    _classCallCheck(this, GranularMarking);\n\n    _defineProperty(this, \"markingRef\", null);\n\n    _defineProperty(this, \"selectors\", []);\n  }\n\n  _createClass(GranularMarking, [{\n    key: \"setMarkingRef\",\n    value: function setMarkingRef(marking) {\n      if (marking instanceof _marking.Marking) {\n        this.markingRef = marking.id;\n      } else {\n        this.markingRef = marking;\n      }\n    }\n  }, {\n    key: \"addSelector\",\n    value: function addSelector(selector) {\n      if (!(selector instanceof String)) throw Error('A selector must be a string!');\n      this.selectors.push(selector);\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      if (!this.markingRef) throw Error('STIX 2.0 requires a reference to a marking definition!');\n      return {\n        marking_ref: this.markingRef,\n        selectors: this.selectors\n      };\n    }\n  }]);\n\n  return GranularMarking;\n}();\n\nvar _default = GranularMarking;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyYW51bGFyTWFya2luZy5qcyJdLCJuYW1lcyI6WyJHcmFudWxhck1hcmtpbmciLCJtYXJraW5nIiwiTWFya2luZyIsIm1hcmtpbmdSZWYiLCJpZCIsInNlbGVjdG9yIiwiU3RyaW5nIiwiRXJyb3IiLCJzZWxlY3RvcnMiLCJwdXNoIiwibWFya2luZ19yZWYiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7Ozs7Ozs7OztJQUVNQSxlOzs7QUFLRiw2QkFBYyxDQUNWOztBQURVOztBQUFBLHdDQUhELElBR0M7O0FBQUEsdUNBRkYsRUFFRTtBQUViOzs7O2tDQUVhQyxPLEVBQVM7QUFDbkIsVUFBSUEsT0FBTyxZQUFZQyxnQkFBdkIsRUFBZ0M7QUFDNUIsYUFBS0MsVUFBTCxHQUFrQkYsT0FBTyxDQUFDRyxFQUExQjtBQUNILE9BRkQsTUFFTztBQUNILGFBQUtELFVBQUwsR0FBa0JGLE9BQWxCO0FBQ0g7QUFDSjs7O2dDQUVXSSxRLEVBQVU7QUFDbEIsVUFBSSxFQUFFQSxRQUFRLFlBQVlDLE1BQXRCLENBQUosRUFDSSxNQUFNQyxLQUFLLENBQUMsOEJBQUQsQ0FBWDtBQUVKLFdBQUtDLFNBQUwsQ0FBZUMsSUFBZixDQUFvQkosUUFBcEI7QUFDSDs7OzZCQUVRO0FBQ0wsVUFBSSxDQUFDLEtBQUtGLFVBQVYsRUFDSSxNQUFNSSxLQUFLLENBQUMsd0RBQUQsQ0FBWDtBQUVKLGFBQVE7QUFDSkcsUUFBQUEsV0FBVyxFQUFFLEtBQUtQLFVBRGQ7QUFFSkssUUFBQUEsU0FBUyxFQUFFLEtBQUtBO0FBRlosT0FBUjtBQUlIOzs7Ozs7ZUFHVVIsZSIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXFphY2ggU2hhbWVzXFxEb2N1bWVudHNcXERldmVsb3BtZW50XFxqcy0yLXN0aXhcXGxpYlxcZGVmaW5pdGlvbnMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBNYXJraW5nIH0gZnJvbSAnLi9tYXJraW5nJ1xyXG5cclxuY2xhc3MgR3JhbnVsYXJNYXJraW5nIHtcclxuXHJcbiAgICBtYXJraW5nUmVmID0gbnVsbFxyXG4gICAgc2VsZWN0b3JzID0gW11cclxuICAgIFxyXG4gICAgY29uc3RydWN0b3IoKSB7XHJcbiAgICAgICAgLy8gTm90aGluZyBmb3Igbm93XHJcbiAgICB9XHJcblxyXG4gICAgc2V0TWFya2luZ1JlZihtYXJraW5nKSB7XHJcbiAgICAgICAgaWYgKG1hcmtpbmcgaW5zdGFuY2VvZiBNYXJraW5nKSB7XHJcbiAgICAgICAgICAgIHRoaXMubWFya2luZ1JlZiA9IG1hcmtpbmcuaWRcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICB0aGlzLm1hcmtpbmdSZWYgPSBtYXJraW5nXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGFkZFNlbGVjdG9yKHNlbGVjdG9yKSB7XHJcbiAgICAgICAgaWYgKCEoc2VsZWN0b3IgaW5zdGFuY2VvZiBTdHJpbmcpKVxyXG4gICAgICAgICAgICB0aHJvdyBFcnJvcignQSBzZWxlY3RvciBtdXN0IGJlIGEgc3RyaW5nIScpXHJcblxyXG4gICAgICAgIHRoaXMuc2VsZWN0b3JzLnB1c2goc2VsZWN0b3IpXHJcbiAgICB9XHJcblxyXG4gICAgdG9KU09OKCkge1xyXG4gICAgICAgIGlmICghdGhpcy5tYXJraW5nUmVmKVxyXG4gICAgICAgICAgICB0aHJvdyBFcnJvcignU1RJWCAyLjAgcmVxdWlyZXMgYSByZWZlcmVuY2UgdG8gYSBtYXJraW5nIGRlZmluaXRpb24hJylcclxuXHJcbiAgICAgICAgcmV0dXJuICB7XHJcbiAgICAgICAgICAgIG1hcmtpbmdfcmVmOiB0aGlzLm1hcmtpbmdSZWYsXHJcbiAgICAgICAgICAgIHNlbGVjdG9yczogdGhpcy5zZWxlY3RvcnNcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IEdyYW51bGFyTWFya2luZyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "granularMarking.js"
      ],
      "names": [
        "GranularMarking",
        "marking",
        "Marking",
        "markingRef",
        "id",
        "selector",
        "String",
        "Error",
        "selectors",
        "push",
        "marking_ref"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;;;;IAEMA,e;;;AAKF,6BAAc,CACV;;AADU;;AAAA,wCAHD,IAGC;;AAAA,uCAFF,EAEE;AAEb;;;;kCAEaC,O,EAAS;AACnB,UAAIA,OAAO,YAAYC,gBAAvB,EAAgC;AAC5B,aAAKC,UAAL,GAAkBF,OAAO,CAACG,EAA1B;AACH,OAFD,MAEO;AACH,aAAKD,UAAL,GAAkBF,OAAlB;AACH;AACJ;;;gCAEWI,Q,EAAU;AAClB,UAAI,EAAEA,QAAQ,YAAYC,MAAtB,CAAJ,EACI,MAAMC,KAAK,CAAC,8BAAD,CAAX;AAEJ,WAAKC,SAAL,CAAeC,IAAf,CAAoBJ,QAApB;AACH;;;6BAEQ;AACL,UAAI,CAAC,KAAKF,UAAV,EACI,MAAMI,KAAK,CAAC,wDAAD,CAAX;AAEJ,aAAQ;AACJG,QAAAA,WAAW,EAAE,KAAKP,UADd;AAEJK,QAAAA,SAAS,EAAE,KAAKA;AAFZ,OAAR;AAIH;;;;;;eAGUR,e",
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\definitions",
      "sourcesContent": [
        "import { Marking } from './marking'\r\n\r\nclass GranularMarking {\r\n\r\n    markingRef = null\r\n    selectors = []\r\n    \r\n    constructor() {\r\n        // Nothing for now\r\n    }\r\n\r\n    setMarkingRef(marking) {\r\n        if (marking instanceof Marking) {\r\n            this.markingRef = marking.id\r\n        } else {\r\n            this.markingRef = marking\r\n        }\r\n    }\r\n\r\n    addSelector(selector) {\r\n        if (!(selector instanceof String))\r\n            throw Error('A selector must be a string!')\r\n\r\n        this.selectors.push(selector)\r\n    }\r\n\r\n    toJSON() {\r\n        if (!this.markingRef)\r\n            throw Error('STIX 2.0 requires a reference to a marking definition!')\r\n\r\n        return  {\r\n            marking_ref: this.markingRef,\r\n            selectors: this.selectors\r\n        }\r\n    }\r\n}\r\n\r\nexport default GranularMarking"
      ]
    },
    "sourceType": "script",
    "mtime": 1565910037148
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\lib\\\\definitions\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"filename\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\lib\\\\definitions\\\\marking.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\definitions",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\definitions\\marking.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\definitions\\marking.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\definitions\\marking.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\definitions",
        "sourceFileName": "marking.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _vocabulary = require(\"./vocabulary\");\n\nvar _granularMarking = require(\"./granularMarking\");\n\nvar _identity = require(\"../objects/identity\");\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar Marking =\n/*#__PURE__*/\nfunction () {\n  function Marking(defType) {\n    _classCallCheck(this, Marking);\n\n    _defineProperty(this, \"type\", 'marking-definition');\n\n    _defineProperty(this, \"id\", null);\n\n    _defineProperty(this, \"createdByRef\", null);\n\n    _defineProperty(this, \"created\", null);\n\n    _defineProperty(this, \"externalReferences\", []);\n\n    _defineProperty(this, \"objectMarkingRefs\", []);\n\n    _defineProperty(this, \"granularMarkings\", []);\n\n    _defineProperty(this, \"definitionType\", null);\n\n    _defineProperty(this, \"definition\", {});\n\n    // TODO: Generate ID\n    this.definitionType = defType;\n  }\n\n  _createClass(Marking, [{\n    key: \"setId\",\n    value: function setId(value) {\n      this.id = \"\".concat(this.type, \"--\").concat(value);\n    }\n  }, {\n    key: \"setCreatedByRef\",\n    value: function setCreatedByRef(value) {\n      if (value instanceof _identity.Identity) {\n        this.createdByRef = value.id;\n      } else {\n        this.createdByRef = value;\n      }\n    }\n  }, {\n    key: \"setDefinitionType\",\n    value: function setDefinitionType(defType) {\n      if (Object.values(_vocabulary.DefinitionTypes).indexOf(defType.toLowerCase()) === -1) throw Error(\"Invalid definition type! Must be one of the following: \".concat(Array(Object.values(_vocabulary.DefinitionTypes)).join(', ')));\n      this.definitionType = defType.toLowerCase();\n    }\n  }, {\n    key: \"addObjectMarkingRef\",\n    value: function addObjectMarkingRef(marking) {\n      if (marking instanceof Marking) {\n        this.objectMarkingRefs.push(marking.id);\n      } else {\n        this.objectMarkingRefs.push(marking);\n      }\n    }\n  }, {\n    key: \"setTLP\",\n    value: function setTLP(tlp) {\n      if (this.definitionType !== _vocabulary.DefinitionTypes.TLP) throw Error('The definition Must be \"TLP\" in order to set the TLP');\n      if (Object.values(_vocabulary.TLPs).indexOf(tlp.toLowerCase()) === -1) throw Error(\"Invalid TLP! Must be one of the following: \".concat(Array(Object.values(_vocabulary.TLPs)).join(', ')));\n      this.definition = {\n        tlp: tlp\n      };\n    }\n  }, {\n    key: \"setStatement\",\n    value: function setStatement(statement) {\n      if (this.definitionType !== _vocabulary.DefinitionTypes.STATEMENT) throw Error('The definition Must be \"statement\" in order to set the statement');\n      this.definition = {\n        statement: statement\n      };\n    }\n  }, {\n    key: \"addGranularMarking\",\n    value: function addGranularMarking(marking) {\n      if (!(marking instanceof _granularMarking.GranularMarking)) throw Error('You must add an object of the GranularMarking type!');\n      this.granularMarkings.push(marking);\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      if (!this.type) throw Error(\"STIX 2.0 requires a marking type!\");\n      if (!this.id) throw Error(\"STIX 2.0 requires a marking ID!\");\n      if (!this.created) throw Error(\"STIX 2.0 requires a creation timestimp!\");\n      if (!this.definitionType) throw Error(\"STIX 2.0 requires a definition type!\");\n      if (!this.definition) throw Error(\"STIX 2.0 requires a marking definition!\");\n      var output = {\n        type: this.type,\n        id: this.id,\n        created: this.created,\n        definitionType: this.definitionType,\n        definition: this.definition // Compile granular markings as JSON\n\n      };\n      var granularMarkings = [];\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.granularMarkings[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var i = _step.value;\n          granularMarkings.push(i.toJSON());\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n            _iterator[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      if (this.createdByRef) output.createdByRef = this.createdByRef;\n      if (this.externalReferences) output.externalReferences = this.externalReferences;\n      if (this.granularMarkings) output.granularMarkings = granularMarkings;\n      return output;\n    }\n  }]);\n\n  return Marking;\n}();\n\nvar _default = Marking;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "marking.js"
      ],
      "names": [
        "Marking",
        "defType",
        "definitionType",
        "value",
        "id",
        "type",
        "Identity",
        "createdByRef",
        "Object",
        "values",
        "DefinitionTypes",
        "indexOf",
        "toLowerCase",
        "Error",
        "Array",
        "join",
        "marking",
        "objectMarkingRefs",
        "push",
        "tlp",
        "TLP",
        "TLPs",
        "definition",
        "statement",
        "STATEMENT",
        "GranularMarking",
        "granularMarkings",
        "created",
        "output",
        "i",
        "toJSON",
        "externalReferences"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;;;;;;;;;IAEMA,O;;;AAYF,mBAAYC,OAAZ,EAAqB;AAAA;;AAAA,kCAVd,oBAUc;;AAAA,gCAThB,IASgB;;AAAA,0CARN,IAQM;;AAAA,qCAPX,IAOW;;AAAA,gDANA,EAMA;;AAAA,+CALD,EAKC;;AAAA,8CAJF,EAIE;;AAAA,4CAHJ,IAGI;;AAAA,wCAFR,EAEQ;;AACjB;AACA,SAAKC,cAAL,GAAsBD,OAAtB;AACH;;;;0BAEKE,K,EAAO;AACT,WAAKC,EAAL,aAAa,KAAKC,IAAlB,eAA2BF,KAA3B;AACH;;;oCAEeA,K,EAAO;AACnB,UAAIA,KAAK,YAAYG,kBAArB,EAA+B;AAC3B,aAAKC,YAAL,GAAoBJ,KAAK,CAACC,EAA1B;AACH,OAFD,MAEO;AACH,aAAKG,YAAL,GAAoBJ,KAApB;AACH;AACJ;;;sCAEiBF,O,EAAS;AACvB,UAAIO,MAAM,CAACC,MAAP,CAAcC,2BAAd,EAA+BC,OAA/B,CAAuCV,OAAO,CAACW,WAAR,EAAvC,MAAkE,CAAC,CAAvE,EACI,MAAMC,KAAK,kEAA2DC,KAAK,CAACN,MAAM,CAACC,MAAP,CAAcC,2BAAd,CAAD,CAAL,CAAsCK,IAAtC,CAA2C,IAA3C,CAA3D,EAAX;AAEJ,WAAKb,cAAL,GAAsBD,OAAO,CAACW,WAAR,EAAtB;AACH;;;wCAEmBI,O,EAAS;AACzB,UAAIA,OAAO,YAAYhB,OAAvB,EAAgC;AAC5B,aAAKiB,iBAAL,CAAuBC,IAAvB,CAA4BF,OAAO,CAACZ,EAApC;AACH,OAFD,MAEO;AACH,aAAKa,iBAAL,CAAuBC,IAAvB,CAA4BF,OAA5B;AACH;AACJ;;;2BAEMG,G,EAAK;AACR,UAAI,KAAKjB,cAAL,KAAwBQ,4BAAgBU,GAA5C,EACI,MAAMP,KAAK,CAAC,sDAAD,CAAX;AACJ,UAAIL,MAAM,CAACC,MAAP,CAAcY,gBAAd,EAAoBV,OAApB,CAA4BQ,GAAG,CAACP,WAAJ,EAA5B,MAAmD,CAAC,CAAxD,EACI,MAAMC,KAAK,sDAA+CC,KAAK,CAACN,MAAM,CAACC,MAAP,CAAcY,gBAAd,CAAD,CAAL,CAA2BN,IAA3B,CAAgC,IAAhC,CAA/C,EAAX;AAEJ,WAAKO,UAAL,GAAkB;AACdH,QAAAA,GAAG,EAAEA;AADS,OAAlB;AAGH;;;iCAEYI,S,EAAW;AACpB,UAAI,KAAKrB,cAAL,KAAwBQ,4BAAgBc,SAA5C,EACI,MAAMX,KAAK,CAAC,kEAAD,CAAX;AAEJ,WAAKS,UAAL,GAAkB;AACdC,QAAAA,SAAS,EAAEA;AADG,OAAlB;AAGH;;;uCAEkBP,O,EAAS;AACxB,UAAI,EAAEA,OAAO,YAAYS,gCAArB,CAAJ,EACI,MAAMZ,KAAK,CAAC,qDAAD,CAAX;AAEJ,WAAKa,gBAAL,CAAsBR,IAAtB,CAA2BF,OAA3B;AACH;;;6BAEQ;AACL,UAAI,CAAC,KAAKX,IAAV,EACI,MAAMQ,KAAK,qCAAX;AACJ,UAAI,CAAC,KAAKT,EAAV,EACI,MAAMS,KAAK,mCAAX;AACJ,UAAI,CAAC,KAAKc,OAAV,EACI,MAAMd,KAAK,2CAAX;AACJ,UAAI,CAAC,KAAKX,cAAV,EACI,MAAMW,KAAK,wCAAX;AACJ,UAAI,CAAC,KAAKS,UAAV,EACI,MAAMT,KAAK,2CAAX;AAEJ,UAAIe,MAAM,GAAG;AACTvB,QAAAA,IAAI,EAAE,KAAKA,IADF;AAETD,QAAAA,EAAE,EAAE,KAAKA,EAFA;AAGTuB,QAAAA,OAAO,EAAE,KAAKA,OAHL;AAITzB,QAAAA,cAAc,EAAE,KAAKA,cAJZ;AAKToB,QAAAA,UAAU,EAAE,KAAKA,UALR,CAQb;;AARa,OAAb;AASA,UAAII,gBAAgB,GAAG,EAAvB;AArBK;AAAA;AAAA;;AAAA;AAsBL,6BAAc,KAAKA,gBAAnB;AAAA,cAASG,CAAT;AACIH,UAAAA,gBAAgB,CAACR,IAAjB,CAAsBW,CAAC,CAACC,MAAF,EAAtB;AADJ;AAtBK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAyBL,UAAI,KAAKvB,YAAT,EACIqB,MAAM,CAACrB,YAAP,GAAsB,KAAKA,YAA3B;AACJ,UAAI,KAAKwB,kBAAT,EACIH,MAAM,CAACG,kBAAP,GAA4B,KAAKA,kBAAjC;AACJ,UAAI,KAAKL,gBAAT,EACIE,MAAM,CAACF,gBAAP,GAA0BA,gBAA1B;AAEJ,aAAOE,MAAP;AACH;;;;;;eAGU5B,O",
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\definitions",
      "sourcesContent": [
        "import { DefinitionTypes, TLPs } from './vocabulary'\r\nimport { GranularMarking } from './granularMarking'\r\nimport { Identity } from '../objects/identity'\r\n\r\nclass Marking {\r\n\r\n    type = 'marking-definition'\r\n    id = null\r\n    createdByRef = null\r\n    created = null\r\n    externalReferences = []\r\n    objectMarkingRefs = []\r\n    granularMarkings = []\r\n    definitionType = null\r\n    definition = {}\r\n\r\n    constructor(defType) {\r\n        // TODO: Generate ID\r\n        this.definitionType = defType\r\n    }\r\n\r\n    setId(value) {\r\n        this.id = `${this.type}--${value}`\r\n    }\r\n\r\n    setCreatedByRef(value) {\r\n        if (value instanceof Identity) {\r\n            this.createdByRef = value.id\r\n        } else {\r\n            this.createdByRef = value\r\n        }\r\n    }\r\n\r\n    setDefinitionType(defType) {\r\n        if (Object.values(DefinitionTypes).indexOf(defType.toLowerCase()) === -1)\r\n            throw Error(`Invalid definition type! Must be one of the following: ${Array(Object.values(DefinitionTypes)).join(', ')}`)\r\n\r\n        this.definitionType = defType.toLowerCase()\r\n    }\r\n\r\n    addObjectMarkingRef(marking) {\r\n        if (marking instanceof Marking) {\r\n            this.objectMarkingRefs.push(marking.id)\r\n        } else {\r\n            this.objectMarkingRefs.push(marking)\r\n        }\r\n    }\r\n\r\n    setTLP(tlp) {\r\n        if (this.definitionType !== DefinitionTypes.TLP)\r\n            throw Error('The definition Must be \"TLP\" in order to set the TLP')\r\n        if (Object.values(TLPs).indexOf(tlp.toLowerCase()) === -1)\r\n            throw Error(`Invalid TLP! Must be one of the following: ${Array(Object.values(TLPs)).join(', ')}`)\r\n\r\n        this.definition = {\r\n            tlp: tlp\r\n        }\r\n    }\r\n\r\n    setStatement(statement) {\r\n        if (this.definitionType !== DefinitionTypes.STATEMENT)\r\n            throw Error('The definition Must be \"statement\" in order to set the statement')\r\n\r\n        this.definition = {\r\n            statement: statement\r\n        }\r\n    }\r\n\r\n    addGranularMarking(marking) {\r\n        if (!(marking instanceof GranularMarking))\r\n            throw Error('You must add an object of the GranularMarking type!')\r\n        \r\n        this.granularMarkings.push(marking)\r\n    }\r\n\r\n    toJSON() {\r\n        if (!this.type)\r\n            throw Error(`STIX 2.0 requires a marking type!`)\r\n        if (!this.id)\r\n            throw Error(`STIX 2.0 requires a marking ID!`)\r\n        if (!this.created)\r\n            throw Error(`STIX 2.0 requires a creation timestimp!`)\r\n        if (!this.definitionType)\r\n            throw Error(`STIX 2.0 requires a definition type!`)\r\n        if (!this.definition)\r\n            throw Error(`STIX 2.0 requires a marking definition!`)\r\n\r\n        let output = {\r\n            type: this.type,\r\n            id: this.id,\r\n            created: this.created,\r\n            definitionType: this.definitionType,\r\n            definition: this.definition\r\n        }\r\n\r\n        // Compile granular markings as JSON\r\n        let granularMarkings = []\r\n        for (let i of this.granularMarkings)\r\n            granularMarkings.push(i.toJSON())\r\n\r\n        if (this.createdByRef)\r\n            output.createdByRef = this.createdByRef\r\n        if (this.externalReferences)\r\n            output.externalReferences = this.externalReferences\r\n        if (this.granularMarkings)\r\n            output.granularMarkings = granularMarkings\r\n\r\n        return output\r\n    }\r\n}\r\n\r\nexport default Marking"
      ]
    },
    "sourceType": "script",
    "mtime": 1565910027991
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\lib\\\\objects\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"filename\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\lib\\\\objects\\\\identity.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects\\identity.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects\\identity.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects\\identity.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects",
        "sourceFileName": "identity.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _baseObject = require(\"./baseObject\");\n\nvar _vocabulary = require(\"../definitions/vocabulary\");\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar Identity =\n/*#__PURE__*/\nfunction (_BaseObject) {\n  _inherits(Identity, _BaseObject);\n\n  function Identity(name) {\n    var _this;\n\n    _classCallCheck(this, Identity);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Identity).call(this, 'identity'));\n\n    _defineProperty(_assertThisInitialized(_this), \"name\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"description\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"identityClass\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"sectors\", []);\n\n    _defineProperty(_assertThisInitialized(_this), \"contactInformation\", null);\n\n    _this.name = name;\n    return _this;\n  }\n\n  _createClass(Identity, [{\n    key: \"setIdentityClass\",\n    value: function setIdentityClass(identity) {\n      if (Object.values(_vocabulary.IdentityClasses).indexOf(identity.toLowerCase()) === -1) throw Error(\"Invalid identity class! Must be one of the following: \".concat(Array(Object.values(_vocabulary.IdentityClasses)).join(', ')));\n      this.identityClass = identity.toLowerCase();\n    }\n  }, {\n    key: \"addSector\",\n    value: function addSector(sector) {\n      if (Object.values(_vocabulary.IndustrySectors).indexOf(sector.toLowerCase()) === -1) throw Error(\"Invalid identity class! Must be one of the following: \".concat(Array(Object.values(_vocabulary.IndustrySectors)).join(', ')));\n      if (this.sectors.indexOf(sector.toLowerCase()) === -1) this.sectors.push(sector.toLowerCase());\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      if (!this.name) throw Error(\"STIX 2.0 requires an identity name!\");\n      if (!this.identityClass) throw Error(\"STIX 2.0 requires an identity class!\");\n\n      var output = _get(_getPrototypeOf(Identity.prototype), \"toJSON\", this).call(this);\n\n      output.name = this.name;\n      output.identityClass = this.identityClass;\n      if (this.description) output.description = this.description;\n      if (this.sectors && this.sectors.length > 0) output.sectors = this.sectors;\n      if (this.contactInformation) output.contact_information = this.contactInformation;\n      return output;\n    }\n  }]);\n\n  return Identity;\n}(_baseObject.BaseObject);\n\nvar _default = Identity;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImlkZW50aXR5LmpzIl0sIm5hbWVzIjpbIklkZW50aXR5IiwibmFtZSIsImlkZW50aXR5IiwiT2JqZWN0IiwidmFsdWVzIiwiSWRlbnRpdHlDbGFzc2VzIiwiaW5kZXhPZiIsInRvTG93ZXJDYXNlIiwiRXJyb3IiLCJBcnJheSIsImpvaW4iLCJpZGVudGl0eUNsYXNzIiwic2VjdG9yIiwiSW5kdXN0cnlTZWN0b3JzIiwic2VjdG9ycyIsInB1c2giLCJvdXRwdXQiLCJkZXNjcmlwdGlvbiIsImxlbmd0aCIsImNvbnRhY3RJbmZvcm1hdGlvbiIsImNvbnRhY3RfaW5mb3JtYXRpb24iLCJCYXNlT2JqZWN0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBRU1BLFE7Ozs7O0FBU0Ysb0JBQVlDLElBQVosRUFBa0I7QUFBQTs7QUFBQTs7QUFDZCxrRkFBTSxVQUFOOztBQURjLDJEQVBYLElBT1c7O0FBQUEsa0VBTkosSUFNSTs7QUFBQSxvRUFMRixJQUtFOztBQUFBLDhEQUpSLEVBSVE7O0FBQUEseUVBSEcsSUFHSDs7QUFHZCxVQUFLQSxJQUFMLEdBQVlBLElBQVo7QUFIYztBQUlqQjs7OztxQ0FFZ0JDLFEsRUFBVTtBQUN2QixVQUFJQyxNQUFNLENBQUNDLE1BQVAsQ0FBY0MsMkJBQWQsRUFBK0JDLE9BQS9CLENBQXVDSixRQUFRLENBQUNLLFdBQVQsRUFBdkMsTUFBbUUsQ0FBQyxDQUF4RSxFQUNJLE1BQU1DLEtBQUssaUVBQTBEQyxLQUFLLENBQUNOLE1BQU0sQ0FBQ0MsTUFBUCxDQUFjQywyQkFBZCxDQUFELENBQUwsQ0FBc0NLLElBQXRDLENBQTJDLElBQTNDLENBQTFELEVBQVg7QUFFSixXQUFLQyxhQUFMLEdBQXFCVCxRQUFRLENBQUNLLFdBQVQsRUFBckI7QUFDSDs7OzhCQUVTSyxNLEVBQVE7QUFDZCxVQUFJVCxNQUFNLENBQUNDLE1BQVAsQ0FBY1MsMkJBQWQsRUFBK0JQLE9BQS9CLENBQXVDTSxNQUFNLENBQUNMLFdBQVAsRUFBdkMsTUFBaUUsQ0FBQyxDQUF0RSxFQUNJLE1BQU1DLEtBQUssaUVBQTBEQyxLQUFLLENBQUNOLE1BQU0sQ0FBQ0MsTUFBUCxDQUFjUywyQkFBZCxDQUFELENBQUwsQ0FBc0NILElBQXRDLENBQTJDLElBQTNDLENBQTFELEVBQVg7QUFFSixVQUFJLEtBQUtJLE9BQUwsQ0FBYVIsT0FBYixDQUFxQk0sTUFBTSxDQUFDTCxXQUFQLEVBQXJCLE1BQStDLENBQUMsQ0FBcEQsRUFDSSxLQUFLTyxPQUFMLENBQWFDLElBQWIsQ0FBa0JILE1BQU0sQ0FBQ0wsV0FBUCxFQUFsQjtBQUNQOzs7NkJBRVE7QUFDTCxVQUFJLENBQUMsS0FBS04sSUFBVixFQUNJLE1BQU1PLEtBQUssdUNBQVg7QUFDSixVQUFJLENBQUMsS0FBS0csYUFBVixFQUNJLE1BQU1ILEtBQUssd0NBQVg7O0FBRUosVUFBSVEsTUFBTSx1RUFBVjs7QUFDQUEsTUFBQUEsTUFBTSxDQUFDZixJQUFQLEdBQWMsS0FBS0EsSUFBbkI7QUFDQWUsTUFBQUEsTUFBTSxDQUFDTCxhQUFQLEdBQXVCLEtBQUtBLGFBQTVCO0FBRUEsVUFBSSxLQUFLTSxXQUFULEVBQ0lELE1BQU0sQ0FBQ0MsV0FBUCxHQUFxQixLQUFLQSxXQUExQjtBQUNKLFVBQUksS0FBS0gsT0FBTCxJQUFnQixLQUFLQSxPQUFMLENBQWFJLE1BQWIsR0FBc0IsQ0FBMUMsRUFDSUYsTUFBTSxDQUFDRixPQUFQLEdBQWlCLEtBQUtBLE9BQXRCO0FBQ0osVUFBSSxLQUFLSyxrQkFBVCxFQUNJSCxNQUFNLENBQUNJLG1CQUFQLEdBQTZCLEtBQUtELGtCQUFsQztBQUVKLGFBQU9ILE1BQVA7QUFDSDs7OztFQWhEa0JLLHNCOztlQW1EUnJCLFEiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxaYWNoIFNoYW1lc1xcRG9jdW1lbnRzXFxEZXZlbG9wbWVudFxcanMtMi1zdGl4XFxsaWJcXG9iamVjdHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCYXNlT2JqZWN0IH0gZnJvbSBcIi4vYmFzZU9iamVjdFwiXHJcbmltcG9ydCB7IElkZW50aXR5Q2xhc3NlcywgSW5kdXN0cnlTZWN0b3JzIH0gZnJvbSAnLi4vZGVmaW5pdGlvbnMvdm9jYWJ1bGFyeSdcclxuXHJcbmNsYXNzIElkZW50aXR5IGV4dGVuZHMgQmFzZU9iamVjdCB7XHJcblxyXG4gICAgbmFtZSA9IG51bGxcclxuICAgIGRlc2NyaXB0aW9uID0gbnVsbFxyXG4gICAgaWRlbnRpdHlDbGFzcyA9IG51bGxcclxuICAgIHNlY3RvcnMgPSBbXVxyXG4gICAgY29udGFjdEluZm9ybWF0aW9uID0gbnVsbFxyXG5cclxuXHJcbiAgICBjb25zdHJ1Y3RvcihuYW1lKSB7XHJcbiAgICAgICAgc3VwZXIoJ2lkZW50aXR5JylcclxuXHJcbiAgICAgICAgdGhpcy5uYW1lID0gbmFtZVxyXG4gICAgfVxyXG5cclxuICAgIHNldElkZW50aXR5Q2xhc3MoaWRlbnRpdHkpIHtcclxuICAgICAgICBpZiAoT2JqZWN0LnZhbHVlcyhJZGVudGl0eUNsYXNzZXMpLmluZGV4T2YoaWRlbnRpdHkudG9Mb3dlckNhc2UoKSkgPT09IC0xKVxyXG4gICAgICAgICAgICB0aHJvdyBFcnJvcihgSW52YWxpZCBpZGVudGl0eSBjbGFzcyEgTXVzdCBiZSBvbmUgb2YgdGhlIGZvbGxvd2luZzogJHtBcnJheShPYmplY3QudmFsdWVzKElkZW50aXR5Q2xhc3NlcykpLmpvaW4oJywgJyl9YClcclxuXHJcbiAgICAgICAgdGhpcy5pZGVudGl0eUNsYXNzID0gaWRlbnRpdHkudG9Mb3dlckNhc2UoKVxyXG4gICAgfVxyXG5cclxuICAgIGFkZFNlY3RvcihzZWN0b3IpIHtcclxuICAgICAgICBpZiAoT2JqZWN0LnZhbHVlcyhJbmR1c3RyeVNlY3RvcnMpLmluZGV4T2Yoc2VjdG9yLnRvTG93ZXJDYXNlKCkpID09PSAtMSlcclxuICAgICAgICAgICAgdGhyb3cgRXJyb3IoYEludmFsaWQgaWRlbnRpdHkgY2xhc3MhIE11c3QgYmUgb25lIG9mIHRoZSBmb2xsb3dpbmc6ICR7QXJyYXkoT2JqZWN0LnZhbHVlcyhJbmR1c3RyeVNlY3RvcnMpKS5qb2luKCcsICcpfWApXHJcblxyXG4gICAgICAgIGlmICh0aGlzLnNlY3RvcnMuaW5kZXhPZihzZWN0b3IudG9Mb3dlckNhc2UoKSkgPT09IC0xKVxyXG4gICAgICAgICAgICB0aGlzLnNlY3RvcnMucHVzaChzZWN0b3IudG9Mb3dlckNhc2UoKSlcclxuICAgIH1cclxuXHJcbiAgICB0b0pTT04oKSB7XHJcbiAgICAgICAgaWYgKCF0aGlzLm5hbWUpXHJcbiAgICAgICAgICAgIHRocm93IEVycm9yKGBTVElYIDIuMCByZXF1aXJlcyBhbiBpZGVudGl0eSBuYW1lIWApXHJcbiAgICAgICAgaWYgKCF0aGlzLmlkZW50aXR5Q2xhc3MpXHJcbiAgICAgICAgICAgIHRocm93IEVycm9yKGBTVElYIDIuMCByZXF1aXJlcyBhbiBpZGVudGl0eSBjbGFzcyFgKVxyXG5cclxuICAgICAgICBsZXQgb3V0cHV0ID0gc3VwZXIudG9KU09OKClcclxuICAgICAgICBvdXRwdXQubmFtZSA9IHRoaXMubmFtZVxyXG4gICAgICAgIG91dHB1dC5pZGVudGl0eUNsYXNzID0gdGhpcy5pZGVudGl0eUNsYXNzXHJcblxyXG4gICAgICAgIGlmICh0aGlzLmRlc2NyaXB0aW9uKVxyXG4gICAgICAgICAgICBvdXRwdXQuZGVzY3JpcHRpb24gPSB0aGlzLmRlc2NyaXB0aW9uXHJcbiAgICAgICAgaWYgKHRoaXMuc2VjdG9ycyAmJiB0aGlzLnNlY3RvcnMubGVuZ3RoID4gMClcclxuICAgICAgICAgICAgb3V0cHV0LnNlY3RvcnMgPSB0aGlzLnNlY3RvcnNcclxuICAgICAgICBpZiAodGhpcy5jb250YWN0SW5mb3JtYXRpb24pXHJcbiAgICAgICAgICAgIG91dHB1dC5jb250YWN0X2luZm9ybWF0aW9uID0gdGhpcy5jb250YWN0SW5mb3JtYXRpb25cclxuXHJcbiAgICAgICAgcmV0dXJuIG91dHB1dFxyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBJZGVudGl0eSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "identity.js"
      ],
      "names": [
        "Identity",
        "name",
        "identity",
        "Object",
        "values",
        "IdentityClasses",
        "indexOf",
        "toLowerCase",
        "Error",
        "Array",
        "join",
        "identityClass",
        "sector",
        "IndustrySectors",
        "sectors",
        "push",
        "output",
        "description",
        "length",
        "contactInformation",
        "contact_information",
        "BaseObject"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;IAEMA,Q;;;;;AASF,oBAAYC,IAAZ,EAAkB;AAAA;;AAAA;;AACd,kFAAM,UAAN;;AADc,2DAPX,IAOW;;AAAA,kEANJ,IAMI;;AAAA,oEALF,IAKE;;AAAA,8DAJR,EAIQ;;AAAA,yEAHG,IAGH;;AAGd,UAAKA,IAAL,GAAYA,IAAZ;AAHc;AAIjB;;;;qCAEgBC,Q,EAAU;AACvB,UAAIC,MAAM,CAACC,MAAP,CAAcC,2BAAd,EAA+BC,OAA/B,CAAuCJ,QAAQ,CAACK,WAAT,EAAvC,MAAmE,CAAC,CAAxE,EACI,MAAMC,KAAK,iEAA0DC,KAAK,CAACN,MAAM,CAACC,MAAP,CAAcC,2BAAd,CAAD,CAAL,CAAsCK,IAAtC,CAA2C,IAA3C,CAA1D,EAAX;AAEJ,WAAKC,aAAL,GAAqBT,QAAQ,CAACK,WAAT,EAArB;AACH;;;8BAESK,M,EAAQ;AACd,UAAIT,MAAM,CAACC,MAAP,CAAcS,2BAAd,EAA+BP,OAA/B,CAAuCM,MAAM,CAACL,WAAP,EAAvC,MAAiE,CAAC,CAAtE,EACI,MAAMC,KAAK,iEAA0DC,KAAK,CAACN,MAAM,CAACC,MAAP,CAAcS,2BAAd,CAAD,CAAL,CAAsCH,IAAtC,CAA2C,IAA3C,CAA1D,EAAX;AAEJ,UAAI,KAAKI,OAAL,CAAaR,OAAb,CAAqBM,MAAM,CAACL,WAAP,EAArB,MAA+C,CAAC,CAApD,EACI,KAAKO,OAAL,CAAaC,IAAb,CAAkBH,MAAM,CAACL,WAAP,EAAlB;AACP;;;6BAEQ;AACL,UAAI,CAAC,KAAKN,IAAV,EACI,MAAMO,KAAK,uCAAX;AACJ,UAAI,CAAC,KAAKG,aAAV,EACI,MAAMH,KAAK,wCAAX;;AAEJ,UAAIQ,MAAM,uEAAV;;AACAA,MAAAA,MAAM,CAACf,IAAP,GAAc,KAAKA,IAAnB;AACAe,MAAAA,MAAM,CAACL,aAAP,GAAuB,KAAKA,aAA5B;AAEA,UAAI,KAAKM,WAAT,EACID,MAAM,CAACC,WAAP,GAAqB,KAAKA,WAA1B;AACJ,UAAI,KAAKH,OAAL,IAAgB,KAAKA,OAAL,CAAaI,MAAb,GAAsB,CAA1C,EACIF,MAAM,CAACF,OAAP,GAAiB,KAAKA,OAAtB;AACJ,UAAI,KAAKK,kBAAT,EACIH,MAAM,CAACI,mBAAP,GAA6B,KAAKD,kBAAlC;AAEJ,aAAOH,MAAP;AACH;;;;EAhDkBK,sB;;eAmDRrB,Q",
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects",
      "sourcesContent": [
        "import { BaseObject } from \"./baseObject\"\r\nimport { IdentityClasses, IndustrySectors } from '../definitions/vocabulary'\r\n\r\nclass Identity extends BaseObject {\r\n\r\n    name = null\r\n    description = null\r\n    identityClass = null\r\n    sectors = []\r\n    contactInformation = null\r\n\r\n\r\n    constructor(name) {\r\n        super('identity')\r\n\r\n        this.name = name\r\n    }\r\n\r\n    setIdentityClass(identity) {\r\n        if (Object.values(IdentityClasses).indexOf(identity.toLowerCase()) === -1)\r\n            throw Error(`Invalid identity class! Must be one of the following: ${Array(Object.values(IdentityClasses)).join(', ')}`)\r\n\r\n        this.identityClass = identity.toLowerCase()\r\n    }\r\n\r\n    addSector(sector) {\r\n        if (Object.values(IndustrySectors).indexOf(sector.toLowerCase()) === -1)\r\n            throw Error(`Invalid identity class! Must be one of the following: ${Array(Object.values(IndustrySectors)).join(', ')}`)\r\n\r\n        if (this.sectors.indexOf(sector.toLowerCase()) === -1)\r\n            this.sectors.push(sector.toLowerCase())\r\n    }\r\n\r\n    toJSON() {\r\n        if (!this.name)\r\n            throw Error(`STIX 2.0 requires an identity name!`)\r\n        if (!this.identityClass)\r\n            throw Error(`STIX 2.0 requires an identity class!`)\r\n\r\n        let output = super.toJSON()\r\n        output.name = this.name\r\n        output.identityClass = this.identityClass\r\n\r\n        if (this.description)\r\n            output.description = this.description\r\n        if (this.sectors && this.sectors.length > 0)\r\n            output.sectors = this.sectors\r\n        if (this.contactInformation)\r\n            output.contact_information = this.contactInformation\r\n\r\n        return output\r\n    }\r\n}\r\n\r\nexport default Identity"
      ]
    },
    "sourceType": "script",
    "mtime": 1565912508194
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\lib\\\\objects\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"filename\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\lib\\\\objects\\\\baseObject.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects\\baseObject.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects\\baseObject.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects\\baseObject.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects",
        "sourceFileName": "baseObject.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BaseObject = void 0;\n\nvar _externalReference = require(\"./externalReference\");\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar BaseObject =\n/*#__PURE__*/\nfunction () {\n  function BaseObject(type) {\n    _classCallCheck(this, BaseObject);\n\n    _defineProperty(this, \"type\", null);\n\n    _defineProperty(this, \"id\", null);\n\n    _defineProperty(this, \"createdByRef\", null);\n\n    _defineProperty(this, \"created\", null);\n\n    _defineProperty(this, \"modified\", null);\n\n    _defineProperty(this, \"revoked\", null);\n\n    _defineProperty(this, \"labels\", []);\n\n    _defineProperty(this, \"externalReferences\", []);\n\n    _defineProperty(this, \"objectMarkingRefs\", []);\n\n    _defineProperty(this, \"granularMarkings\", []);\n\n    this.type = type;\n  }\n\n  _createClass(BaseObject, [{\n    key: \"setId\",\n    value: function setId(value) {\n      this.id = \"\".concat(this.type, \"--\").concat(value);\n    }\n  }, {\n    key: \"setCreatedByRef\",\n    value: function setCreatedByRef(value) {\n      if (value instanceof Identity) {\n        this.createdByRef = value.id;\n      } else {\n        this.createdByRef = value;\n      }\n    }\n  }, {\n    key: \"addExternalReference\",\n    value: function addExternalReference(ref) {\n      if (!(ref instanceof _externalReference.ExternalReference)) throw Error('You can only add an external reference of the ExternalReference type!');\n      this.externalReferences.push(ref);\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      if (!this.type) throw Error(\"STIX 2.0 requires an object type!\");\n      if (!this.id) throw Error(\"STIX 2.0 requires an object ID!\");\n      if (!this.created) throw Error(\"STIX 2.0 requires a created timestamp!\");\n      if (!this.modified) throw Error(\"STIX 2.0 requires a modified timestamp!\");\n      var output = {\n        type: this.type,\n        id: this.id,\n        created: this.created,\n        modified: this.modified\n      };\n      if (this.createdByRef) output.created_by_ref = this.createdByRef;\n      if (this.revoked) output.revoked = this.revoked;\n      if (this.labels && this.labels.length > 0) output.labels = this.labels;\n      if (this.objectMarkingRefs && this.objectMarkingRefs.length > 0) output.object_marking_refs = this.objectMarkingRefs;\n\n      if (this.granularMarkings && this.granularMarkings.length > 0) {\n        var granularMarkings = [];\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = this.granularMarkings[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var i = _step.value;\n            granularMarkings.push(i.toJSON());\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n              _iterator[\"return\"]();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n\n        output.granular_markings = granularMarkings;\n      }\n\n      if (this.externalReferences && this.externalReferences.length > 0) {\n        var externalRefs = [];\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = this.externalReferences[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var _i = _step2.value;\n            externalRefs.push(_i.toJSON());\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n              _iterator2[\"return\"]();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n\n        output.external_references = externalRefs;\n      }\n\n      return output;\n    }\n  }]);\n\n  return BaseObject;\n}();\n\nexports.BaseObject = BaseObject;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJhc2VPYmplY3QuanMiXSwibmFtZXMiOlsiQmFzZU9iamVjdCIsInR5cGUiLCJ2YWx1ZSIsImlkIiwiSWRlbnRpdHkiLCJjcmVhdGVkQnlSZWYiLCJyZWYiLCJFeHRlcm5hbFJlZmVyZW5jZSIsIkVycm9yIiwiZXh0ZXJuYWxSZWZlcmVuY2VzIiwicHVzaCIsImNyZWF0ZWQiLCJtb2RpZmllZCIsIm91dHB1dCIsImNyZWF0ZWRfYnlfcmVmIiwicmV2b2tlZCIsImxhYmVscyIsImxlbmd0aCIsIm9iamVjdE1hcmtpbmdSZWZzIiwib2JqZWN0X21hcmtpbmdfcmVmcyIsImdyYW51bGFyTWFya2luZ3MiLCJpIiwidG9KU09OIiwiZ3JhbnVsYXJfbWFya2luZ3MiLCJleHRlcm5hbFJlZnMiLCJleHRlcm5hbF9yZWZlcmVuY2VzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQ0E7Ozs7Ozs7Ozs7SUFFYUEsVTs7O0FBYVQsc0JBQVlDLElBQVosRUFBa0I7QUFBQTs7QUFBQSxrQ0FYWCxJQVdXOztBQUFBLGdDQVZiLElBVWE7O0FBQUEsMENBVEgsSUFTRzs7QUFBQSxxQ0FSUixJQVFROztBQUFBLHNDQVBQLElBT087O0FBQUEscUNBTlIsSUFNUTs7QUFBQSxvQ0FMVCxFQUtTOztBQUFBLGdEQUpHLEVBSUg7O0FBQUEsK0NBSEUsRUFHRjs7QUFBQSw4Q0FGQyxFQUVEOztBQUNkLFNBQUtBLElBQUwsR0FBWUEsSUFBWjtBQUNIOzs7OzBCQUVLQyxLLEVBQU87QUFDVCxXQUFLQyxFQUFMLGFBQWEsS0FBS0YsSUFBbEIsZUFBMkJDLEtBQTNCO0FBQ0g7OztvQ0FFZUEsSyxFQUFPO0FBQ25CLFVBQUlBLEtBQUssWUFBWUUsUUFBckIsRUFBK0I7QUFDM0IsYUFBS0MsWUFBTCxHQUFvQkgsS0FBSyxDQUFDQyxFQUExQjtBQUNILE9BRkQsTUFFTztBQUNILGFBQUtFLFlBQUwsR0FBb0JILEtBQXBCO0FBQ0g7QUFDSjs7O3lDQUVvQkksRyxFQUFLO0FBQ3RCLFVBQUksRUFBRUEsR0FBRyxZQUFZQyxvQ0FBakIsQ0FBSixFQUNJLE1BQU1DLEtBQUssQ0FBQyx1RUFBRCxDQUFYO0FBRUosV0FBS0Msa0JBQUwsQ0FBd0JDLElBQXhCLENBQTZCSixHQUE3QjtBQUNIOzs7NkJBRVE7QUFDTCxVQUFJLENBQUMsS0FBS0wsSUFBVixFQUNJLE1BQU1PLEtBQUsscUNBQVg7QUFDSixVQUFJLENBQUMsS0FBS0wsRUFBVixFQUNJLE1BQU1LLEtBQUssbUNBQVg7QUFDSixVQUFJLENBQUMsS0FBS0csT0FBVixFQUNJLE1BQU1ILEtBQUssMENBQVg7QUFDSixVQUFJLENBQUMsS0FBS0ksUUFBVixFQUNJLE1BQU1KLEtBQUssMkNBQVg7QUFFSixVQUFJSyxNQUFNLEdBQUc7QUFDVFosUUFBQUEsSUFBSSxFQUFFLEtBQUtBLElBREY7QUFFVEUsUUFBQUEsRUFBRSxFQUFFLEtBQUtBLEVBRkE7QUFHVFEsUUFBQUEsT0FBTyxFQUFFLEtBQUtBLE9BSEw7QUFJVEMsUUFBQUEsUUFBUSxFQUFFLEtBQUtBO0FBSk4sT0FBYjtBQU9BLFVBQUksS0FBS1AsWUFBVCxFQUNJUSxNQUFNLENBQUNDLGNBQVAsR0FBd0IsS0FBS1QsWUFBN0I7QUFDSixVQUFJLEtBQUtVLE9BQVQsRUFDSUYsTUFBTSxDQUFDRSxPQUFQLEdBQWlCLEtBQUtBLE9BQXRCO0FBQ0osVUFBSSxLQUFLQyxNQUFMLElBQWUsS0FBS0EsTUFBTCxDQUFZQyxNQUFaLEdBQXFCLENBQXhDLEVBQ0lKLE1BQU0sQ0FBQ0csTUFBUCxHQUFnQixLQUFLQSxNQUFyQjtBQUNKLFVBQUksS0FBS0UsaUJBQUwsSUFBMEIsS0FBS0EsaUJBQUwsQ0FBdUJELE1BQXZCLEdBQWdDLENBQTlELEVBQ0lKLE1BQU0sQ0FBQ00sbUJBQVAsR0FBNkIsS0FBS0QsaUJBQWxDOztBQUVKLFVBQUksS0FBS0UsZ0JBQUwsSUFBeUIsS0FBS0EsZ0JBQUwsQ0FBc0JILE1BQXRCLEdBQStCLENBQTVELEVBQStEO0FBQzNELFlBQUlHLGdCQUFnQixHQUFHLEVBQXZCO0FBRDJEO0FBQUE7QUFBQTs7QUFBQTtBQUUzRCwrQkFBYyxLQUFLQSxnQkFBbkI7QUFBQSxnQkFBU0MsQ0FBVDtBQUNJRCxZQUFBQSxnQkFBZ0IsQ0FBQ1YsSUFBakIsQ0FBc0JXLENBQUMsQ0FBQ0MsTUFBRixFQUF0QjtBQURKO0FBRjJEO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7O0FBSTNEVCxRQUFBQSxNQUFNLENBQUNVLGlCQUFQLEdBQTJCSCxnQkFBM0I7QUFDSDs7QUFFRCxVQUFJLEtBQUtYLGtCQUFMLElBQTJCLEtBQUtBLGtCQUFMLENBQXdCUSxNQUF4QixHQUFpQyxDQUFoRSxFQUFtRTtBQUMvRCxZQUFJTyxZQUFZLEdBQUcsRUFBbkI7QUFEK0Q7QUFBQTtBQUFBOztBQUFBO0FBRS9ELGdDQUFjLEtBQUtmLGtCQUFuQjtBQUFBLGdCQUFTWSxFQUFUO0FBQ0lHLFlBQUFBLFlBQVksQ0FBQ2QsSUFBYixDQUFrQlcsRUFBQyxDQUFDQyxNQUFGLEVBQWxCO0FBREo7QUFGK0Q7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFJL0RULFFBQUFBLE1BQU0sQ0FBQ1ksbUJBQVAsR0FBNkJELFlBQTdCO0FBQ0g7O0FBRUQsYUFBT1gsTUFBUDtBQUNIIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcWmFjaCBTaGFtZXNcXERvY3VtZW50c1xcRGV2ZWxvcG1lbnRcXGpzLTItc3RpeFxcbGliXFxvYmplY3RzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gaW1wb3J0IHsgSWRlbnRpdHkgfSBmcm9tICcuL2lkZW50aXR5J1xyXG5pbXBvcnQgeyBFeHRlcm5hbFJlZmVyZW5jZSB9IGZyb20gJy4vZXh0ZXJuYWxSZWZlcmVuY2UnXHJcblxyXG5leHBvcnQgY2xhc3MgQmFzZU9iamVjdCB7XHJcblxyXG4gICAgdHlwZSA9IG51bGxcclxuICAgIGlkID0gbnVsbFxyXG4gICAgY3JlYXRlZEJ5UmVmID0gbnVsbFxyXG4gICAgY3JlYXRlZCA9IG51bGxcclxuICAgIG1vZGlmaWVkID0gbnVsbFxyXG4gICAgcmV2b2tlZCA9IG51bGxcclxuICAgIGxhYmVscyA9IFtdXHJcbiAgICBleHRlcm5hbFJlZmVyZW5jZXMgPSBbXVxyXG4gICAgb2JqZWN0TWFya2luZ1JlZnMgPSBbXVxyXG4gICAgZ3JhbnVsYXJNYXJraW5ncyA9IFtdXHJcblxyXG4gICAgY29uc3RydWN0b3IodHlwZSkge1xyXG4gICAgICAgIHRoaXMudHlwZSA9IHR5cGVcclxuICAgIH1cclxuXHJcbiAgICBzZXRJZCh2YWx1ZSkge1xyXG4gICAgICAgIHRoaXMuaWQgPSBgJHt0aGlzLnR5cGV9LS0ke3ZhbHVlfWBcclxuICAgIH1cclxuXHJcbiAgICBzZXRDcmVhdGVkQnlSZWYodmFsdWUpIHtcclxuICAgICAgICBpZiAodmFsdWUgaW5zdGFuY2VvZiBJZGVudGl0eSkge1xyXG4gICAgICAgICAgICB0aGlzLmNyZWF0ZWRCeVJlZiA9IHZhbHVlLmlkXHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgdGhpcy5jcmVhdGVkQnlSZWYgPSB2YWx1ZVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBhZGRFeHRlcm5hbFJlZmVyZW5jZShyZWYpIHtcclxuICAgICAgICBpZiAoIShyZWYgaW5zdGFuY2VvZiBFeHRlcm5hbFJlZmVyZW5jZSkpXHJcbiAgICAgICAgICAgIHRocm93IEVycm9yKCdZb3UgY2FuIG9ubHkgYWRkIGFuIGV4dGVybmFsIHJlZmVyZW5jZSBvZiB0aGUgRXh0ZXJuYWxSZWZlcmVuY2UgdHlwZSEnKVxyXG4gICAgICAgICAgICBcclxuICAgICAgICB0aGlzLmV4dGVybmFsUmVmZXJlbmNlcy5wdXNoKHJlZilcclxuICAgIH1cclxuXHJcbiAgICB0b0pTT04oKSB7XHJcbiAgICAgICAgaWYgKCF0aGlzLnR5cGUpXHJcbiAgICAgICAgICAgIHRocm93IEVycm9yKGBTVElYIDIuMCByZXF1aXJlcyBhbiBvYmplY3QgdHlwZSFgKVxyXG4gICAgICAgIGlmICghdGhpcy5pZClcclxuICAgICAgICAgICAgdGhyb3cgRXJyb3IoYFNUSVggMi4wIHJlcXVpcmVzIGFuIG9iamVjdCBJRCFgKVxyXG4gICAgICAgIGlmICghdGhpcy5jcmVhdGVkKVxyXG4gICAgICAgICAgICB0aHJvdyBFcnJvcihgU1RJWCAyLjAgcmVxdWlyZXMgYSBjcmVhdGVkIHRpbWVzdGFtcCFgKVxyXG4gICAgICAgIGlmICghdGhpcy5tb2RpZmllZClcclxuICAgICAgICAgICAgdGhyb3cgRXJyb3IoYFNUSVggMi4wIHJlcXVpcmVzIGEgbW9kaWZpZWQgdGltZXN0YW1wIWApXHJcblxyXG4gICAgICAgIGxldCBvdXRwdXQgPSB7XHJcbiAgICAgICAgICAgIHR5cGU6IHRoaXMudHlwZSxcclxuICAgICAgICAgICAgaWQ6IHRoaXMuaWQsXHJcbiAgICAgICAgICAgIGNyZWF0ZWQ6IHRoaXMuY3JlYXRlZCxcclxuICAgICAgICAgICAgbW9kaWZpZWQ6IHRoaXMubW9kaWZpZWRcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmICh0aGlzLmNyZWF0ZWRCeVJlZilcclxuICAgICAgICAgICAgb3V0cHV0LmNyZWF0ZWRfYnlfcmVmID0gdGhpcy5jcmVhdGVkQnlSZWZcclxuICAgICAgICBpZiAodGhpcy5yZXZva2VkKVxyXG4gICAgICAgICAgICBvdXRwdXQucmV2b2tlZCA9IHRoaXMucmV2b2tlZFxyXG4gICAgICAgIGlmICh0aGlzLmxhYmVscyAmJiB0aGlzLmxhYmVscy5sZW5ndGggPiAwKVxyXG4gICAgICAgICAgICBvdXRwdXQubGFiZWxzID0gdGhpcy5sYWJlbHNcclxuICAgICAgICBpZiAodGhpcy5vYmplY3RNYXJraW5nUmVmcyAmJiB0aGlzLm9iamVjdE1hcmtpbmdSZWZzLmxlbmd0aCA+IDApXHJcbiAgICAgICAgICAgIG91dHB1dC5vYmplY3RfbWFya2luZ19yZWZzID0gdGhpcy5vYmplY3RNYXJraW5nUmVmc1xyXG5cclxuICAgICAgICBpZiAodGhpcy5ncmFudWxhck1hcmtpbmdzICYmIHRoaXMuZ3JhbnVsYXJNYXJraW5ncy5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICAgIGxldCBncmFudWxhck1hcmtpbmdzID0gW11cclxuICAgICAgICAgICAgZm9yIChsZXQgaSBvZiB0aGlzLmdyYW51bGFyTWFya2luZ3MpXHJcbiAgICAgICAgICAgICAgICBncmFudWxhck1hcmtpbmdzLnB1c2goaS50b0pTT04oKSlcclxuICAgICAgICAgICAgb3V0cHV0LmdyYW51bGFyX21hcmtpbmdzID0gZ3JhbnVsYXJNYXJraW5nc1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYgKHRoaXMuZXh0ZXJuYWxSZWZlcmVuY2VzICYmIHRoaXMuZXh0ZXJuYWxSZWZlcmVuY2VzLmxlbmd0aCA+IDApIHtcclxuICAgICAgICAgICAgbGV0IGV4dGVybmFsUmVmcyA9IFtdXHJcbiAgICAgICAgICAgIGZvciAobGV0IGkgb2YgdGhpcy5leHRlcm5hbFJlZmVyZW5jZXMpXHJcbiAgICAgICAgICAgICAgICBleHRlcm5hbFJlZnMucHVzaChpLnRvSlNPTigpKVxyXG4gICAgICAgICAgICBvdXRwdXQuZXh0ZXJuYWxfcmVmZXJlbmNlcyA9IGV4dGVybmFsUmVmc1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcmV0dXJuIG91dHB1dFxyXG4gICAgfVxyXG59Il19",
    "map": {
      "version": 3,
      "sources": [
        "baseObject.js"
      ],
      "names": [
        "BaseObject",
        "type",
        "value",
        "id",
        "Identity",
        "createdByRef",
        "ref",
        "ExternalReference",
        "Error",
        "externalReferences",
        "push",
        "created",
        "modified",
        "output",
        "created_by_ref",
        "revoked",
        "labels",
        "length",
        "objectMarkingRefs",
        "object_marking_refs",
        "granularMarkings",
        "i",
        "toJSON",
        "granular_markings",
        "externalRefs",
        "external_references"
      ],
      "mappings": ";;;;;;;AACA;;;;;;;;;;IAEaA,U;;;AAaT,sBAAYC,IAAZ,EAAkB;AAAA;;AAAA,kCAXX,IAWW;;AAAA,gCAVb,IAUa;;AAAA,0CATH,IASG;;AAAA,qCARR,IAQQ;;AAAA,sCAPP,IAOO;;AAAA,qCANR,IAMQ;;AAAA,oCALT,EAKS;;AAAA,gDAJG,EAIH;;AAAA,+CAHE,EAGF;;AAAA,8CAFC,EAED;;AACd,SAAKA,IAAL,GAAYA,IAAZ;AACH;;;;0BAEKC,K,EAAO;AACT,WAAKC,EAAL,aAAa,KAAKF,IAAlB,eAA2BC,KAA3B;AACH;;;oCAEeA,K,EAAO;AACnB,UAAIA,KAAK,YAAYE,QAArB,EAA+B;AAC3B,aAAKC,YAAL,GAAoBH,KAAK,CAACC,EAA1B;AACH,OAFD,MAEO;AACH,aAAKE,YAAL,GAAoBH,KAApB;AACH;AACJ;;;yCAEoBI,G,EAAK;AACtB,UAAI,EAAEA,GAAG,YAAYC,oCAAjB,CAAJ,EACI,MAAMC,KAAK,CAAC,uEAAD,CAAX;AAEJ,WAAKC,kBAAL,CAAwBC,IAAxB,CAA6BJ,GAA7B;AACH;;;6BAEQ;AACL,UAAI,CAAC,KAAKL,IAAV,EACI,MAAMO,KAAK,qCAAX;AACJ,UAAI,CAAC,KAAKL,EAAV,EACI,MAAMK,KAAK,mCAAX;AACJ,UAAI,CAAC,KAAKG,OAAV,EACI,MAAMH,KAAK,0CAAX;AACJ,UAAI,CAAC,KAAKI,QAAV,EACI,MAAMJ,KAAK,2CAAX;AAEJ,UAAIK,MAAM,GAAG;AACTZ,QAAAA,IAAI,EAAE,KAAKA,IADF;AAETE,QAAAA,EAAE,EAAE,KAAKA,EAFA;AAGTQ,QAAAA,OAAO,EAAE,KAAKA,OAHL;AAITC,QAAAA,QAAQ,EAAE,KAAKA;AAJN,OAAb;AAOA,UAAI,KAAKP,YAAT,EACIQ,MAAM,CAACC,cAAP,GAAwB,KAAKT,YAA7B;AACJ,UAAI,KAAKU,OAAT,EACIF,MAAM,CAACE,OAAP,GAAiB,KAAKA,OAAtB;AACJ,UAAI,KAAKC,MAAL,IAAe,KAAKA,MAAL,CAAYC,MAAZ,GAAqB,CAAxC,EACIJ,MAAM,CAACG,MAAP,GAAgB,KAAKA,MAArB;AACJ,UAAI,KAAKE,iBAAL,IAA0B,KAAKA,iBAAL,CAAuBD,MAAvB,GAAgC,CAA9D,EACIJ,MAAM,CAACM,mBAAP,GAA6B,KAAKD,iBAAlC;;AAEJ,UAAI,KAAKE,gBAAL,IAAyB,KAAKA,gBAAL,CAAsBH,MAAtB,GAA+B,CAA5D,EAA+D;AAC3D,YAAIG,gBAAgB,GAAG,EAAvB;AAD2D;AAAA;AAAA;;AAAA;AAE3D,+BAAc,KAAKA,gBAAnB;AAAA,gBAASC,CAAT;AACID,YAAAA,gBAAgB,CAACV,IAAjB,CAAsBW,CAAC,CAACC,MAAF,EAAtB;AADJ;AAF2D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAI3DT,QAAAA,MAAM,CAACU,iBAAP,GAA2BH,gBAA3B;AACH;;AAED,UAAI,KAAKX,kBAAL,IAA2B,KAAKA,kBAAL,CAAwBQ,MAAxB,GAAiC,CAAhE,EAAmE;AAC/D,YAAIO,YAAY,GAAG,EAAnB;AAD+D;AAAA;AAAA;;AAAA;AAE/D,gCAAc,KAAKf,kBAAnB;AAAA,gBAASY,EAAT;AACIG,YAAAA,YAAY,CAACd,IAAb,CAAkBW,EAAC,CAACC,MAAF,EAAlB;AADJ;AAF+D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAI/DT,QAAAA,MAAM,CAACY,mBAAP,GAA6BD,YAA7B;AACH;;AAED,aAAOX,MAAP;AACH",
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects",
      "sourcesContent": [
        "// import { Identity } from './identity'\r\nimport { ExternalReference } from './externalReference'\r\n\r\nexport class BaseObject {\r\n\r\n    type = null\r\n    id = null\r\n    createdByRef = null\r\n    created = null\r\n    modified = null\r\n    revoked = null\r\n    labels = []\r\n    externalReferences = []\r\n    objectMarkingRefs = []\r\n    granularMarkings = []\r\n\r\n    constructor(type) {\r\n        this.type = type\r\n    }\r\n\r\n    setId(value) {\r\n        this.id = `${this.type}--${value}`\r\n    }\r\n\r\n    setCreatedByRef(value) {\r\n        if (value instanceof Identity) {\r\n            this.createdByRef = value.id\r\n        } else {\r\n            this.createdByRef = value\r\n        }\r\n    }\r\n\r\n    addExternalReference(ref) {\r\n        if (!(ref instanceof ExternalReference))\r\n            throw Error('You can only add an external reference of the ExternalReference type!')\r\n            \r\n        this.externalReferences.push(ref)\r\n    }\r\n\r\n    toJSON() {\r\n        if (!this.type)\r\n            throw Error(`STIX 2.0 requires an object type!`)\r\n        if (!this.id)\r\n            throw Error(`STIX 2.0 requires an object ID!`)\r\n        if (!this.created)\r\n            throw Error(`STIX 2.0 requires a created timestamp!`)\r\n        if (!this.modified)\r\n            throw Error(`STIX 2.0 requires a modified timestamp!`)\r\n\r\n        let output = {\r\n            type: this.type,\r\n            id: this.id,\r\n            created: this.created,\r\n            modified: this.modified\r\n        }\r\n\r\n        if (this.createdByRef)\r\n            output.created_by_ref = this.createdByRef\r\n        if (this.revoked)\r\n            output.revoked = this.revoked\r\n        if (this.labels && this.labels.length > 0)\r\n            output.labels = this.labels\r\n        if (this.objectMarkingRefs && this.objectMarkingRefs.length > 0)\r\n            output.object_marking_refs = this.objectMarkingRefs\r\n\r\n        if (this.granularMarkings && this.granularMarkings.length > 0) {\r\n            let granularMarkings = []\r\n            for (let i of this.granularMarkings)\r\n                granularMarkings.push(i.toJSON())\r\n            output.granular_markings = granularMarkings\r\n        }\r\n\r\n        if (this.externalReferences && this.externalReferences.length > 0) {\r\n            let externalRefs = []\r\n            for (let i of this.externalReferences)\r\n                externalRefs.push(i.toJSON())\r\n            output.external_references = externalRefs\r\n        }\r\n\r\n        return output\r\n    }\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1565910004268
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\lib\\\\objects\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"filename\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\lib\\\\objects\\\\externalReference.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects\\externalReference.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects\\externalReference.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects\\externalReference.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects",
        "sourceFileName": "externalReference.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar ExternalReference =\n/*#__PURE__*/\nfunction () {\n  function ExternalReference(sourceName) {\n    _classCallCheck(this, ExternalReference);\n\n    _defineProperty(this, \"id\", null);\n\n    _defineProperty(this, \"externalId\", null);\n\n    _defineProperty(this, \"sourceName\", null);\n\n    this.sourceName = sourceName;\n  }\n\n  _createClass(ExternalReference, [{\n    key: \"toJSON\",\n    value: function toJSON() {\n      var output = {\n        sourceName: this.sourceName\n      };\n      if (!this.externalId && !this.id) throw Error('An external reference must have either an ID or an External ID!');\n      if (this.externalId) output.external_id = this.externalId;\n      if (this.id) output.id = this.id;\n      return output;\n    }\n  }]);\n\n  return ExternalReference;\n}();\n\nvar _default = ExternalReference;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImV4dGVybmFsUmVmZXJlbmNlLmpzIl0sIm5hbWVzIjpbIkV4dGVybmFsUmVmZXJlbmNlIiwic291cmNlTmFtZSIsIm91dHB1dCIsImV4dGVybmFsSWQiLCJpZCIsIkVycm9yIiwiZXh0ZXJuYWxfaWQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztJQUFNQSxpQjs7O0FBTUYsNkJBQVlDLFVBQVosRUFBd0I7QUFBQTs7QUFBQSxnQ0FKbkIsSUFJbUI7O0FBQUEsd0NBSFgsSUFHVzs7QUFBQSx3Q0FGWCxJQUVXOztBQUNwQixTQUFLQSxVQUFMLEdBQWtCQSxVQUFsQjtBQUNIOzs7OzZCQUVRO0FBQ0wsVUFBSUMsTUFBTSxHQUFHO0FBQUVELFFBQUFBLFVBQVUsRUFBRSxLQUFLQTtBQUFuQixPQUFiO0FBQ0EsVUFBSSxDQUFDLEtBQUtFLFVBQU4sSUFBb0IsQ0FBQyxLQUFLQyxFQUE5QixFQUNJLE1BQU1DLEtBQUssQ0FBQyxpRUFBRCxDQUFYO0FBRUosVUFBSSxLQUFLRixVQUFULEVBQ0lELE1BQU0sQ0FBQ0ksV0FBUCxHQUFxQixLQUFLSCxVQUExQjtBQUNKLFVBQUksS0FBS0MsRUFBVCxFQUNJRixNQUFNLENBQUNFLEVBQVAsR0FBWSxLQUFLQSxFQUFqQjtBQUVKLGFBQU9GLE1BQVA7QUFDSDs7Ozs7O2VBR1VGLGlCIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcWmFjaCBTaGFtZXNcXERvY3VtZW50c1xcRGV2ZWxvcG1lbnRcXGpzLTItc3RpeFxcbGliXFxvYmplY3RzIiwic291cmNlc0NvbnRlbnQiOlsiY2xhc3MgRXh0ZXJuYWxSZWZlcmVuY2Uge1xyXG5cclxuICAgIGlkID0gbnVsbFxyXG4gICAgZXh0ZXJuYWxJZCA9IG51bGxcclxuICAgIHNvdXJjZU5hbWUgPSBudWxsXHJcbiAgICBcclxuICAgIGNvbnN0cnVjdG9yKHNvdXJjZU5hbWUpIHtcclxuICAgICAgICB0aGlzLnNvdXJjZU5hbWUgPSBzb3VyY2VOYW1lXHJcbiAgICB9XHJcblxyXG4gICAgdG9KU09OKCkge1xyXG4gICAgICAgIGxldCBvdXRwdXQgPSB7IHNvdXJjZU5hbWU6IHRoaXMuc291cmNlTmFtZSB9XHJcbiAgICAgICAgaWYgKCF0aGlzLmV4dGVybmFsSWQgJiYgIXRoaXMuaWQpXHJcbiAgICAgICAgICAgIHRocm93IEVycm9yKCdBbiBleHRlcm5hbCByZWZlcmVuY2UgbXVzdCBoYXZlIGVpdGhlciBhbiBJRCBvciBhbiBFeHRlcm5hbCBJRCEnKVxyXG5cclxuICAgICAgICBpZiAodGhpcy5leHRlcm5hbElkKVxyXG4gICAgICAgICAgICBvdXRwdXQuZXh0ZXJuYWxfaWQgPSB0aGlzLmV4dGVybmFsSWRcclxuICAgICAgICBpZiAodGhpcy5pZClcclxuICAgICAgICAgICAgb3V0cHV0LmlkID0gdGhpcy5pZFxyXG5cclxuICAgICAgICByZXR1cm4gb3V0cHV0XHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IEV4dGVybmFsUmVmZXJlbmNlIl19",
    "map": {
      "version": 3,
      "sources": [
        "externalReference.js"
      ],
      "names": [
        "ExternalReference",
        "sourceName",
        "output",
        "externalId",
        "id",
        "Error",
        "external_id"
      ],
      "mappings": ";;;;;;;;;;;;;;;IAAMA,iB;;;AAMF,6BAAYC,UAAZ,EAAwB;AAAA;;AAAA,gCAJnB,IAImB;;AAAA,wCAHX,IAGW;;AAAA,wCAFX,IAEW;;AACpB,SAAKA,UAAL,GAAkBA,UAAlB;AACH;;;;6BAEQ;AACL,UAAIC,MAAM,GAAG;AAAED,QAAAA,UAAU,EAAE,KAAKA;AAAnB,OAAb;AACA,UAAI,CAAC,KAAKE,UAAN,IAAoB,CAAC,KAAKC,EAA9B,EACI,MAAMC,KAAK,CAAC,iEAAD,CAAX;AAEJ,UAAI,KAAKF,UAAT,EACID,MAAM,CAACI,WAAP,GAAqB,KAAKH,UAA1B;AACJ,UAAI,KAAKC,EAAT,EACIF,MAAM,CAACE,EAAP,GAAY,KAAKA,EAAjB;AAEJ,aAAOF,MAAP;AACH;;;;;;eAGUF,iB",
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects",
      "sourcesContent": [
        "class ExternalReference {\r\n\r\n    id = null\r\n    externalId = null\r\n    sourceName = null\r\n    \r\n    constructor(sourceName) {\r\n        this.sourceName = sourceName\r\n    }\r\n\r\n    toJSON() {\r\n        let output = { sourceName: this.sourceName }\r\n        if (!this.externalId && !this.id)\r\n            throw Error('An external reference must have either an ID or an External ID!')\r\n\r\n        if (this.externalId)\r\n            output.external_id = this.externalId\r\n        if (this.id)\r\n            output.id = this.id\r\n\r\n        return output\r\n    }\r\n}\r\n\r\nexport default ExternalReference"
      ]
    },
    "sourceType": "script",
    "mtime": 1565900009943
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\lib\\\\objects\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"filename\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\lib\\\\objects\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects\\index.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _baseObject = _interopRequireDefault(require(\"./baseObject\"));\n\nvar _attackPattern = _interopRequireDefault(require(\"./attackPattern\"));\n\nvar _campaign = _interopRequireDefault(require(\"./campaign\"));\n\nvar _courseOfAction = _interopRequireDefault(require(\"./courseOfAction\"));\n\nvar _externalReference = _interopRequireDefault(require(\"./externalReference\"));\n\nvar _identity = _interopRequireDefault(require(\"./identity\"));\n\nvar _indicator = _interopRequireDefault(require(\"./indicator\"));\n\nvar _intrusionSet = _interopRequireDefault(require(\"./intrusionSet\"));\n\nvar _killChainPhase = _interopRequireDefault(require(\"./killChainPhase\"));\n\nvar _malware = _interopRequireDefault(require(\"./malware\"));\n\nvar _observedData = _interopRequireDefault(require(\"./observedData\"));\n\nvar _relationship = _interopRequireDefault(require(\"./relationship\"));\n\nvar _report = _interopRequireDefault(require(\"./report\"));\n\nvar _sighting = _interopRequireDefault(require(\"./sighting\"));\n\nvar _threatActor = _interopRequireDefault(require(\"./threatActor\"));\n\nvar _tool = _interopRequireDefault(require(\"./tool\"));\n\nvar _vulernability = _interopRequireDefault(require(\"./vulernability\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar _default = {\n  BaseObject: _baseObject[\"default\"],\n  AttackPattern: _attackPattern[\"default\"],\n  Campaign: _campaign[\"default\"],\n  CourseOfAction: _courseOfAction[\"default\"],\n  ExternalReference: _externalReference[\"default\"],\n  Identity: _identity[\"default\"],\n  Indicator: _indicator[\"default\"],\n  IntrusionSet: _intrusionSet[\"default\"],\n  KillChainPhase: _killChainPhase[\"default\"],\n  Malware: _malware[\"default\"],\n  ObservedData: _observedData[\"default\"],\n  Relationship: _relationship[\"default\"],\n  Report: _report[\"default\"],\n  Sighting: _sighting[\"default\"],\n  ThreatActor: _threatActor[\"default\"],\n  Tool: _tool[\"default\"],\n  Vulnerability: _vulernability[\"default\"]\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIkJhc2VPYmplY3QiLCJBdHRhY2tQYXR0ZXJuIiwiQ2FtcGFpZ24iLCJDb3Vyc2VPZkFjdGlvbiIsIkV4dGVybmFsUmVmZXJlbmNlIiwiSWRlbnRpdHkiLCJJbmRpY2F0b3IiLCJJbnRydXNpb25TZXQiLCJLaWxsQ2hhaW5QaGFzZSIsIk1hbHdhcmUiLCJPYnNlcnZlZERhdGEiLCJSZWxhdGlvbnNoaXAiLCJSZXBvcnQiLCJTaWdodGluZyIsIlRocmVhdEFjdG9yIiwiVG9vbCIsIlZ1bG5lcmFiaWxpdHkiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7OztlQUVlO0FBQ1hBLEVBQUFBLFVBQVUsRUFBVkEsc0JBRFc7QUFFWEMsRUFBQUEsYUFBYSxFQUFiQSx5QkFGVztBQUdYQyxFQUFBQSxRQUFRLEVBQVJBLG9CQUhXO0FBSVhDLEVBQUFBLGNBQWMsRUFBZEEsMEJBSlc7QUFLWEMsRUFBQUEsaUJBQWlCLEVBQWpCQSw2QkFMVztBQU1YQyxFQUFBQSxRQUFRLEVBQVJBLG9CQU5XO0FBT1hDLEVBQUFBLFNBQVMsRUFBVEEscUJBUFc7QUFRWEMsRUFBQUEsWUFBWSxFQUFaQSx3QkFSVztBQVNYQyxFQUFBQSxjQUFjLEVBQWRBLDBCQVRXO0FBVVhDLEVBQUFBLE9BQU8sRUFBUEEsbUJBVlc7QUFXWEMsRUFBQUEsWUFBWSxFQUFaQSx3QkFYVztBQVlYQyxFQUFBQSxZQUFZLEVBQVpBLHdCQVpXO0FBYVhDLEVBQUFBLE1BQU0sRUFBTkEsa0JBYlc7QUFjWEMsRUFBQUEsUUFBUSxFQUFSQSxvQkFkVztBQWVYQyxFQUFBQSxXQUFXLEVBQVhBLHVCQWZXO0FBZ0JYQyxFQUFBQSxJQUFJLEVBQUpBLGdCQWhCVztBQWlCWEMsRUFBQUEsYUFBYSxFQUFiQTtBQWpCVyxDIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcWmFjaCBTaGFtZXNcXERvY3VtZW50c1xcRGV2ZWxvcG1lbnRcXGpzLTItc3RpeFxcbGliXFxvYmplY3RzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEJhc2VPYmplY3QgZnJvbSAnLi9iYXNlT2JqZWN0J1xyXG5pbXBvcnQgQXR0YWNrUGF0dGVybiBmcm9tICcuL2F0dGFja1BhdHRlcm4nXHJcbmltcG9ydCBDYW1wYWlnbiBmcm9tICcuL2NhbXBhaWduJ1xyXG5pbXBvcnQgQ291cnNlT2ZBY3Rpb24gZnJvbSAnLi9jb3Vyc2VPZkFjdGlvbidcclxuaW1wb3J0IEV4dGVybmFsUmVmZXJlbmNlIGZyb20gJy4vZXh0ZXJuYWxSZWZlcmVuY2UnXHJcbmltcG9ydCBJZGVudGl0eSBmcm9tICcuL2lkZW50aXR5J1xyXG5pbXBvcnQgSW5kaWNhdG9yIGZyb20gJy4vaW5kaWNhdG9yJ1xyXG5pbXBvcnQgSW50cnVzaW9uU2V0IGZyb20gJy4vaW50cnVzaW9uU2V0J1xyXG5pbXBvcnQgS2lsbENoYWluUGhhc2UgZnJvbSAnLi9raWxsQ2hhaW5QaGFzZSdcclxuaW1wb3J0IE1hbHdhcmUgZnJvbSAnLi9tYWx3YXJlJ1xyXG5pbXBvcnQgT2JzZXJ2ZWREYXRhIGZyb20gJy4vb2JzZXJ2ZWREYXRhJ1xyXG5pbXBvcnQgUmVsYXRpb25zaGlwIGZyb20gJy4vcmVsYXRpb25zaGlwJ1xyXG5pbXBvcnQgUmVwb3J0IGZyb20gJy4vcmVwb3J0J1xyXG5pbXBvcnQgU2lnaHRpbmcgZnJvbSAnLi9zaWdodGluZydcclxuaW1wb3J0IFRocmVhdEFjdG9yIGZyb20gJy4vdGhyZWF0QWN0b3InXHJcbmltcG9ydCBUb29sIGZyb20gJy4vdG9vbCdcclxuaW1wb3J0IFZ1bG5lcmFiaWxpdHkgZnJvbSAnLi92dWxlcm5hYmlsaXR5J1xyXG5cclxuZXhwb3J0IGRlZmF1bHQge1xyXG4gICAgQmFzZU9iamVjdCxcclxuICAgIEF0dGFja1BhdHRlcm4sXHJcbiAgICBDYW1wYWlnbixcclxuICAgIENvdXJzZU9mQWN0aW9uLFxyXG4gICAgRXh0ZXJuYWxSZWZlcmVuY2UsXHJcbiAgICBJZGVudGl0eSxcclxuICAgIEluZGljYXRvcixcclxuICAgIEludHJ1c2lvblNldCxcclxuICAgIEtpbGxDaGFpblBoYXNlLFxyXG4gICAgTWFsd2FyZSxcclxuICAgIE9ic2VydmVkRGF0YSxcclxuICAgIFJlbGF0aW9uc2hpcCxcclxuICAgIFJlcG9ydCxcclxuICAgIFNpZ2h0aW5nLFxyXG4gICAgVGhyZWF0QWN0b3IsXHJcbiAgICBUb29sLFxyXG4gICAgVnVsbmVyYWJpbGl0eVxyXG59Il19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "BaseObject",
        "AttackPattern",
        "Campaign",
        "CourseOfAction",
        "ExternalReference",
        "Identity",
        "Indicator",
        "IntrusionSet",
        "KillChainPhase",
        "Malware",
        "ObservedData",
        "Relationship",
        "Report",
        "Sighting",
        "ThreatActor",
        "Tool",
        "Vulnerability"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;eAEe;AACXA,EAAAA,UAAU,EAAVA,sBADW;AAEXC,EAAAA,aAAa,EAAbA,yBAFW;AAGXC,EAAAA,QAAQ,EAARA,oBAHW;AAIXC,EAAAA,cAAc,EAAdA,0BAJW;AAKXC,EAAAA,iBAAiB,EAAjBA,6BALW;AAMXC,EAAAA,QAAQ,EAARA,oBANW;AAOXC,EAAAA,SAAS,EAATA,qBAPW;AAQXC,EAAAA,YAAY,EAAZA,wBARW;AASXC,EAAAA,cAAc,EAAdA,0BATW;AAUXC,EAAAA,OAAO,EAAPA,mBAVW;AAWXC,EAAAA,YAAY,EAAZA,wBAXW;AAYXC,EAAAA,YAAY,EAAZA,wBAZW;AAaXC,EAAAA,MAAM,EAANA,kBAbW;AAcXC,EAAAA,QAAQ,EAARA,oBAdW;AAeXC,EAAAA,WAAW,EAAXA,uBAfW;AAgBXC,EAAAA,IAAI,EAAJA,gBAhBW;AAiBXC,EAAAA,aAAa,EAAbA;AAjBW,C",
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects",
      "sourcesContent": [
        "import BaseObject from './baseObject'\r\nimport AttackPattern from './attackPattern'\r\nimport Campaign from './campaign'\r\nimport CourseOfAction from './courseOfAction'\r\nimport ExternalReference from './externalReference'\r\nimport Identity from './identity'\r\nimport Indicator from './indicator'\r\nimport IntrusionSet from './intrusionSet'\r\nimport KillChainPhase from './killChainPhase'\r\nimport Malware from './malware'\r\nimport ObservedData from './observedData'\r\nimport Relationship from './relationship'\r\nimport Report from './report'\r\nimport Sighting from './sighting'\r\nimport ThreatActor from './threatActor'\r\nimport Tool from './tool'\r\nimport Vulnerability from './vulernability'\r\n\r\nexport default {\r\n    BaseObject,\r\n    AttackPattern,\r\n    Campaign,\r\n    CourseOfAction,\r\n    ExternalReference,\r\n    Identity,\r\n    Indicator,\r\n    IntrusionSet,\r\n    KillChainPhase,\r\n    Malware,\r\n    ObservedData,\r\n    Relationship,\r\n    Report,\r\n    Sighting,\r\n    ThreatActor,\r\n    Tool,\r\n    Vulnerability\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1565905430162
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\lib\\\\objects\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"filename\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\lib\\\\objects\\\\attackPattern.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects\\attackPattern.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects\\attackPattern.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects\\attackPattern.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects",
        "sourceFileName": "attackPattern.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _baseObject = require(\"./baseObject\");\n\nvar _killChainPhase = require(\"./killChainPhase\");\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar AttackPattern =\n/*#__PURE__*/\nfunction (_BaseObject) {\n  _inherits(AttackPattern, _BaseObject);\n\n  function AttackPattern(name) {\n    var _this;\n\n    _classCallCheck(this, AttackPattern);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AttackPattern).call(this, 'attack-pattern'));\n\n    _defineProperty(_assertThisInitialized(_this), \"name\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"description\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"killChainPhases\", []);\n\n    _this.name = name;\n    return _this;\n  }\n\n  _createClass(AttackPattern, [{\n    key: \"addKillChainPhase\",\n    value: function addKillChainPhase(phase) {\n      if (!(phase instanceof _killChainPhase.KillChainPhase)) throw Error('You can only add a kill chain phase of the KillChainPhase type!');\n      this.killChainPhases.push(phase);\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      if (!this.name) throw Error(\"STIX 2.0 requires an attack pattern name!\");\n\n      var output = _get(_getPrototypeOf(AttackPattern.prototype), \"toJSON\", this).call(this);\n\n      output.name = this.name;\n      if (this.description) output.description = this.description;\n\n      if (this.killChainPhases && this.killChainPhases.length > 0) {\n        var killChainPhases = [];\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = this.killChainPhases[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var i = _step.value;\n            killChainPhases.push(i.toJSON());\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n              _iterator[\"return\"]();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n\n        output.kill_chain_phases = killChainPhases;\n      }\n\n      return output;\n    }\n  }]);\n\n  return AttackPattern;\n}(_baseObject.BaseObject);\n\nvar _default = AttackPattern;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF0dGFja1BhdHRlcm4uanMiXSwibmFtZXMiOlsiQXR0YWNrUGF0dGVybiIsIm5hbWUiLCJwaGFzZSIsIktpbGxDaGFpblBoYXNlIiwiRXJyb3IiLCJraWxsQ2hhaW5QaGFzZXMiLCJwdXNoIiwib3V0cHV0IiwiZGVzY3JpcHRpb24iLCJsZW5ndGgiLCJpIiwidG9KU09OIiwia2lsbF9jaGFpbl9waGFzZXMiLCJCYXNlT2JqZWN0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBRU1BLGE7Ozs7O0FBTUYseUJBQVlDLElBQVosRUFBa0I7QUFBQTs7QUFBQTs7QUFDZCx1RkFBTSxnQkFBTjs7QUFEYywyREFKWCxJQUlXOztBQUFBLGtFQUhKLElBR0k7O0FBQUEsc0VBRkEsRUFFQTs7QUFHZCxVQUFLQSxJQUFMLEdBQVlBLElBQVo7QUFIYztBQUlqQjs7OztzQ0FFaUJDLEssRUFBTztBQUNyQixVQUFJLEVBQUVBLEtBQUssWUFBWUMsOEJBQW5CLENBQUosRUFDSSxNQUFNQyxLQUFLLENBQUMsaUVBQUQsQ0FBWDtBQUVKLFdBQUtDLGVBQUwsQ0FBcUJDLElBQXJCLENBQTBCSixLQUExQjtBQUNIOzs7NkJBRVE7QUFDTCxVQUFJLENBQUMsS0FBS0QsSUFBVixFQUNJLE1BQU1HLEtBQUssNkNBQVg7O0FBRUosVUFBSUcsTUFBTSw0RUFBVjs7QUFDQUEsTUFBQUEsTUFBTSxDQUFDTixJQUFQLEdBQWMsS0FBS0EsSUFBbkI7QUFFQSxVQUFJLEtBQUtPLFdBQVQsRUFDSUQsTUFBTSxDQUFDQyxXQUFQLEdBQXFCLEtBQUtBLFdBQTFCOztBQUVKLFVBQUksS0FBS0gsZUFBTCxJQUF3QixLQUFLQSxlQUFMLENBQXFCSSxNQUFyQixHQUE4QixDQUExRCxFQUE2RDtBQUN6RCxZQUFJSixlQUFlLEdBQUcsRUFBdEI7QUFEeUQ7QUFBQTtBQUFBOztBQUFBO0FBRXpELCtCQUFjLEtBQUtBLGVBQW5CO0FBQUEsZ0JBQVNLLENBQVQ7QUFDSUwsWUFBQUEsZUFBZSxDQUFDQyxJQUFoQixDQUFxQkksQ0FBQyxDQUFDQyxNQUFGLEVBQXJCO0FBREo7QUFGeUQ7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFJekRKLFFBQUFBLE1BQU0sQ0FBQ0ssaUJBQVAsR0FBMkJQLGVBQTNCO0FBQ0g7O0FBRUQsYUFBT0UsTUFBUDtBQUNIOzs7O0VBckN1Qk0sc0I7O2VBd0NiYixhIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcWmFjaCBTaGFtZXNcXERvY3VtZW50c1xcRGV2ZWxvcG1lbnRcXGpzLTItc3RpeFxcbGliXFxvYmplY3RzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQmFzZU9iamVjdCB9IGZyb20gXCIuL2Jhc2VPYmplY3RcIlxyXG5pbXBvcnQgeyBLaWxsQ2hhaW5QaGFzZSB9IGZyb20gJy4va2lsbENoYWluUGhhc2UnXHJcblxyXG5jbGFzcyBBdHRhY2tQYXR0ZXJuIGV4dGVuZHMgQmFzZU9iamVjdCB7XHJcblxyXG4gICAgbmFtZSA9IG51bGxcclxuICAgIGRlc2NyaXB0aW9uID0gbnVsbFxyXG4gICAga2lsbENoYWluUGhhc2VzID0gW11cclxuICAgIFxyXG4gICAgY29uc3RydWN0b3IobmFtZSkge1xyXG4gICAgICAgIHN1cGVyKCdhdHRhY2stcGF0dGVybicpXHJcblxyXG4gICAgICAgIHRoaXMubmFtZSA9IG5hbWVcclxuICAgIH1cclxuXHJcbiAgICBhZGRLaWxsQ2hhaW5QaGFzZShwaGFzZSkge1xyXG4gICAgICAgIGlmICghKHBoYXNlIGluc3RhbmNlb2YgS2lsbENoYWluUGhhc2UpKVxyXG4gICAgICAgICAgICB0aHJvdyBFcnJvcignWW91IGNhbiBvbmx5IGFkZCBhIGtpbGwgY2hhaW4gcGhhc2Ugb2YgdGhlIEtpbGxDaGFpblBoYXNlIHR5cGUhJylcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgdGhpcy5raWxsQ2hhaW5QaGFzZXMucHVzaChwaGFzZSlcclxuICAgIH1cclxuXHJcbiAgICB0b0pTT04oKSB7XHJcbiAgICAgICAgaWYgKCF0aGlzLm5hbWUpXHJcbiAgICAgICAgICAgIHRocm93IEVycm9yKGBTVElYIDIuMCByZXF1aXJlcyBhbiBhdHRhY2sgcGF0dGVybiBuYW1lIWApXHJcblxyXG4gICAgICAgIGxldCBvdXRwdXQgPSBzdXBlci50b0pTT04oKVxyXG4gICAgICAgIG91dHB1dC5uYW1lID0gdGhpcy5uYW1lXHJcblxyXG4gICAgICAgIGlmICh0aGlzLmRlc2NyaXB0aW9uKVxyXG4gICAgICAgICAgICBvdXRwdXQuZGVzY3JpcHRpb24gPSB0aGlzLmRlc2NyaXB0aW9uXHJcblxyXG4gICAgICAgIGlmICh0aGlzLmtpbGxDaGFpblBoYXNlcyAmJiB0aGlzLmtpbGxDaGFpblBoYXNlcy5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICAgIGxldCBraWxsQ2hhaW5QaGFzZXMgPSBbXVxyXG4gICAgICAgICAgICBmb3IgKGxldCBpIG9mIHRoaXMua2lsbENoYWluUGhhc2VzKVxyXG4gICAgICAgICAgICAgICAga2lsbENoYWluUGhhc2VzLnB1c2goaS50b0pTT04oKSlcclxuICAgICAgICAgICAgb3V0cHV0LmtpbGxfY2hhaW5fcGhhc2VzID0ga2lsbENoYWluUGhhc2VzXHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICByZXR1cm4gb3V0cHV0XHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IEF0dGFja1BhdHRlcm4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "attackPattern.js"
      ],
      "names": [
        "AttackPattern",
        "name",
        "phase",
        "KillChainPhase",
        "Error",
        "killChainPhases",
        "push",
        "output",
        "description",
        "length",
        "i",
        "toJSON",
        "kill_chain_phases",
        "BaseObject"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;IAEMA,a;;;;;AAMF,yBAAYC,IAAZ,EAAkB;AAAA;;AAAA;;AACd,uFAAM,gBAAN;;AADc,2DAJX,IAIW;;AAAA,kEAHJ,IAGI;;AAAA,sEAFA,EAEA;;AAGd,UAAKA,IAAL,GAAYA,IAAZ;AAHc;AAIjB;;;;sCAEiBC,K,EAAO;AACrB,UAAI,EAAEA,KAAK,YAAYC,8BAAnB,CAAJ,EACI,MAAMC,KAAK,CAAC,iEAAD,CAAX;AAEJ,WAAKC,eAAL,CAAqBC,IAArB,CAA0BJ,KAA1B;AACH;;;6BAEQ;AACL,UAAI,CAAC,KAAKD,IAAV,EACI,MAAMG,KAAK,6CAAX;;AAEJ,UAAIG,MAAM,4EAAV;;AACAA,MAAAA,MAAM,CAACN,IAAP,GAAc,KAAKA,IAAnB;AAEA,UAAI,KAAKO,WAAT,EACID,MAAM,CAACC,WAAP,GAAqB,KAAKA,WAA1B;;AAEJ,UAAI,KAAKH,eAAL,IAAwB,KAAKA,eAAL,CAAqBI,MAArB,GAA8B,CAA1D,EAA6D;AACzD,YAAIJ,eAAe,GAAG,EAAtB;AADyD;AAAA;AAAA;;AAAA;AAEzD,+BAAc,KAAKA,eAAnB;AAAA,gBAASK,CAAT;AACIL,YAAAA,eAAe,CAACC,IAAhB,CAAqBI,CAAC,CAACC,MAAF,EAArB;AADJ;AAFyD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIzDJ,QAAAA,MAAM,CAACK,iBAAP,GAA2BP,eAA3B;AACH;;AAED,aAAOE,MAAP;AACH;;;;EArCuBM,sB;;eAwCbb,a",
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects",
      "sourcesContent": [
        "import { BaseObject } from \"./baseObject\"\r\nimport { KillChainPhase } from './killChainPhase'\r\n\r\nclass AttackPattern extends BaseObject {\r\n\r\n    name = null\r\n    description = null\r\n    killChainPhases = []\r\n    \r\n    constructor(name) {\r\n        super('attack-pattern')\r\n\r\n        this.name = name\r\n    }\r\n\r\n    addKillChainPhase(phase) {\r\n        if (!(phase instanceof KillChainPhase))\r\n            throw Error('You can only add a kill chain phase of the KillChainPhase type!')\r\n            \r\n        this.killChainPhases.push(phase)\r\n    }\r\n\r\n    toJSON() {\r\n        if (!this.name)\r\n            throw Error(`STIX 2.0 requires an attack pattern name!`)\r\n\r\n        let output = super.toJSON()\r\n        output.name = this.name\r\n\r\n        if (this.description)\r\n            output.description = this.description\r\n\r\n        if (this.killChainPhases && this.killChainPhases.length > 0) {\r\n            let killChainPhases = []\r\n            for (let i of this.killChainPhases)\r\n                killChainPhases.push(i.toJSON())\r\n            output.kill_chain_phases = killChainPhases\r\n        }\r\n\r\n        return output\r\n    }\r\n}\r\n\r\nexport default AttackPattern"
      ]
    },
    "sourceType": "script",
    "mtime": 1565912554026
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\lib\\\\objects\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"filename\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\lib\\\\objects\\\\killChainPhase.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects\\killChainPhase.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects\\killChainPhase.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects\\killChainPhase.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects",
        "sourceFileName": "killChainPhase.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar KillChainPhase =\n/*#__PURE__*/\nfunction () {\n  function KillChainPhase(killChain, phase) {\n    _classCallCheck(this, KillChainPhase);\n\n    _defineProperty(this, \"killChainName\", null);\n\n    _defineProperty(this, \"phaseName\", null);\n\n    this.killChainName = killChain;\n    this.phaseName = phase;\n  }\n\n  _createClass(KillChainPhase, [{\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        kill_chain_name: this.killChainName,\n        phase_name: this.phaseName\n      };\n    }\n  }]);\n\n  return KillChainPhase;\n}();\n\nvar _default = KillChainPhase;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImtpbGxDaGFpblBoYXNlLmpzIl0sIm5hbWVzIjpbIktpbGxDaGFpblBoYXNlIiwia2lsbENoYWluIiwicGhhc2UiLCJraWxsQ2hhaW5OYW1lIiwicGhhc2VOYW1lIiwia2lsbF9jaGFpbl9uYW1lIiwicGhhc2VfbmFtZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0lBQU1BLGM7OztBQUtGLDBCQUFZQyxTQUFaLEVBQXVCQyxLQUF2QixFQUE4QjtBQUFBOztBQUFBLDJDQUhkLElBR2M7O0FBQUEsdUNBRmxCLElBRWtCOztBQUMxQixTQUFLQyxhQUFMLEdBQXFCRixTQUFyQjtBQUNBLFNBQUtHLFNBQUwsR0FBaUJGLEtBQWpCO0FBQ0g7Ozs7NkJBRVE7QUFDTCxhQUFPO0FBQ0hHLFFBQUFBLGVBQWUsRUFBRSxLQUFLRixhQURuQjtBQUVIRyxRQUFBQSxVQUFVLEVBQUUsS0FBS0Y7QUFGZCxPQUFQO0FBSUg7Ozs7OztlQUdVSixjIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcWmFjaCBTaGFtZXNcXERvY3VtZW50c1xcRGV2ZWxvcG1lbnRcXGpzLTItc3RpeFxcbGliXFxvYmplY3RzIiwic291cmNlc0NvbnRlbnQiOlsiY2xhc3MgS2lsbENoYWluUGhhc2Uge1xyXG5cclxuICAgIGtpbGxDaGFpbk5hbWUgPSBudWxsXHJcbiAgICBwaGFzZU5hbWUgPSBudWxsXHJcbiAgICBcclxuICAgIGNvbnN0cnVjdG9yKGtpbGxDaGFpbiwgcGhhc2UpIHtcclxuICAgICAgICB0aGlzLmtpbGxDaGFpbk5hbWUgPSBraWxsQ2hhaW5cclxuICAgICAgICB0aGlzLnBoYXNlTmFtZSA9IHBoYXNlXHJcbiAgICB9XHJcblxyXG4gICAgdG9KU09OKCkge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIGtpbGxfY2hhaW5fbmFtZTogdGhpcy5raWxsQ2hhaW5OYW1lLFxyXG4gICAgICAgICAgICBwaGFzZV9uYW1lOiB0aGlzLnBoYXNlTmFtZVxyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgS2lsbENoYWluUGhhc2UiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "killChainPhase.js"
      ],
      "names": [
        "KillChainPhase",
        "killChain",
        "phase",
        "killChainName",
        "phaseName",
        "kill_chain_name",
        "phase_name"
      ],
      "mappings": ";;;;;;;;;;;;;;;IAAMA,c;;;AAKF,0BAAYC,SAAZ,EAAuBC,KAAvB,EAA8B;AAAA;;AAAA,2CAHd,IAGc;;AAAA,uCAFlB,IAEkB;;AAC1B,SAAKC,aAAL,GAAqBF,SAArB;AACA,SAAKG,SAAL,GAAiBF,KAAjB;AACH;;;;6BAEQ;AACL,aAAO;AACHG,QAAAA,eAAe,EAAE,KAAKF,aADnB;AAEHG,QAAAA,UAAU,EAAE,KAAKF;AAFd,OAAP;AAIH;;;;;;eAGUJ,c",
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects",
      "sourcesContent": [
        "class KillChainPhase {\r\n\r\n    killChainName = null\r\n    phaseName = null\r\n    \r\n    constructor(killChain, phase) {\r\n        this.killChainName = killChain\r\n        this.phaseName = phase\r\n    }\r\n\r\n    toJSON() {\r\n        return {\r\n            kill_chain_name: this.killChainName,\r\n            phase_name: this.phaseName\r\n        }\r\n    }\r\n}\r\n\r\nexport default KillChainPhase"
      ]
    },
    "sourceType": "script",
    "mtime": 1565750501659
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\lib\\\\objects\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"filename\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\lib\\\\objects\\\\campaign.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects\\campaign.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects\\campaign.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects\\campaign.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects",
        "sourceFileName": "campaign.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _baseObject = require(\"./baseObject\");\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar Campaign =\n/*#__PURE__*/\nfunction (_BaseObject) {\n  _inherits(Campaign, _BaseObject);\n\n  function Campaign(name) {\n    var _this;\n\n    _classCallCheck(this, Campaign);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Campaign).call(this, 'campaign'));\n\n    _defineProperty(_assertThisInitialized(_this), \"name\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"description\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"aliases\", []);\n\n    _defineProperty(_assertThisInitialized(_this), \"firstSeen\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"lastSeen\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"objective\", null);\n\n    _this.name = name;\n    return _this;\n  }\n\n  _createClass(Campaign, [{\n    key: \"addAlias\",\n    value: function addAlias(alias) {\n      if (this.aliases.indexOf(alias) === -1) this.aliases.push(alias);\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      if (!this.name) throw Error(\"STIX 2.0 requires a campaign name!\");\n\n      var output = _get(_getPrototypeOf(Campaign.prototype), \"toJSON\", this).call(this);\n\n      output.name = this.name;\n      if (this.description) output.description = this.description;\n      if (this.aliases && this.aliases.length > 0) output.aliases = this.aliases;\n      if (this.firstSeen) output.first_seen = this.aliases;\n      if (this.lastSeen) output.last_seen = this.lastSeen;\n      if (this.objective) output.objective = this.objective;\n      return output;\n    }\n  }]);\n\n  return Campaign;\n}(_baseObject.BaseObject);\n\nvar _default = Campaign;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNhbXBhaWduLmpzIl0sIm5hbWVzIjpbIkNhbXBhaWduIiwibmFtZSIsImFsaWFzIiwiYWxpYXNlcyIsImluZGV4T2YiLCJwdXNoIiwiRXJyb3IiLCJvdXRwdXQiLCJkZXNjcmlwdGlvbiIsImxlbmd0aCIsImZpcnN0U2VlbiIsImZpcnN0X3NlZW4iLCJsYXN0U2VlbiIsImxhc3Rfc2VlbiIsIm9iamVjdGl2ZSIsIkJhc2VPYmplY3QiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFFTUEsUTs7Ozs7QUFVRixvQkFBWUMsSUFBWixFQUFrQjtBQUFBOztBQUFBOztBQUNkLGtGQUFNLFVBQU47O0FBRGMsMkRBUlgsSUFRVzs7QUFBQSxrRUFQSixJQU9JOztBQUFBLDhEQU5SLEVBTVE7O0FBQUEsZ0VBTE4sSUFLTTs7QUFBQSwrREFKUCxJQUlPOztBQUFBLGdFQUhOLElBR007O0FBR2QsVUFBS0EsSUFBTCxHQUFZQSxJQUFaO0FBSGM7QUFJakI7Ozs7NkJBRVFDLEssRUFBTztBQUNaLFVBQUksS0FBS0MsT0FBTCxDQUFhQyxPQUFiLENBQXFCRixLQUFyQixNQUFnQyxDQUFDLENBQXJDLEVBQ0ksS0FBS0MsT0FBTCxDQUFhRSxJQUFiLENBQWtCSCxLQUFsQjtBQUNQOzs7NkJBRVE7QUFDTCxVQUFJLENBQUMsS0FBS0QsSUFBVixFQUNJLE1BQU1LLEtBQUssc0NBQVg7O0FBRUosVUFBSUMsTUFBTSx1RUFBVjs7QUFDQUEsTUFBQUEsTUFBTSxDQUFDTixJQUFQLEdBQWMsS0FBS0EsSUFBbkI7QUFFQSxVQUFJLEtBQUtPLFdBQVQsRUFDSUQsTUFBTSxDQUFDQyxXQUFQLEdBQXFCLEtBQUtBLFdBQTFCO0FBQ0osVUFBSSxLQUFLTCxPQUFMLElBQWdCLEtBQUtBLE9BQUwsQ0FBYU0sTUFBYixHQUFzQixDQUExQyxFQUNJRixNQUFNLENBQUNKLE9BQVAsR0FBaUIsS0FBS0EsT0FBdEI7QUFDSixVQUFJLEtBQUtPLFNBQVQsRUFDSUgsTUFBTSxDQUFDSSxVQUFQLEdBQW9CLEtBQUtSLE9BQXpCO0FBQ0osVUFBSSxLQUFLUyxRQUFULEVBQ0lMLE1BQU0sQ0FBQ00sU0FBUCxHQUFtQixLQUFLRCxRQUF4QjtBQUNKLFVBQUksS0FBS0UsU0FBVCxFQUNJUCxNQUFNLENBQUNPLFNBQVAsR0FBbUIsS0FBS0EsU0FBeEI7QUFFSixhQUFPUCxNQUFQO0FBQ0g7Ozs7RUF4Q2tCUSxzQjs7ZUEyQ1JmLFEiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxaYWNoIFNoYW1lc1xcRG9jdW1lbnRzXFxEZXZlbG9wbWVudFxcanMtMi1zdGl4XFxsaWJcXG9iamVjdHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCYXNlT2JqZWN0IH0gZnJvbSBcIi4vYmFzZU9iamVjdFwiXHJcblxyXG5jbGFzcyBDYW1wYWlnbiBleHRlbmRzIEJhc2VPYmplY3Qge1xyXG5cclxuICAgIG5hbWUgPSBudWxsXHJcbiAgICBkZXNjcmlwdGlvbiA9IG51bGxcclxuICAgIGFsaWFzZXMgPSBbXVxyXG4gICAgZmlyc3RTZWVuID0gbnVsbFxyXG4gICAgbGFzdFNlZW4gPSBudWxsXHJcbiAgICBvYmplY3RpdmUgPSBudWxsXHJcblxyXG4gICAgXHJcbiAgICBjb25zdHJ1Y3RvcihuYW1lKSB7XHJcbiAgICAgICAgc3VwZXIoJ2NhbXBhaWduJylcclxuXHJcbiAgICAgICAgdGhpcy5uYW1lID0gbmFtZVxyXG4gICAgfVxyXG5cclxuICAgIGFkZEFsaWFzKGFsaWFzKSB7XHJcbiAgICAgICAgaWYgKHRoaXMuYWxpYXNlcy5pbmRleE9mKGFsaWFzKSA9PT0gLTEpXHJcbiAgICAgICAgICAgIHRoaXMuYWxpYXNlcy5wdXNoKGFsaWFzKVxyXG4gICAgfVxyXG5cclxuICAgIHRvSlNPTigpIHtcclxuICAgICAgICBpZiAoIXRoaXMubmFtZSlcclxuICAgICAgICAgICAgdGhyb3cgRXJyb3IoYFNUSVggMi4wIHJlcXVpcmVzIGEgY2FtcGFpZ24gbmFtZSFgKVxyXG5cclxuICAgICAgICBsZXQgb3V0cHV0ID0gc3VwZXIudG9KU09OKClcclxuICAgICAgICBvdXRwdXQubmFtZSA9IHRoaXMubmFtZVxyXG5cclxuICAgICAgICBpZiAodGhpcy5kZXNjcmlwdGlvbilcclxuICAgICAgICAgICAgb3V0cHV0LmRlc2NyaXB0aW9uID0gdGhpcy5kZXNjcmlwdGlvblxyXG4gICAgICAgIGlmICh0aGlzLmFsaWFzZXMgJiYgdGhpcy5hbGlhc2VzLmxlbmd0aCA+IDApXHJcbiAgICAgICAgICAgIG91dHB1dC5hbGlhc2VzID0gdGhpcy5hbGlhc2VzXHJcbiAgICAgICAgaWYgKHRoaXMuZmlyc3RTZWVuKVxyXG4gICAgICAgICAgICBvdXRwdXQuZmlyc3Rfc2VlbiA9IHRoaXMuYWxpYXNlc1xyXG4gICAgICAgIGlmICh0aGlzLmxhc3RTZWVuKVxyXG4gICAgICAgICAgICBvdXRwdXQubGFzdF9zZWVuID0gdGhpcy5sYXN0U2VlblxyXG4gICAgICAgIGlmICh0aGlzLm9iamVjdGl2ZSlcclxuICAgICAgICAgICAgb3V0cHV0Lm9iamVjdGl2ZSA9IHRoaXMub2JqZWN0aXZlXHJcblxyXG4gICAgICAgIHJldHVybiBvdXRwdXRcclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgQ2FtcGFpZ24iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "campaign.js"
      ],
      "names": [
        "Campaign",
        "name",
        "alias",
        "aliases",
        "indexOf",
        "push",
        "Error",
        "output",
        "description",
        "length",
        "firstSeen",
        "first_seen",
        "lastSeen",
        "last_seen",
        "objective",
        "BaseObject"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;IAEMA,Q;;;;;AAUF,oBAAYC,IAAZ,EAAkB;AAAA;;AAAA;;AACd,kFAAM,UAAN;;AADc,2DARX,IAQW;;AAAA,kEAPJ,IAOI;;AAAA,8DANR,EAMQ;;AAAA,gEALN,IAKM;;AAAA,+DAJP,IAIO;;AAAA,gEAHN,IAGM;;AAGd,UAAKA,IAAL,GAAYA,IAAZ;AAHc;AAIjB;;;;6BAEQC,K,EAAO;AACZ,UAAI,KAAKC,OAAL,CAAaC,OAAb,CAAqBF,KAArB,MAAgC,CAAC,CAArC,EACI,KAAKC,OAAL,CAAaE,IAAb,CAAkBH,KAAlB;AACP;;;6BAEQ;AACL,UAAI,CAAC,KAAKD,IAAV,EACI,MAAMK,KAAK,sCAAX;;AAEJ,UAAIC,MAAM,uEAAV;;AACAA,MAAAA,MAAM,CAACN,IAAP,GAAc,KAAKA,IAAnB;AAEA,UAAI,KAAKO,WAAT,EACID,MAAM,CAACC,WAAP,GAAqB,KAAKA,WAA1B;AACJ,UAAI,KAAKL,OAAL,IAAgB,KAAKA,OAAL,CAAaM,MAAb,GAAsB,CAA1C,EACIF,MAAM,CAACJ,OAAP,GAAiB,KAAKA,OAAtB;AACJ,UAAI,KAAKO,SAAT,EACIH,MAAM,CAACI,UAAP,GAAoB,KAAKR,OAAzB;AACJ,UAAI,KAAKS,QAAT,EACIL,MAAM,CAACM,SAAP,GAAmB,KAAKD,QAAxB;AACJ,UAAI,KAAKE,SAAT,EACIP,MAAM,CAACO,SAAP,GAAmB,KAAKA,SAAxB;AAEJ,aAAOP,MAAP;AACH;;;;EAxCkBQ,sB;;eA2CRf,Q",
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects",
      "sourcesContent": [
        "import { BaseObject } from \"./baseObject\"\r\n\r\nclass Campaign extends BaseObject {\r\n\r\n    name = null\r\n    description = null\r\n    aliases = []\r\n    firstSeen = null\r\n    lastSeen = null\r\n    objective = null\r\n\r\n    \r\n    constructor(name) {\r\n        super('campaign')\r\n\r\n        this.name = name\r\n    }\r\n\r\n    addAlias(alias) {\r\n        if (this.aliases.indexOf(alias) === -1)\r\n            this.aliases.push(alias)\r\n    }\r\n\r\n    toJSON() {\r\n        if (!this.name)\r\n            throw Error(`STIX 2.0 requires a campaign name!`)\r\n\r\n        let output = super.toJSON()\r\n        output.name = this.name\r\n\r\n        if (this.description)\r\n            output.description = this.description\r\n        if (this.aliases && this.aliases.length > 0)\r\n            output.aliases = this.aliases\r\n        if (this.firstSeen)\r\n            output.first_seen = this.aliases\r\n        if (this.lastSeen)\r\n            output.last_seen = this.lastSeen\r\n        if (this.objective)\r\n            output.objective = this.objective\r\n\r\n        return output\r\n    }\r\n}\r\n\r\nexport default Campaign"
      ]
    },
    "sourceType": "script",
    "mtime": 1565912540312
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\lib\\\\objects\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"filename\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\lib\\\\objects\\\\courseOfAction.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects\\courseOfAction.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects\\courseOfAction.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects\\courseOfAction.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects",
        "sourceFileName": "courseOfAction.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _baseObject = require(\"./baseObject\");\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar CourseOfAction =\n/*#__PURE__*/\nfunction (_BaseObject) {\n  _inherits(CourseOfAction, _BaseObject);\n\n  function CourseOfAction(name) {\n    var _this;\n\n    _classCallCheck(this, CourseOfAction);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CourseOfAction).call(this, 'course-of-action'));\n\n    _defineProperty(_assertThisInitialized(_this), \"name\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"description\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"action\", null);\n\n    _this.name = name;\n    return _this;\n  }\n\n  _createClass(CourseOfAction, [{\n    key: \"toJSON\",\n    value: function toJSON() {\n      if (!this.name) throw Error(\"STIX 2.0 requires a course of action name!\");\n\n      var output = _get(_getPrototypeOf(CourseOfAction.prototype), \"toJSON\", this).call(this);\n\n      output.name = this.name;\n      if (this.description) output.description = this.description; // Yes, we are ignoring action for now\n\n      return output;\n    }\n  }]);\n\n  return CourseOfAction;\n}(_baseObject.BaseObject);\n\nvar _default = CourseOfAction;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvdXJzZU9mQWN0aW9uLmpzIl0sIm5hbWVzIjpbIkNvdXJzZU9mQWN0aW9uIiwibmFtZSIsIkVycm9yIiwib3V0cHV0IiwiZGVzY3JpcHRpb24iLCJCYXNlT2JqZWN0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBRU1BLGM7Ozs7O0FBT0YsMEJBQVlDLElBQVosRUFBa0I7QUFBQTs7QUFBQTs7QUFDZCx3RkFBTSxrQkFBTjs7QUFEYywyREFMWCxJQUtXOztBQUFBLGtFQUpKLElBSUk7O0FBQUEsNkRBSFQsSUFHUzs7QUFHZCxVQUFLQSxJQUFMLEdBQVlBLElBQVo7QUFIYztBQUlqQjs7Ozs2QkFFUTtBQUNMLFVBQUksQ0FBQyxLQUFLQSxJQUFWLEVBQ0ksTUFBTUMsS0FBSyw4Q0FBWDs7QUFFSixVQUFJQyxNQUFNLDZFQUFWOztBQUNBQSxNQUFBQSxNQUFNLENBQUNGLElBQVAsR0FBYyxLQUFLQSxJQUFuQjtBQUVBLFVBQUksS0FBS0csV0FBVCxFQUNJRCxNQUFNLENBQUNDLFdBQVAsR0FBcUIsS0FBS0EsV0FBMUIsQ0FSQyxDQVVMOztBQUVBLGFBQU9ELE1BQVA7QUFDSDs7OztFQTFCd0JFLHNCOztlQTZCZEwsYyIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXFphY2ggU2hhbWVzXFxEb2N1bWVudHNcXERldmVsb3BtZW50XFxqcy0yLXN0aXhcXGxpYlxcb2JqZWN0cyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJhc2VPYmplY3QgfSBmcm9tIFwiLi9iYXNlT2JqZWN0XCJcclxuXHJcbmNsYXNzIENvdXJzZU9mQWN0aW9uIGV4dGVuZHMgQmFzZU9iamVjdCB7XHJcblxyXG4gICAgbmFtZSA9IG51bGxcclxuICAgIGRlc2NyaXB0aW9uID0gbnVsbFxyXG4gICAgYWN0aW9uID0gbnVsbFxyXG5cclxuICAgIFxyXG4gICAgY29uc3RydWN0b3IobmFtZSkge1xyXG4gICAgICAgIHN1cGVyKCdjb3Vyc2Utb2YtYWN0aW9uJylcclxuXHJcbiAgICAgICAgdGhpcy5uYW1lID0gbmFtZVxyXG4gICAgfVxyXG5cclxuICAgIHRvSlNPTigpIHtcclxuICAgICAgICBpZiAoIXRoaXMubmFtZSlcclxuICAgICAgICAgICAgdGhyb3cgRXJyb3IoYFNUSVggMi4wIHJlcXVpcmVzIGEgY291cnNlIG9mIGFjdGlvbiBuYW1lIWApXHJcblxyXG4gICAgICAgIGxldCBvdXRwdXQgPSBzdXBlci50b0pTT04oKVxyXG4gICAgICAgIG91dHB1dC5uYW1lID0gdGhpcy5uYW1lXHJcblxyXG4gICAgICAgIGlmICh0aGlzLmRlc2NyaXB0aW9uKVxyXG4gICAgICAgICAgICBvdXRwdXQuZGVzY3JpcHRpb24gPSB0aGlzLmRlc2NyaXB0aW9uXHJcblxyXG4gICAgICAgIC8vIFllcywgd2UgYXJlIGlnbm9yaW5nIGFjdGlvbiBmb3Igbm93XHJcblxyXG4gICAgICAgIHJldHVybiBvdXRwdXRcclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgQ291cnNlT2ZBY3Rpb24iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "courseOfAction.js"
      ],
      "names": [
        "CourseOfAction",
        "name",
        "Error",
        "output",
        "description",
        "BaseObject"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;IAEMA,c;;;;;AAOF,0BAAYC,IAAZ,EAAkB;AAAA;;AAAA;;AACd,wFAAM,kBAAN;;AADc,2DALX,IAKW;;AAAA,kEAJJ,IAII;;AAAA,6DAHT,IAGS;;AAGd,UAAKA,IAAL,GAAYA,IAAZ;AAHc;AAIjB;;;;6BAEQ;AACL,UAAI,CAAC,KAAKA,IAAV,EACI,MAAMC,KAAK,8CAAX;;AAEJ,UAAIC,MAAM,6EAAV;;AACAA,MAAAA,MAAM,CAACF,IAAP,GAAc,KAAKA,IAAnB;AAEA,UAAI,KAAKG,WAAT,EACID,MAAM,CAACC,WAAP,GAAqB,KAAKA,WAA1B,CARC,CAUL;;AAEA,aAAOD,MAAP;AACH;;;;EA1BwBE,sB;;eA6BdL,c",
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects",
      "sourcesContent": [
        "import { BaseObject } from \"./baseObject\"\r\n\r\nclass CourseOfAction extends BaseObject {\r\n\r\n    name = null\r\n    description = null\r\n    action = null\r\n\r\n    \r\n    constructor(name) {\r\n        super('course-of-action')\r\n\r\n        this.name = name\r\n    }\r\n\r\n    toJSON() {\r\n        if (!this.name)\r\n            throw Error(`STIX 2.0 requires a course of action name!`)\r\n\r\n        let output = super.toJSON()\r\n        output.name = this.name\r\n\r\n        if (this.description)\r\n            output.description = this.description\r\n\r\n        // Yes, we are ignoring action for now\r\n\r\n        return output\r\n    }\r\n}\r\n\r\nexport default CourseOfAction"
      ]
    },
    "sourceType": "script",
    "mtime": 1565908275849
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\lib\\\\objects\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"filename\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\lib\\\\objects\\\\indicator.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects\\indicator.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects\\indicator.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects\\indicator.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects",
        "sourceFileName": "indicator.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _baseObject = require(\"./baseObject\");\n\nvar _vocabulary = require(\"../definitions/vocabulary\");\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar Indicator =\n/*#__PURE__*/\nfunction (_BaseObject) {\n  _inherits(Indicator, _BaseObject);\n\n  function Indicator() {\n    var _this;\n\n    _classCallCheck(this, Indicator);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Indicator).call(this, 'indicator'));\n\n    _defineProperty(_assertThisInitialized(_this), \"name\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"description\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"pattern\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"validFrom\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"validUntil\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"killChainPhases\", []);\n\n    return _this;\n  }\n\n  _createClass(Indicator, [{\n    key: \"addKillChainPhase\",\n    value: function addKillChainPhase(phase) {\n      if (!(phase instanceof KillChainPhase)) throw Error('You can only add a kill chain phase of the KillChainPhase type!');\n      this.killChainPhases.push(phase);\n    }\n  }, {\n    key: \"addLabel\",\n    value: function addLabel(label) {\n      if (Object.values(_vocabulary.IndicatorLabels).indexOf(label.toLowerCase()) === -1) throw Error(\"Invalid indicator label! Must be one of the following: \".concat(Array(Object.values(_vocabulary.IndicatorLabels)).join(', ')));\n      this.labels.push(label.toLowerCase());\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      if (!this.labels) throw Error(\"STIX 2.0 requires indicator labels!\");\n      if (!this.pattern) throw Error(\"STIX 2.0 requires an indicator pattern!\");\n      if (!this.validFrom) throw Error(\"STIX 2.0 requires a valid from timestamp!\");\n\n      var output = _get(_getPrototypeOf(Indicator.prototype), \"toJSON\", this).call(this);\n\n      output.labels = this.labels;\n      output.pattern = this.pattern;\n      output.valid_from = this.validFrom;\n      if (this.description) output.description = this.description;\n      if (this.name) output.name = this.name;\n      if (this.validUntil) output.valid_until = this.validUntil;\n\n      if (this.killChainPhases && this.killChainPhases.length > 0) {\n        var killChainPhases = [];\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = this.killChainPhases[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var i = _step.value;\n            killChainPhases.push(i.toJSON());\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n              _iterator[\"return\"]();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n\n        output.kill_chain_phases = killChainPhases;\n      }\n\n      return output;\n    }\n  }]);\n\n  return Indicator;\n}(_baseObject.BaseObject);\n\nvar _default = Indicator;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGljYXRvci5qcyJdLCJuYW1lcyI6WyJJbmRpY2F0b3IiLCJwaGFzZSIsIktpbGxDaGFpblBoYXNlIiwiRXJyb3IiLCJraWxsQ2hhaW5QaGFzZXMiLCJwdXNoIiwibGFiZWwiLCJPYmplY3QiLCJ2YWx1ZXMiLCJJbmRpY2F0b3JMYWJlbHMiLCJpbmRleE9mIiwidG9Mb3dlckNhc2UiLCJBcnJheSIsImpvaW4iLCJsYWJlbHMiLCJwYXR0ZXJuIiwidmFsaWRGcm9tIiwib3V0cHV0IiwidmFsaWRfZnJvbSIsImRlc2NyaXB0aW9uIiwibmFtZSIsInZhbGlkVW50aWwiLCJ2YWxpZF91bnRpbCIsImxlbmd0aCIsImkiLCJ0b0pTT04iLCJraWxsX2NoYWluX3BoYXNlcyIsIkJhc2VPYmplY3QiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFFTUEsUzs7Ozs7QUFVRix1QkFBYztBQUFBOztBQUFBOztBQUNWLG1GQUFNLFdBQU47O0FBRFUsMkRBUlAsSUFRTzs7QUFBQSxrRUFQQSxJQU9BOztBQUFBLDhEQU5KLElBTUk7O0FBQUEsZ0VBTEYsSUFLRTs7QUFBQSxpRUFKRCxJQUlDOztBQUFBLHNFQUhJLEVBR0o7O0FBQUE7QUFFYjs7OztzQ0FFaUJDLEssRUFBTztBQUNyQixVQUFJLEVBQUVBLEtBQUssWUFBWUMsY0FBbkIsQ0FBSixFQUNJLE1BQU1DLEtBQUssQ0FBQyxpRUFBRCxDQUFYO0FBRUosV0FBS0MsZUFBTCxDQUFxQkMsSUFBckIsQ0FBMEJKLEtBQTFCO0FBQ0g7Ozs2QkFFUUssSyxFQUFPO0FBQ1osVUFBSUMsTUFBTSxDQUFDQyxNQUFQLENBQWNDLDJCQUFkLEVBQStCQyxPQUEvQixDQUF1Q0osS0FBSyxDQUFDSyxXQUFOLEVBQXZDLE1BQWdFLENBQUMsQ0FBckUsRUFDSSxNQUFNUixLQUFLLGtFQUEyRFMsS0FBSyxDQUFDTCxNQUFNLENBQUNDLE1BQVAsQ0FBY0MsMkJBQWQsQ0FBRCxDQUFMLENBQXNDSSxJQUF0QyxDQUEyQyxJQUEzQyxDQUEzRCxFQUFYO0FBRUosV0FBS0MsTUFBTCxDQUFZVCxJQUFaLENBQWlCQyxLQUFLLENBQUNLLFdBQU4sRUFBakI7QUFDSDs7OzZCQUVRO0FBQ0wsVUFBSSxDQUFDLEtBQUtHLE1BQVYsRUFDSSxNQUFNWCxLQUFLLHVDQUFYO0FBQ0osVUFBSSxDQUFDLEtBQUtZLE9BQVYsRUFDSSxNQUFNWixLQUFLLDJDQUFYO0FBQ0osVUFBSSxDQUFDLEtBQUthLFNBQVYsRUFDSSxNQUFNYixLQUFLLDZDQUFYOztBQUVKLFVBQUljLE1BQU0sd0VBQVY7O0FBQ0FBLE1BQUFBLE1BQU0sQ0FBQ0gsTUFBUCxHQUFnQixLQUFLQSxNQUFyQjtBQUNBRyxNQUFBQSxNQUFNLENBQUNGLE9BQVAsR0FBaUIsS0FBS0EsT0FBdEI7QUFDQUUsTUFBQUEsTUFBTSxDQUFDQyxVQUFQLEdBQW9CLEtBQUtGLFNBQXpCO0FBRUEsVUFBSSxLQUFLRyxXQUFULEVBQ0lGLE1BQU0sQ0FBQ0UsV0FBUCxHQUFxQixLQUFLQSxXQUExQjtBQUNKLFVBQUksS0FBS0MsSUFBVCxFQUNJSCxNQUFNLENBQUNHLElBQVAsR0FBYyxLQUFLQSxJQUFuQjtBQUNKLFVBQUksS0FBS0MsVUFBVCxFQUNJSixNQUFNLENBQUNLLFdBQVAsR0FBcUIsS0FBS0QsVUFBMUI7O0FBRUosVUFBSSxLQUFLakIsZUFBTCxJQUF3QixLQUFLQSxlQUFMLENBQXFCbUIsTUFBckIsR0FBOEIsQ0FBMUQsRUFBNkQ7QUFDekQsWUFBSW5CLGVBQWUsR0FBRyxFQUF0QjtBQUR5RDtBQUFBO0FBQUE7O0FBQUE7QUFFekQsK0JBQWMsS0FBS0EsZUFBbkI7QUFBQSxnQkFBU29CLENBQVQ7QUFDSXBCLFlBQUFBLGVBQWUsQ0FBQ0MsSUFBaEIsQ0FBcUJtQixDQUFDLENBQUNDLE1BQUYsRUFBckI7QUFESjtBQUZ5RDtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBOztBQUl6RFIsUUFBQUEsTUFBTSxDQUFDUyxpQkFBUCxHQUEyQnRCLGVBQTNCO0FBQ0g7O0FBRUQsYUFBT2EsTUFBUDtBQUNIOzs7O0VBeERtQlUsc0I7O2VBMkRUM0IsUyIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXFphY2ggU2hhbWVzXFxEb2N1bWVudHNcXERldmVsb3BtZW50XFxqcy0yLXN0aXhcXGxpYlxcb2JqZWN0cyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJhc2VPYmplY3QgfSBmcm9tIFwiLi9iYXNlT2JqZWN0XCJcclxuaW1wb3J0IHsgSW5kaWNhdG9yTGFiZWxzIH0gZnJvbSAnLi4vZGVmaW5pdGlvbnMvdm9jYWJ1bGFyeSdcclxuXHJcbmNsYXNzIEluZGljYXRvciBleHRlbmRzIEJhc2VPYmplY3Qge1xyXG5cclxuICAgIG5hbWUgPSBudWxsXHJcbiAgICBkZXNjcmlwdGlvbiA9IG51bGxcclxuICAgIHBhdHRlcm4gPSBudWxsXHJcbiAgICB2YWxpZEZyb20gPSBudWxsXHJcbiAgICB2YWxpZFVudGlsID0gbnVsbFxyXG4gICAga2lsbENoYWluUGhhc2VzID0gW11cclxuXHJcbiAgICBcclxuICAgIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgICAgIHN1cGVyKCdpbmRpY2F0b3InKVxyXG4gICAgfVxyXG5cclxuICAgIGFkZEtpbGxDaGFpblBoYXNlKHBoYXNlKSB7XHJcbiAgICAgICAgaWYgKCEocGhhc2UgaW5zdGFuY2VvZiBLaWxsQ2hhaW5QaGFzZSkpXHJcbiAgICAgICAgICAgIHRocm93IEVycm9yKCdZb3UgY2FuIG9ubHkgYWRkIGEga2lsbCBjaGFpbiBwaGFzZSBvZiB0aGUgS2lsbENoYWluUGhhc2UgdHlwZSEnKVxyXG4gICAgICAgICAgICBcclxuICAgICAgICB0aGlzLmtpbGxDaGFpblBoYXNlcy5wdXNoKHBoYXNlKVxyXG4gICAgfVxyXG5cclxuICAgIGFkZExhYmVsKGxhYmVsKSB7XHJcbiAgICAgICAgaWYgKE9iamVjdC52YWx1ZXMoSW5kaWNhdG9yTGFiZWxzKS5pbmRleE9mKGxhYmVsLnRvTG93ZXJDYXNlKCkpID09PSAtMSlcclxuICAgICAgICAgICAgdGhyb3cgRXJyb3IoYEludmFsaWQgaW5kaWNhdG9yIGxhYmVsISBNdXN0IGJlIG9uZSBvZiB0aGUgZm9sbG93aW5nOiAke0FycmF5KE9iamVjdC52YWx1ZXMoSW5kaWNhdG9yTGFiZWxzKSkuam9pbignLCAnKX1gKVxyXG5cclxuICAgICAgICB0aGlzLmxhYmVscy5wdXNoKGxhYmVsLnRvTG93ZXJDYXNlKCkpXHJcbiAgICB9XHJcblxyXG4gICAgdG9KU09OKCkge1xyXG4gICAgICAgIGlmICghdGhpcy5sYWJlbHMpXHJcbiAgICAgICAgICAgIHRocm93IEVycm9yKGBTVElYIDIuMCByZXF1aXJlcyBpbmRpY2F0b3IgbGFiZWxzIWApXHJcbiAgICAgICAgaWYgKCF0aGlzLnBhdHRlcm4pXHJcbiAgICAgICAgICAgIHRocm93IEVycm9yKGBTVElYIDIuMCByZXF1aXJlcyBhbiBpbmRpY2F0b3IgcGF0dGVybiFgKVxyXG4gICAgICAgIGlmICghdGhpcy52YWxpZEZyb20pXHJcbiAgICAgICAgICAgIHRocm93IEVycm9yKGBTVElYIDIuMCByZXF1aXJlcyBhIHZhbGlkIGZyb20gdGltZXN0YW1wIWApXHJcblxyXG4gICAgICAgIGxldCBvdXRwdXQgPSBzdXBlci50b0pTT04oKVxyXG4gICAgICAgIG91dHB1dC5sYWJlbHMgPSB0aGlzLmxhYmVsc1xyXG4gICAgICAgIG91dHB1dC5wYXR0ZXJuID0gdGhpcy5wYXR0ZXJuXHJcbiAgICAgICAgb3V0cHV0LnZhbGlkX2Zyb20gPSB0aGlzLnZhbGlkRnJvbVxyXG5cclxuICAgICAgICBpZiAodGhpcy5kZXNjcmlwdGlvbilcclxuICAgICAgICAgICAgb3V0cHV0LmRlc2NyaXB0aW9uID0gdGhpcy5kZXNjcmlwdGlvblxyXG4gICAgICAgIGlmICh0aGlzLm5hbWUpXHJcbiAgICAgICAgICAgIG91dHB1dC5uYW1lID0gdGhpcy5uYW1lXHJcbiAgICAgICAgaWYgKHRoaXMudmFsaWRVbnRpbClcclxuICAgICAgICAgICAgb3V0cHV0LnZhbGlkX3VudGlsID0gdGhpcy52YWxpZFVudGlsXHJcbiAgICAgICAgXHJcbiAgICAgICAgaWYgKHRoaXMua2lsbENoYWluUGhhc2VzICYmIHRoaXMua2lsbENoYWluUGhhc2VzLmxlbmd0aCA+IDApIHtcclxuICAgICAgICAgICAgbGV0IGtpbGxDaGFpblBoYXNlcyA9IFtdXHJcbiAgICAgICAgICAgIGZvciAobGV0IGkgb2YgdGhpcy5raWxsQ2hhaW5QaGFzZXMpXHJcbiAgICAgICAgICAgICAgICBraWxsQ2hhaW5QaGFzZXMucHVzaChpLnRvSlNPTigpKVxyXG4gICAgICAgICAgICBvdXRwdXQua2lsbF9jaGFpbl9waGFzZXMgPSBraWxsQ2hhaW5QaGFzZXNcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHJldHVybiBvdXRwdXRcclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgSW5kaWNhdG9yIl19",
    "map": {
      "version": 3,
      "sources": [
        "indicator.js"
      ],
      "names": [
        "Indicator",
        "phase",
        "KillChainPhase",
        "Error",
        "killChainPhases",
        "push",
        "label",
        "Object",
        "values",
        "IndicatorLabels",
        "indexOf",
        "toLowerCase",
        "Array",
        "join",
        "labels",
        "pattern",
        "validFrom",
        "output",
        "valid_from",
        "description",
        "name",
        "validUntil",
        "valid_until",
        "length",
        "i",
        "toJSON",
        "kill_chain_phases",
        "BaseObject"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;IAEMA,S;;;;;AAUF,uBAAc;AAAA;;AAAA;;AACV,mFAAM,WAAN;;AADU,2DARP,IAQO;;AAAA,kEAPA,IAOA;;AAAA,8DANJ,IAMI;;AAAA,gEALF,IAKE;;AAAA,iEAJD,IAIC;;AAAA,sEAHI,EAGJ;;AAAA;AAEb;;;;sCAEiBC,K,EAAO;AACrB,UAAI,EAAEA,KAAK,YAAYC,cAAnB,CAAJ,EACI,MAAMC,KAAK,CAAC,iEAAD,CAAX;AAEJ,WAAKC,eAAL,CAAqBC,IAArB,CAA0BJ,KAA1B;AACH;;;6BAEQK,K,EAAO;AACZ,UAAIC,MAAM,CAACC,MAAP,CAAcC,2BAAd,EAA+BC,OAA/B,CAAuCJ,KAAK,CAACK,WAAN,EAAvC,MAAgE,CAAC,CAArE,EACI,MAAMR,KAAK,kEAA2DS,KAAK,CAACL,MAAM,CAACC,MAAP,CAAcC,2BAAd,CAAD,CAAL,CAAsCI,IAAtC,CAA2C,IAA3C,CAA3D,EAAX;AAEJ,WAAKC,MAAL,CAAYT,IAAZ,CAAiBC,KAAK,CAACK,WAAN,EAAjB;AACH;;;6BAEQ;AACL,UAAI,CAAC,KAAKG,MAAV,EACI,MAAMX,KAAK,uCAAX;AACJ,UAAI,CAAC,KAAKY,OAAV,EACI,MAAMZ,KAAK,2CAAX;AACJ,UAAI,CAAC,KAAKa,SAAV,EACI,MAAMb,KAAK,6CAAX;;AAEJ,UAAIc,MAAM,wEAAV;;AACAA,MAAAA,MAAM,CAACH,MAAP,GAAgB,KAAKA,MAArB;AACAG,MAAAA,MAAM,CAACF,OAAP,GAAiB,KAAKA,OAAtB;AACAE,MAAAA,MAAM,CAACC,UAAP,GAAoB,KAAKF,SAAzB;AAEA,UAAI,KAAKG,WAAT,EACIF,MAAM,CAACE,WAAP,GAAqB,KAAKA,WAA1B;AACJ,UAAI,KAAKC,IAAT,EACIH,MAAM,CAACG,IAAP,GAAc,KAAKA,IAAnB;AACJ,UAAI,KAAKC,UAAT,EACIJ,MAAM,CAACK,WAAP,GAAqB,KAAKD,UAA1B;;AAEJ,UAAI,KAAKjB,eAAL,IAAwB,KAAKA,eAAL,CAAqBmB,MAArB,GAA8B,CAA1D,EAA6D;AACzD,YAAInB,eAAe,GAAG,EAAtB;AADyD;AAAA;AAAA;;AAAA;AAEzD,+BAAc,KAAKA,eAAnB;AAAA,gBAASoB,CAAT;AACIpB,YAAAA,eAAe,CAACC,IAAhB,CAAqBmB,CAAC,CAACC,MAAF,EAArB;AADJ;AAFyD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIzDR,QAAAA,MAAM,CAACS,iBAAP,GAA2BtB,eAA3B;AACH;;AAED,aAAOa,MAAP;AACH;;;;EAxDmBU,sB;;eA2DT3B,S",
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects",
      "sourcesContent": [
        "import { BaseObject } from \"./baseObject\"\r\nimport { IndicatorLabels } from '../definitions/vocabulary'\r\n\r\nclass Indicator extends BaseObject {\r\n\r\n    name = null\r\n    description = null\r\n    pattern = null\r\n    validFrom = null\r\n    validUntil = null\r\n    killChainPhases = []\r\n\r\n    \r\n    constructor() {\r\n        super('indicator')\r\n    }\r\n\r\n    addKillChainPhase(phase) {\r\n        if (!(phase instanceof KillChainPhase))\r\n            throw Error('You can only add a kill chain phase of the KillChainPhase type!')\r\n            \r\n        this.killChainPhases.push(phase)\r\n    }\r\n\r\n    addLabel(label) {\r\n        if (Object.values(IndicatorLabels).indexOf(label.toLowerCase()) === -1)\r\n            throw Error(`Invalid indicator label! Must be one of the following: ${Array(Object.values(IndicatorLabels)).join(', ')}`)\r\n\r\n        this.labels.push(label.toLowerCase())\r\n    }\r\n\r\n    toJSON() {\r\n        if (!this.labels)\r\n            throw Error(`STIX 2.0 requires indicator labels!`)\r\n        if (!this.pattern)\r\n            throw Error(`STIX 2.0 requires an indicator pattern!`)\r\n        if (!this.validFrom)\r\n            throw Error(`STIX 2.0 requires a valid from timestamp!`)\r\n\r\n        let output = super.toJSON()\r\n        output.labels = this.labels\r\n        output.pattern = this.pattern\r\n        output.valid_from = this.validFrom\r\n\r\n        if (this.description)\r\n            output.description = this.description\r\n        if (this.name)\r\n            output.name = this.name\r\n        if (this.validUntil)\r\n            output.valid_until = this.validUntil\r\n        \r\n        if (this.killChainPhases && this.killChainPhases.length > 0) {\r\n            let killChainPhases = []\r\n            for (let i of this.killChainPhases)\r\n                killChainPhases.push(i.toJSON())\r\n            output.kill_chain_phases = killChainPhases\r\n        }\r\n\r\n        return output\r\n    }\r\n}\r\n\r\nexport default Indicator"
      ]
    },
    "sourceType": "script",
    "mtime": 1565912494846
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\lib\\\\objects\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"filename\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\lib\\\\objects\\\\intrusionSet.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects\\intrusionSet.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects\\intrusionSet.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects\\intrusionSet.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects",
        "sourceFileName": "intrusionSet.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _baseObject = require(\"./baseObject\");\n\nvar _vocabulary = require(\"../definitions/vocabulary\");\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar IntrusionSet =\n/*#__PURE__*/\nfunction (_BaseObject) {\n  _inherits(IntrusionSet, _BaseObject);\n\n  function IntrusionSet(name) {\n    var _this;\n\n    _classCallCheck(this, IntrusionSet);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(IntrusionSet).call(this, 'intrusion-set'));\n\n    _defineProperty(_assertThisInitialized(_this), \"name\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"description\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"aliases\", []);\n\n    _defineProperty(_assertThisInitialized(_this), \"firstSeen\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"lastSeen\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"goals\", []);\n\n    _defineProperty(_assertThisInitialized(_this), \"resourceLevel\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"primaryMotivation\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"secondaryMotivations\", null);\n\n    _this.name = name;\n    return _this;\n  }\n\n  _createClass(IntrusionSet, [{\n    key: \"setResourceLevel\",\n    value: function setResourceLevel(level) {\n      if (Object.values(_vocabulary.AttackResourceLevels).indexOf(level.toLowerCase()) === -1) throw Error(\"Invalid resource level! Must be one of the following: \".concat(Array(Object.values(_vocabulary.AttackResourceLevels)).join(', ')));\n      this.resourceLevel = level.toLowerCase();\n    }\n  }, {\n    key: \"addAlias\",\n    value: function addAlias(alias) {\n      if (this.aliases.indexOf(alias.toLowerCase()) === -1) this.aliases.push(alias);\n    }\n  }, {\n    key: \"addPrimaryMotivation\",\n    value: function addPrimaryMotivation(motivation) {\n      if (Object.values(_vocabulary.AttackMotivations).indexOf(motivation.toLowerCase()) === -1) throw Error(\"Invalid motivation! Must be one of the following: \".concat(Array(Object.values(_vocabulary.AttackMotivations)).join(', ')));\n      this.primaryMotivation = motivation.toLowerCase();\n    }\n  }, {\n    key: \"addSecondaryMotivation\",\n    value: function addSecondaryMotivation(motivation) {\n      if (Object.values(_vocabulary.AttackMotivations).indexOf(motivation.toLowerCase()) === -1) throw Error(\"Invalid motivation! Must be one of the following: \".concat(Array(Object.values(_vocabulary.AttackMotivations)).join(', ')));\n      if (this.primaryMotivation !== motivation && this.secondaryMotivations.indexOf(motivation.toLowerCase()) === -1) this.secondaryMotivations.push(motivation.toLowerCase());\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      if (!this.name) throw Error(\"STIX 2.0 requires an intrusion set name!\");\n\n      var output = _get(_getPrototypeOf(IntrusionSet.prototype), \"toJSON\", this).call(this);\n\n      output.name = this.name;\n      if (this.description) output.description = this.description;\n      if (this.aliases) output.aliases = this.aliases;\n      if (this.firstSeen) output.first_seen = this.firstSeen;\n      if (this.lastSeen) output.last_seen = this.lastSeen;\n      if (this.goals) output.goals = this.goals;\n      if (this.resourceLevel) output.resource_level = this.resourceLevel;\n      if (this.primaryMotivation) output.primary_motivation = this.primaryMotivation;\n      if (this.secondaryMotivations && this.secondaryMotivations.length > 0) output.secondary_motivations = this.secondaryMotivations;\n      return output;\n    }\n  }]);\n\n  return IntrusionSet;\n}(_baseObject.BaseObject);\n\nvar _default = IntrusionSet;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImludHJ1c2lvblNldC5qcyJdLCJuYW1lcyI6WyJJbnRydXNpb25TZXQiLCJuYW1lIiwibGV2ZWwiLCJPYmplY3QiLCJ2YWx1ZXMiLCJBdHRhY2tSZXNvdXJjZUxldmVscyIsImluZGV4T2YiLCJ0b0xvd2VyQ2FzZSIsIkVycm9yIiwiQXJyYXkiLCJqb2luIiwicmVzb3VyY2VMZXZlbCIsImFsaWFzIiwiYWxpYXNlcyIsInB1c2giLCJtb3RpdmF0aW9uIiwiQXR0YWNrTW90aXZhdGlvbnMiLCJwcmltYXJ5TW90aXZhdGlvbiIsInNlY29uZGFyeU1vdGl2YXRpb25zIiwib3V0cHV0IiwiZGVzY3JpcHRpb24iLCJmaXJzdFNlZW4iLCJmaXJzdF9zZWVuIiwibGFzdFNlZW4iLCJsYXN0X3NlZW4iLCJnb2FscyIsInJlc291cmNlX2xldmVsIiwicHJpbWFyeV9tb3RpdmF0aW9uIiwibGVuZ3RoIiwic2Vjb25kYXJ5X21vdGl2YXRpb25zIiwiQmFzZU9iamVjdCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQUVNQSxZOzs7OztBQVlGLHdCQUFZQyxJQUFaLEVBQWtCO0FBQUE7O0FBQUE7O0FBQ2Qsc0ZBQU0sZUFBTjs7QUFEYywyREFWWCxJQVVXOztBQUFBLGtFQVRKLElBU0k7O0FBQUEsOERBUlIsRUFRUTs7QUFBQSxnRUFQTixJQU9NOztBQUFBLCtEQU5QLElBTU87O0FBQUEsNERBTFYsRUFLVTs7QUFBQSxvRUFKRixJQUlFOztBQUFBLHdFQUhFLElBR0Y7O0FBQUEsMkVBRkssSUFFTDs7QUFHZCxVQUFLQSxJQUFMLEdBQVlBLElBQVo7QUFIYztBQUlqQjs7OztxQ0FFZ0JDLEssRUFBTztBQUNwQixVQUFJQyxNQUFNLENBQUNDLE1BQVAsQ0FBY0MsZ0NBQWQsRUFBb0NDLE9BQXBDLENBQTRDSixLQUFLLENBQUNLLFdBQU4sRUFBNUMsTUFBcUUsQ0FBQyxDQUExRSxFQUNJLE1BQU1DLEtBQUssaUVBQTBEQyxLQUFLLENBQUNOLE1BQU0sQ0FBQ0MsTUFBUCxDQUFjQyxnQ0FBZCxDQUFELENBQUwsQ0FBMkNLLElBQTNDLENBQWdELElBQWhELENBQTFELEVBQVg7QUFFSixXQUFLQyxhQUFMLEdBQXFCVCxLQUFLLENBQUNLLFdBQU4sRUFBckI7QUFDSDs7OzZCQUVRSyxLLEVBQU87QUFDWixVQUFJLEtBQUtDLE9BQUwsQ0FBYVAsT0FBYixDQUFxQk0sS0FBSyxDQUFDTCxXQUFOLEVBQXJCLE1BQThDLENBQUMsQ0FBbkQsRUFDSSxLQUFLTSxPQUFMLENBQWFDLElBQWIsQ0FBa0JGLEtBQWxCO0FBQ1A7Ozt5Q0FFb0JHLFUsRUFBWTtBQUM3QixVQUFJWixNQUFNLENBQUNDLE1BQVAsQ0FBY1ksNkJBQWQsRUFBaUNWLE9BQWpDLENBQXlDUyxVQUFVLENBQUNSLFdBQVgsRUFBekMsTUFBdUUsQ0FBQyxDQUE1RSxFQUNJLE1BQU1DLEtBQUssNkRBQXNEQyxLQUFLLENBQUNOLE1BQU0sQ0FBQ0MsTUFBUCxDQUFjWSw2QkFBZCxDQUFELENBQUwsQ0FBd0NOLElBQXhDLENBQTZDLElBQTdDLENBQXRELEVBQVg7QUFFSixXQUFLTyxpQkFBTCxHQUF5QkYsVUFBVSxDQUFDUixXQUFYLEVBQXpCO0FBQ0g7OzsyQ0FFc0JRLFUsRUFBWTtBQUMvQixVQUFJWixNQUFNLENBQUNDLE1BQVAsQ0FBY1ksNkJBQWQsRUFBaUNWLE9BQWpDLENBQXlDUyxVQUFVLENBQUNSLFdBQVgsRUFBekMsTUFBdUUsQ0FBQyxDQUE1RSxFQUNJLE1BQU1DLEtBQUssNkRBQXNEQyxLQUFLLENBQUNOLE1BQU0sQ0FBQ0MsTUFBUCxDQUFjWSw2QkFBZCxDQUFELENBQUwsQ0FBd0NOLElBQXhDLENBQTZDLElBQTdDLENBQXRELEVBQVg7QUFFSixVQUFJLEtBQUtPLGlCQUFMLEtBQTJCRixVQUEzQixJQUF5QyxLQUFLRyxvQkFBTCxDQUEwQlosT0FBMUIsQ0FBa0NTLFVBQVUsQ0FBQ1IsV0FBWCxFQUFsQyxNQUFnRSxDQUFDLENBQTlHLEVBQ0ksS0FBS1csb0JBQUwsQ0FBMEJKLElBQTFCLENBQStCQyxVQUFVLENBQUNSLFdBQVgsRUFBL0I7QUFDUDs7OzZCQUVRO0FBQ0wsVUFBSSxDQUFDLEtBQUtOLElBQVYsRUFDSSxNQUFNTyxLQUFLLDRDQUFYOztBQUVKLFVBQUlXLE1BQU0sMkVBQVY7O0FBQ0FBLE1BQUFBLE1BQU0sQ0FBQ2xCLElBQVAsR0FBYyxLQUFLQSxJQUFuQjtBQUVBLFVBQUksS0FBS21CLFdBQVQsRUFDSUQsTUFBTSxDQUFDQyxXQUFQLEdBQXFCLEtBQUtBLFdBQTFCO0FBQ0osVUFBSSxLQUFLUCxPQUFULEVBQ0lNLE1BQU0sQ0FBQ04sT0FBUCxHQUFpQixLQUFLQSxPQUF0QjtBQUNKLFVBQUksS0FBS1EsU0FBVCxFQUNJRixNQUFNLENBQUNHLFVBQVAsR0FBb0IsS0FBS0QsU0FBekI7QUFDSixVQUFJLEtBQUtFLFFBQVQsRUFDSUosTUFBTSxDQUFDSyxTQUFQLEdBQW1CLEtBQUtELFFBQXhCO0FBQ0osVUFBSSxLQUFLRSxLQUFULEVBQ0lOLE1BQU0sQ0FBQ00sS0FBUCxHQUFlLEtBQUtBLEtBQXBCO0FBQ0osVUFBSSxLQUFLZCxhQUFULEVBQ0lRLE1BQU0sQ0FBQ08sY0FBUCxHQUF3QixLQUFLZixhQUE3QjtBQUNKLFVBQUksS0FBS00saUJBQVQsRUFDSUUsTUFBTSxDQUFDUSxrQkFBUCxHQUE0QixLQUFLVixpQkFBakM7QUFDSixVQUFJLEtBQUtDLG9CQUFMLElBQTZCLEtBQUtBLG9CQUFMLENBQTBCVSxNQUExQixHQUFtQyxDQUFwRSxFQUNJVCxNQUFNLENBQUNVLHFCQUFQLEdBQStCLEtBQUtYLG9CQUFwQztBQUVKLGFBQU9DLE1BQVA7QUFDSDs7OztFQXRFc0JXLHNCOztlQXlFWjlCLFkiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxaYWNoIFNoYW1lc1xcRG9jdW1lbnRzXFxEZXZlbG9wbWVudFxcanMtMi1zdGl4XFxsaWJcXG9iamVjdHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCYXNlT2JqZWN0IH0gZnJvbSBcIi4vYmFzZU9iamVjdFwiXHJcbmltcG9ydCB7IEF0dGFja01vdGl2YXRpb25zLCBBdHRhY2tSZXNvdXJjZUxldmVscyB9IGZyb20gJy4uL2RlZmluaXRpb25zL3ZvY2FidWxhcnknXHJcblxyXG5jbGFzcyBJbnRydXNpb25TZXQgZXh0ZW5kcyBCYXNlT2JqZWN0IHtcclxuXHJcbiAgICBuYW1lID0gbnVsbFxyXG4gICAgZGVzY3JpcHRpb24gPSBudWxsXHJcbiAgICBhbGlhc2VzID0gW11cclxuICAgIGZpcnN0U2VlbiA9IG51bGxcclxuICAgIGxhc3RTZWVuID0gbnVsbFxyXG4gICAgZ29hbHMgPSBbXVxyXG4gICAgcmVzb3VyY2VMZXZlbCA9IG51bGxcclxuICAgIHByaW1hcnlNb3RpdmF0aW9uID0gbnVsbFxyXG4gICAgc2Vjb25kYXJ5TW90aXZhdGlvbnMgPSBudWxsXHJcbiAgICBcclxuICAgIGNvbnN0cnVjdG9yKG5hbWUpIHtcclxuICAgICAgICBzdXBlcignaW50cnVzaW9uLXNldCcpXHJcblxyXG4gICAgICAgIHRoaXMubmFtZSA9IG5hbWVcclxuICAgIH1cclxuXHJcbiAgICBzZXRSZXNvdXJjZUxldmVsKGxldmVsKSB7XHJcbiAgICAgICAgaWYgKE9iamVjdC52YWx1ZXMoQXR0YWNrUmVzb3VyY2VMZXZlbHMpLmluZGV4T2YobGV2ZWwudG9Mb3dlckNhc2UoKSkgPT09IC0xKVxyXG4gICAgICAgICAgICB0aHJvdyBFcnJvcihgSW52YWxpZCByZXNvdXJjZSBsZXZlbCEgTXVzdCBiZSBvbmUgb2YgdGhlIGZvbGxvd2luZzogJHtBcnJheShPYmplY3QudmFsdWVzKEF0dGFja1Jlc291cmNlTGV2ZWxzKSkuam9pbignLCAnKX1gKVxyXG5cclxuICAgICAgICB0aGlzLnJlc291cmNlTGV2ZWwgPSBsZXZlbC50b0xvd2VyQ2FzZSgpXHJcbiAgICB9XHJcblxyXG4gICAgYWRkQWxpYXMoYWxpYXMpIHtcclxuICAgICAgICBpZiAodGhpcy5hbGlhc2VzLmluZGV4T2YoYWxpYXMudG9Mb3dlckNhc2UoKSkgPT09IC0xKVxyXG4gICAgICAgICAgICB0aGlzLmFsaWFzZXMucHVzaChhbGlhcylcclxuICAgIH1cclxuXHJcbiAgICBhZGRQcmltYXJ5TW90aXZhdGlvbihtb3RpdmF0aW9uKSB7XHJcbiAgICAgICAgaWYgKE9iamVjdC52YWx1ZXMoQXR0YWNrTW90aXZhdGlvbnMpLmluZGV4T2YobW90aXZhdGlvbi50b0xvd2VyQ2FzZSgpKSA9PT0gLTEpXHJcbiAgICAgICAgICAgIHRocm93IEVycm9yKGBJbnZhbGlkIG1vdGl2YXRpb24hIE11c3QgYmUgb25lIG9mIHRoZSBmb2xsb3dpbmc6ICR7QXJyYXkoT2JqZWN0LnZhbHVlcyhBdHRhY2tNb3RpdmF0aW9ucykpLmpvaW4oJywgJyl9YClcclxuXHJcbiAgICAgICAgdGhpcy5wcmltYXJ5TW90aXZhdGlvbiA9IG1vdGl2YXRpb24udG9Mb3dlckNhc2UoKVxyXG4gICAgfVxyXG5cclxuICAgIGFkZFNlY29uZGFyeU1vdGl2YXRpb24obW90aXZhdGlvbikge1xyXG4gICAgICAgIGlmIChPYmplY3QudmFsdWVzKEF0dGFja01vdGl2YXRpb25zKS5pbmRleE9mKG1vdGl2YXRpb24udG9Mb3dlckNhc2UoKSkgPT09IC0xKVxyXG4gICAgICAgICAgICB0aHJvdyBFcnJvcihgSW52YWxpZCBtb3RpdmF0aW9uISBNdXN0IGJlIG9uZSBvZiB0aGUgZm9sbG93aW5nOiAke0FycmF5KE9iamVjdC52YWx1ZXMoQXR0YWNrTW90aXZhdGlvbnMpKS5qb2luKCcsICcpfWApXHJcblxyXG4gICAgICAgIGlmICh0aGlzLnByaW1hcnlNb3RpdmF0aW9uICE9PSBtb3RpdmF0aW9uICYmIHRoaXMuc2Vjb25kYXJ5TW90aXZhdGlvbnMuaW5kZXhPZihtb3RpdmF0aW9uLnRvTG93ZXJDYXNlKCkpID09PSAtMSlcclxuICAgICAgICAgICAgdGhpcy5zZWNvbmRhcnlNb3RpdmF0aW9ucy5wdXNoKG1vdGl2YXRpb24udG9Mb3dlckNhc2UoKSlcclxuICAgIH1cclxuXHJcbiAgICB0b0pTT04oKSB7XHJcbiAgICAgICAgaWYgKCF0aGlzLm5hbWUpXHJcbiAgICAgICAgICAgIHRocm93IEVycm9yKGBTVElYIDIuMCByZXF1aXJlcyBhbiBpbnRydXNpb24gc2V0IG5hbWUhYClcclxuXHJcbiAgICAgICAgbGV0IG91dHB1dCA9IHN1cGVyLnRvSlNPTigpXHJcbiAgICAgICAgb3V0cHV0Lm5hbWUgPSB0aGlzLm5hbWVcclxuXHJcbiAgICAgICAgaWYgKHRoaXMuZGVzY3JpcHRpb24pXHJcbiAgICAgICAgICAgIG91dHB1dC5kZXNjcmlwdGlvbiA9IHRoaXMuZGVzY3JpcHRpb25cclxuICAgICAgICBpZiAodGhpcy5hbGlhc2VzKVxyXG4gICAgICAgICAgICBvdXRwdXQuYWxpYXNlcyA9IHRoaXMuYWxpYXNlc1xyXG4gICAgICAgIGlmICh0aGlzLmZpcnN0U2VlbilcclxuICAgICAgICAgICAgb3V0cHV0LmZpcnN0X3NlZW4gPSB0aGlzLmZpcnN0U2VlblxyXG4gICAgICAgIGlmICh0aGlzLmxhc3RTZWVuKVxyXG4gICAgICAgICAgICBvdXRwdXQubGFzdF9zZWVuID0gdGhpcy5sYXN0U2VlblxyXG4gICAgICAgIGlmICh0aGlzLmdvYWxzKVxyXG4gICAgICAgICAgICBvdXRwdXQuZ29hbHMgPSB0aGlzLmdvYWxzXHJcbiAgICAgICAgaWYgKHRoaXMucmVzb3VyY2VMZXZlbClcclxuICAgICAgICAgICAgb3V0cHV0LnJlc291cmNlX2xldmVsID0gdGhpcy5yZXNvdXJjZUxldmVsXHJcbiAgICAgICAgaWYgKHRoaXMucHJpbWFyeU1vdGl2YXRpb24pXHJcbiAgICAgICAgICAgIG91dHB1dC5wcmltYXJ5X21vdGl2YXRpb24gPSB0aGlzLnByaW1hcnlNb3RpdmF0aW9uXHJcbiAgICAgICAgaWYgKHRoaXMuc2Vjb25kYXJ5TW90aXZhdGlvbnMgJiYgdGhpcy5zZWNvbmRhcnlNb3RpdmF0aW9ucy5sZW5ndGggPiAwKVxyXG4gICAgICAgICAgICBvdXRwdXQuc2Vjb25kYXJ5X21vdGl2YXRpb25zID0gdGhpcy5zZWNvbmRhcnlNb3RpdmF0aW9uc1xyXG5cclxuICAgICAgICByZXR1cm4gb3V0cHV0XHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IEludHJ1c2lvblNldCJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "intrusionSet.js"
      ],
      "names": [
        "IntrusionSet",
        "name",
        "level",
        "Object",
        "values",
        "AttackResourceLevels",
        "indexOf",
        "toLowerCase",
        "Error",
        "Array",
        "join",
        "resourceLevel",
        "alias",
        "aliases",
        "push",
        "motivation",
        "AttackMotivations",
        "primaryMotivation",
        "secondaryMotivations",
        "output",
        "description",
        "firstSeen",
        "first_seen",
        "lastSeen",
        "last_seen",
        "goals",
        "resource_level",
        "primary_motivation",
        "length",
        "secondary_motivations",
        "BaseObject"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;IAEMA,Y;;;;;AAYF,wBAAYC,IAAZ,EAAkB;AAAA;;AAAA;;AACd,sFAAM,eAAN;;AADc,2DAVX,IAUW;;AAAA,kEATJ,IASI;;AAAA,8DARR,EAQQ;;AAAA,gEAPN,IAOM;;AAAA,+DANP,IAMO;;AAAA,4DALV,EAKU;;AAAA,oEAJF,IAIE;;AAAA,wEAHE,IAGF;;AAAA,2EAFK,IAEL;;AAGd,UAAKA,IAAL,GAAYA,IAAZ;AAHc;AAIjB;;;;qCAEgBC,K,EAAO;AACpB,UAAIC,MAAM,CAACC,MAAP,CAAcC,gCAAd,EAAoCC,OAApC,CAA4CJ,KAAK,CAACK,WAAN,EAA5C,MAAqE,CAAC,CAA1E,EACI,MAAMC,KAAK,iEAA0DC,KAAK,CAACN,MAAM,CAACC,MAAP,CAAcC,gCAAd,CAAD,CAAL,CAA2CK,IAA3C,CAAgD,IAAhD,CAA1D,EAAX;AAEJ,WAAKC,aAAL,GAAqBT,KAAK,CAACK,WAAN,EAArB;AACH;;;6BAEQK,K,EAAO;AACZ,UAAI,KAAKC,OAAL,CAAaP,OAAb,CAAqBM,KAAK,CAACL,WAAN,EAArB,MAA8C,CAAC,CAAnD,EACI,KAAKM,OAAL,CAAaC,IAAb,CAAkBF,KAAlB;AACP;;;yCAEoBG,U,EAAY;AAC7B,UAAIZ,MAAM,CAACC,MAAP,CAAcY,6BAAd,EAAiCV,OAAjC,CAAyCS,UAAU,CAACR,WAAX,EAAzC,MAAuE,CAAC,CAA5E,EACI,MAAMC,KAAK,6DAAsDC,KAAK,CAACN,MAAM,CAACC,MAAP,CAAcY,6BAAd,CAAD,CAAL,CAAwCN,IAAxC,CAA6C,IAA7C,CAAtD,EAAX;AAEJ,WAAKO,iBAAL,GAAyBF,UAAU,CAACR,WAAX,EAAzB;AACH;;;2CAEsBQ,U,EAAY;AAC/B,UAAIZ,MAAM,CAACC,MAAP,CAAcY,6BAAd,EAAiCV,OAAjC,CAAyCS,UAAU,CAACR,WAAX,EAAzC,MAAuE,CAAC,CAA5E,EACI,MAAMC,KAAK,6DAAsDC,KAAK,CAACN,MAAM,CAACC,MAAP,CAAcY,6BAAd,CAAD,CAAL,CAAwCN,IAAxC,CAA6C,IAA7C,CAAtD,EAAX;AAEJ,UAAI,KAAKO,iBAAL,KAA2BF,UAA3B,IAAyC,KAAKG,oBAAL,CAA0BZ,OAA1B,CAAkCS,UAAU,CAACR,WAAX,EAAlC,MAAgE,CAAC,CAA9G,EACI,KAAKW,oBAAL,CAA0BJ,IAA1B,CAA+BC,UAAU,CAACR,WAAX,EAA/B;AACP;;;6BAEQ;AACL,UAAI,CAAC,KAAKN,IAAV,EACI,MAAMO,KAAK,4CAAX;;AAEJ,UAAIW,MAAM,2EAAV;;AACAA,MAAAA,MAAM,CAAClB,IAAP,GAAc,KAAKA,IAAnB;AAEA,UAAI,KAAKmB,WAAT,EACID,MAAM,CAACC,WAAP,GAAqB,KAAKA,WAA1B;AACJ,UAAI,KAAKP,OAAT,EACIM,MAAM,CAACN,OAAP,GAAiB,KAAKA,OAAtB;AACJ,UAAI,KAAKQ,SAAT,EACIF,MAAM,CAACG,UAAP,GAAoB,KAAKD,SAAzB;AACJ,UAAI,KAAKE,QAAT,EACIJ,MAAM,CAACK,SAAP,GAAmB,KAAKD,QAAxB;AACJ,UAAI,KAAKE,KAAT,EACIN,MAAM,CAACM,KAAP,GAAe,KAAKA,KAApB;AACJ,UAAI,KAAKd,aAAT,EACIQ,MAAM,CAACO,cAAP,GAAwB,KAAKf,aAA7B;AACJ,UAAI,KAAKM,iBAAT,EACIE,MAAM,CAACQ,kBAAP,GAA4B,KAAKV,iBAAjC;AACJ,UAAI,KAAKC,oBAAL,IAA6B,KAAKA,oBAAL,CAA0BU,MAA1B,GAAmC,CAApE,EACIT,MAAM,CAACU,qBAAP,GAA+B,KAAKX,oBAApC;AAEJ,aAAOC,MAAP;AACH;;;;EAtEsBW,sB;;eAyEZ9B,Y",
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects",
      "sourcesContent": [
        "import { BaseObject } from \"./baseObject\"\r\nimport { AttackMotivations, AttackResourceLevels } from '../definitions/vocabulary'\r\n\r\nclass IntrusionSet extends BaseObject {\r\n\r\n    name = null\r\n    description = null\r\n    aliases = []\r\n    firstSeen = null\r\n    lastSeen = null\r\n    goals = []\r\n    resourceLevel = null\r\n    primaryMotivation = null\r\n    secondaryMotivations = null\r\n    \r\n    constructor(name) {\r\n        super('intrusion-set')\r\n\r\n        this.name = name\r\n    }\r\n\r\n    setResourceLevel(level) {\r\n        if (Object.values(AttackResourceLevels).indexOf(level.toLowerCase()) === -1)\r\n            throw Error(`Invalid resource level! Must be one of the following: ${Array(Object.values(AttackResourceLevels)).join(', ')}`)\r\n\r\n        this.resourceLevel = level.toLowerCase()\r\n    }\r\n\r\n    addAlias(alias) {\r\n        if (this.aliases.indexOf(alias.toLowerCase()) === -1)\r\n            this.aliases.push(alias)\r\n    }\r\n\r\n    addPrimaryMotivation(motivation) {\r\n        if (Object.values(AttackMotivations).indexOf(motivation.toLowerCase()) === -1)\r\n            throw Error(`Invalid motivation! Must be one of the following: ${Array(Object.values(AttackMotivations)).join(', ')}`)\r\n\r\n        this.primaryMotivation = motivation.toLowerCase()\r\n    }\r\n\r\n    addSecondaryMotivation(motivation) {\r\n        if (Object.values(AttackMotivations).indexOf(motivation.toLowerCase()) === -1)\r\n            throw Error(`Invalid motivation! Must be one of the following: ${Array(Object.values(AttackMotivations)).join(', ')}`)\r\n\r\n        if (this.primaryMotivation !== motivation && this.secondaryMotivations.indexOf(motivation.toLowerCase()) === -1)\r\n            this.secondaryMotivations.push(motivation.toLowerCase())\r\n    }\r\n\r\n    toJSON() {\r\n        if (!this.name)\r\n            throw Error(`STIX 2.0 requires an intrusion set name!`)\r\n\r\n        let output = super.toJSON()\r\n        output.name = this.name\r\n\r\n        if (this.description)\r\n            output.description = this.description\r\n        if (this.aliases)\r\n            output.aliases = this.aliases\r\n        if (this.firstSeen)\r\n            output.first_seen = this.firstSeen\r\n        if (this.lastSeen)\r\n            output.last_seen = this.lastSeen\r\n        if (this.goals)\r\n            output.goals = this.goals\r\n        if (this.resourceLevel)\r\n            output.resource_level = this.resourceLevel\r\n        if (this.primaryMotivation)\r\n            output.primary_motivation = this.primaryMotivation\r\n        if (this.secondaryMotivations && this.secondaryMotivations.length > 0)\r\n            output.secondary_motivations = this.secondaryMotivations\r\n\r\n        return output\r\n    }\r\n}\r\n\r\nexport default IntrusionSet"
      ]
    },
    "sourceType": "script",
    "mtime": 1565912480769
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\lib\\\\objects\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"filename\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\lib\\\\objects\\\\malware.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects\\malware.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects\\malware.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects\\malware.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects",
        "sourceFileName": "malware.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _baseObject = require(\"./baseObject\");\n\nvar _killChainPhase = require(\"./killChainPhase\");\n\nvar _vocabulary = require(\"../definitions/vocabulary\");\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar Malware =\n/*#__PURE__*/\nfunction (_BaseObject) {\n  _inherits(Malware, _BaseObject);\n\n  function Malware(name) {\n    var _this;\n\n    _classCallCheck(this, Malware);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Malware).call(this, 'malware'));\n\n    _defineProperty(_assertThisInitialized(_this), \"name\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"description\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"killChainPhases\", []);\n\n    _this.name = name;\n    return _this;\n  }\n\n  _createClass(Malware, [{\n    key: \"addKillChainPhase\",\n    value: function addKillChainPhase(phase) {\n      if (!(phase instanceof _killChainPhase.KillChainPhase)) throw Error('You cannot only add a kill chain phase of the KillChainPhase type!');\n      this.killChainPhases.push(phase);\n    }\n  }, {\n    key: \"addLabel\",\n    value: function addLabel(label) {\n      if (Object.values(_vocabulary.MalwareLabels).indexOf(label.toLowerCase()) === -1) throw Error(\"Invalid malware label! Must be one of the following: \".concat(Array(Object.values(_vocabulary.MalwareLabels)).join(', ')));\n      this.labels.push(label.toLowerCase());\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      if (!this.labels) throw Error(\"STIX 2.0 requires malware labels!\");\n      if (!this.name) throw Error(\"STIX 2.0 requires a malware name!\");\n\n      var output = _get(_getPrototypeOf(Malware.prototype), \"toJSON\", this).call(this);\n\n      output.name = this.name;\n      if (this.description) output.description = this.description;\n\n      if (this.killChainPhases && this.killChainPhases.length > 0) {\n        var killChainPhases = [];\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = this.killChainPhases[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var i = _step.value;\n            killChainPhases.push(i.toJSON());\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n              _iterator[\"return\"]();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n\n        output.kill_chain_phases = killChainPhases;\n      }\n\n      return output;\n    }\n  }]);\n\n  return Malware;\n}(_baseObject.BaseObject);\n\nvar _default = Malware;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1hbHdhcmUuanMiXSwibmFtZXMiOlsiTWFsd2FyZSIsIm5hbWUiLCJwaGFzZSIsIktpbGxDaGFpblBoYXNlIiwiRXJyb3IiLCJraWxsQ2hhaW5QaGFzZXMiLCJwdXNoIiwibGFiZWwiLCJPYmplY3QiLCJ2YWx1ZXMiLCJNYWx3YXJlTGFiZWxzIiwiaW5kZXhPZiIsInRvTG93ZXJDYXNlIiwiQXJyYXkiLCJqb2luIiwibGFiZWxzIiwib3V0cHV0IiwiZGVzY3JpcHRpb24iLCJsZW5ndGgiLCJpIiwidG9KU09OIiwia2lsbF9jaGFpbl9waGFzZXMiLCJCYXNlT2JqZWN0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBRU1BLE87Ozs7O0FBTUYsbUJBQVlDLElBQVosRUFBa0I7QUFBQTs7QUFBQTs7QUFDZCxpRkFBTSxTQUFOOztBQURjLDJEQUpYLElBSVc7O0FBQUEsa0VBSEosSUFHSTs7QUFBQSxzRUFGQSxFQUVBOztBQUdkLFVBQUtBLElBQUwsR0FBWUEsSUFBWjtBQUhjO0FBSWpCOzs7O3NDQUVpQkMsSyxFQUFPO0FBQ3JCLFVBQUksRUFBRUEsS0FBSyxZQUFZQyw4QkFBbkIsQ0FBSixFQUNJLE1BQU1DLEtBQUssQ0FBQyxvRUFBRCxDQUFYO0FBRUosV0FBS0MsZUFBTCxDQUFxQkMsSUFBckIsQ0FBMEJKLEtBQTFCO0FBQ0g7Ozs2QkFFUUssSyxFQUFPO0FBQ1osVUFBSUMsTUFBTSxDQUFDQyxNQUFQLENBQWNDLHlCQUFkLEVBQTZCQyxPQUE3QixDQUFxQ0osS0FBSyxDQUFDSyxXQUFOLEVBQXJDLE1BQThELENBQUMsQ0FBbkUsRUFDSSxNQUFNUixLQUFLLGdFQUF5RFMsS0FBSyxDQUFDTCxNQUFNLENBQUNDLE1BQVAsQ0FBY0MseUJBQWQsQ0FBRCxDQUFMLENBQW9DSSxJQUFwQyxDQUF5QyxJQUF6QyxDQUF6RCxFQUFYO0FBRUosV0FBS0MsTUFBTCxDQUFZVCxJQUFaLENBQWlCQyxLQUFLLENBQUNLLFdBQU4sRUFBakI7QUFDSDs7OzZCQUVRO0FBQ0wsVUFBSSxDQUFDLEtBQUtHLE1BQVYsRUFDSSxNQUFNWCxLQUFLLHFDQUFYO0FBQ0osVUFBSSxDQUFDLEtBQUtILElBQVYsRUFDSSxNQUFNRyxLQUFLLHFDQUFYOztBQUVKLFVBQUlZLE1BQU0sc0VBQVY7O0FBQ0FBLE1BQUFBLE1BQU0sQ0FBQ2YsSUFBUCxHQUFjLEtBQUtBLElBQW5CO0FBRUEsVUFBSSxLQUFLZ0IsV0FBVCxFQUNJRCxNQUFNLENBQUNDLFdBQVAsR0FBcUIsS0FBS0EsV0FBMUI7O0FBRUosVUFBSSxLQUFLWixlQUFMLElBQXdCLEtBQUtBLGVBQUwsQ0FBcUJhLE1BQXJCLEdBQThCLENBQTFELEVBQTZEO0FBQ3pELFlBQUliLGVBQWUsR0FBRyxFQUF0QjtBQUR5RDtBQUFBO0FBQUE7O0FBQUE7QUFFekQsK0JBQWMsS0FBS0EsZUFBbkI7QUFBQSxnQkFBU2MsQ0FBVDtBQUNJZCxZQUFBQSxlQUFlLENBQUNDLElBQWhCLENBQXFCYSxDQUFDLENBQUNDLE1BQUYsRUFBckI7QUFESjtBQUZ5RDtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBOztBQUl6REosUUFBQUEsTUFBTSxDQUFDSyxpQkFBUCxHQUEyQmhCLGVBQTNCO0FBQ0g7O0FBRUQsYUFBT1csTUFBUDtBQUNIOzs7O0VBOUNpQk0sc0I7O2VBaURQdEIsTyIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXFphY2ggU2hhbWVzXFxEb2N1bWVudHNcXERldmVsb3BtZW50XFxqcy0yLXN0aXhcXGxpYlxcb2JqZWN0cyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJhc2VPYmplY3QgfSBmcm9tIFwiLi9iYXNlT2JqZWN0XCJcclxuaW1wb3J0IHsgS2lsbENoYWluUGhhc2UgfSBmcm9tICcuL2tpbGxDaGFpblBoYXNlJ1xyXG5pbXBvcnQgeyBNYWx3YXJlTGFiZWxzIH0gZnJvbSAnLi4vZGVmaW5pdGlvbnMvdm9jYWJ1bGFyeSdcclxuXHJcbmNsYXNzIE1hbHdhcmUgZXh0ZW5kcyBCYXNlT2JqZWN0IHtcclxuXHJcbiAgICBuYW1lID0gbnVsbFxyXG4gICAgZGVzY3JpcHRpb24gPSBudWxsXHJcbiAgICBraWxsQ2hhaW5QaGFzZXMgPSBbXVxyXG4gICAgXHJcbiAgICBjb25zdHJ1Y3RvcihuYW1lKSB7XHJcbiAgICAgICAgc3VwZXIoJ21hbHdhcmUnKVxyXG5cclxuICAgICAgICB0aGlzLm5hbWUgPSBuYW1lXHJcbiAgICB9XHJcblxyXG4gICAgYWRkS2lsbENoYWluUGhhc2UocGhhc2UpIHtcclxuICAgICAgICBpZiAoIShwaGFzZSBpbnN0YW5jZW9mIEtpbGxDaGFpblBoYXNlKSlcclxuICAgICAgICAgICAgdGhyb3cgRXJyb3IoJ1lvdSBjYW5ub3Qgb25seSBhZGQgYSBraWxsIGNoYWluIHBoYXNlIG9mIHRoZSBLaWxsQ2hhaW5QaGFzZSB0eXBlIScpXHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgIHRoaXMua2lsbENoYWluUGhhc2VzLnB1c2gocGhhc2UpXHJcbiAgICB9XHJcblxyXG4gICAgYWRkTGFiZWwobGFiZWwpIHtcclxuICAgICAgICBpZiAoT2JqZWN0LnZhbHVlcyhNYWx3YXJlTGFiZWxzKS5pbmRleE9mKGxhYmVsLnRvTG93ZXJDYXNlKCkpID09PSAtMSlcclxuICAgICAgICAgICAgdGhyb3cgRXJyb3IoYEludmFsaWQgbWFsd2FyZSBsYWJlbCEgTXVzdCBiZSBvbmUgb2YgdGhlIGZvbGxvd2luZzogJHtBcnJheShPYmplY3QudmFsdWVzKE1hbHdhcmVMYWJlbHMpKS5qb2luKCcsICcpfWApXHJcblxyXG4gICAgICAgIHRoaXMubGFiZWxzLnB1c2gobGFiZWwudG9Mb3dlckNhc2UoKSlcclxuICAgIH1cclxuXHJcbiAgICB0b0pTT04oKSB7XHJcbiAgICAgICAgaWYgKCF0aGlzLmxhYmVscylcclxuICAgICAgICAgICAgdGhyb3cgRXJyb3IoYFNUSVggMi4wIHJlcXVpcmVzIG1hbHdhcmUgbGFiZWxzIWApXHJcbiAgICAgICAgaWYgKCF0aGlzLm5hbWUpXHJcbiAgICAgICAgICAgIHRocm93IEVycm9yKGBTVElYIDIuMCByZXF1aXJlcyBhIG1hbHdhcmUgbmFtZSFgKVxyXG5cclxuICAgICAgICBsZXQgb3V0cHV0ID0gc3VwZXIudG9KU09OKClcclxuICAgICAgICBvdXRwdXQubmFtZSA9IHRoaXMubmFtZVxyXG5cclxuICAgICAgICBpZiAodGhpcy5kZXNjcmlwdGlvbilcclxuICAgICAgICAgICAgb3V0cHV0LmRlc2NyaXB0aW9uID0gdGhpcy5kZXNjcmlwdGlvblxyXG5cclxuICAgICAgICBpZiAodGhpcy5raWxsQ2hhaW5QaGFzZXMgJiYgdGhpcy5raWxsQ2hhaW5QaGFzZXMubGVuZ3RoID4gMCkge1xyXG4gICAgICAgICAgICBsZXQga2lsbENoYWluUGhhc2VzID0gW11cclxuICAgICAgICAgICAgZm9yIChsZXQgaSBvZiB0aGlzLmtpbGxDaGFpblBoYXNlcylcclxuICAgICAgICAgICAgICAgIGtpbGxDaGFpblBoYXNlcy5wdXNoKGkudG9KU09OKCkpXHJcbiAgICAgICAgICAgIG91dHB1dC5raWxsX2NoYWluX3BoYXNlcyA9IGtpbGxDaGFpblBoYXNlc1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcmV0dXJuIG91dHB1dFxyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBNYWx3YXJlIl19",
    "map": {
      "version": 3,
      "sources": [
        "malware.js"
      ],
      "names": [
        "Malware",
        "name",
        "phase",
        "KillChainPhase",
        "Error",
        "killChainPhases",
        "push",
        "label",
        "Object",
        "values",
        "MalwareLabels",
        "indexOf",
        "toLowerCase",
        "Array",
        "join",
        "labels",
        "output",
        "description",
        "length",
        "i",
        "toJSON",
        "kill_chain_phases",
        "BaseObject"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;IAEMA,O;;;;;AAMF,mBAAYC,IAAZ,EAAkB;AAAA;;AAAA;;AACd,iFAAM,SAAN;;AADc,2DAJX,IAIW;;AAAA,kEAHJ,IAGI;;AAAA,sEAFA,EAEA;;AAGd,UAAKA,IAAL,GAAYA,IAAZ;AAHc;AAIjB;;;;sCAEiBC,K,EAAO;AACrB,UAAI,EAAEA,KAAK,YAAYC,8BAAnB,CAAJ,EACI,MAAMC,KAAK,CAAC,oEAAD,CAAX;AAEJ,WAAKC,eAAL,CAAqBC,IAArB,CAA0BJ,KAA1B;AACH;;;6BAEQK,K,EAAO;AACZ,UAAIC,MAAM,CAACC,MAAP,CAAcC,yBAAd,EAA6BC,OAA7B,CAAqCJ,KAAK,CAACK,WAAN,EAArC,MAA8D,CAAC,CAAnE,EACI,MAAMR,KAAK,gEAAyDS,KAAK,CAACL,MAAM,CAACC,MAAP,CAAcC,yBAAd,CAAD,CAAL,CAAoCI,IAApC,CAAyC,IAAzC,CAAzD,EAAX;AAEJ,WAAKC,MAAL,CAAYT,IAAZ,CAAiBC,KAAK,CAACK,WAAN,EAAjB;AACH;;;6BAEQ;AACL,UAAI,CAAC,KAAKG,MAAV,EACI,MAAMX,KAAK,qCAAX;AACJ,UAAI,CAAC,KAAKH,IAAV,EACI,MAAMG,KAAK,qCAAX;;AAEJ,UAAIY,MAAM,sEAAV;;AACAA,MAAAA,MAAM,CAACf,IAAP,GAAc,KAAKA,IAAnB;AAEA,UAAI,KAAKgB,WAAT,EACID,MAAM,CAACC,WAAP,GAAqB,KAAKA,WAA1B;;AAEJ,UAAI,KAAKZ,eAAL,IAAwB,KAAKA,eAAL,CAAqBa,MAArB,GAA8B,CAA1D,EAA6D;AACzD,YAAIb,eAAe,GAAG,EAAtB;AADyD;AAAA;AAAA;;AAAA;AAEzD,+BAAc,KAAKA,eAAnB;AAAA,gBAASc,CAAT;AACId,YAAAA,eAAe,CAACC,IAAhB,CAAqBa,CAAC,CAACC,MAAF,EAArB;AADJ;AAFyD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIzDJ,QAAAA,MAAM,CAACK,iBAAP,GAA2BhB,eAA3B;AACH;;AAED,aAAOW,MAAP;AACH;;;;EA9CiBM,sB;;eAiDPtB,O",
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects",
      "sourcesContent": [
        "import { BaseObject } from \"./baseObject\"\r\nimport { KillChainPhase } from './killChainPhase'\r\nimport { MalwareLabels } from '../definitions/vocabulary'\r\n\r\nclass Malware extends BaseObject {\r\n\r\n    name = null\r\n    description = null\r\n    killChainPhases = []\r\n    \r\n    constructor(name) {\r\n        super('malware')\r\n\r\n        this.name = name\r\n    }\r\n\r\n    addKillChainPhase(phase) {\r\n        if (!(phase instanceof KillChainPhase))\r\n            throw Error('You cannot only add a kill chain phase of the KillChainPhase type!')\r\n            \r\n        this.killChainPhases.push(phase)\r\n    }\r\n\r\n    addLabel(label) {\r\n        if (Object.values(MalwareLabels).indexOf(label.toLowerCase()) === -1)\r\n            throw Error(`Invalid malware label! Must be one of the following: ${Array(Object.values(MalwareLabels)).join(', ')}`)\r\n\r\n        this.labels.push(label.toLowerCase())\r\n    }\r\n\r\n    toJSON() {\r\n        if (!this.labels)\r\n            throw Error(`STIX 2.0 requires malware labels!`)\r\n        if (!this.name)\r\n            throw Error(`STIX 2.0 requires a malware name!`)\r\n\r\n        let output = super.toJSON()\r\n        output.name = this.name\r\n\r\n        if (this.description)\r\n            output.description = this.description\r\n\r\n        if (this.killChainPhases && this.killChainPhases.length > 0) {\r\n            let killChainPhases = []\r\n            for (let i of this.killChainPhases)\r\n                killChainPhases.push(i.toJSON())\r\n            output.kill_chain_phases = killChainPhases\r\n        }\r\n\r\n        return output\r\n    }\r\n}\r\n\r\nexport default Malware"
      ]
    },
    "sourceType": "script",
    "mtime": 1565912463296
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\lib\\\\objects\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"filename\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\lib\\\\objects\\\\observedData.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects\\observedData.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects\\observedData.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects\\observedData.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects",
        "sourceFileName": "observedData.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _baseObject = require(\"./baseObject\");\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar ObservedData =\n/*#__PURE__*/\nfunction (_BaseObject) {\n  _inherits(ObservedData, _BaseObject);\n\n  function ObservedData() {\n    var _this;\n\n    _classCallCheck(this, ObservedData);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ObservedData).call(this, 'observed-data'));\n\n    _defineProperty(_assertThisInitialized(_this), \"firstObserved\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"lastObserved\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"numberObserved\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"objects\", []);\n\n    return _this;\n  }\n\n  _createClass(ObservedData, [{\n    key: \"setNumberObserved\",\n    value: function setNumberObserved(num) {\n      if (!(num instanceof Number)) throw Error('Number Observed must be an integer!');\n      if (num < 1 || num > 999999999) throw Error('Number Observed must be within 1 and 999,999,999!');\n      this.numberObserved = num;\n    }\n  }, {\n    key: \"addObject\",\n    value: function addObject(object) {\n      // TODO: Set this to Observable Object\n      if (!(phase instanceof KillChainPhase)) throw Error('You can only add an object of the ObservableObject type!');\n      this.objects.push(object);\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      if (!this.firstObserved) throw Error(\"STIX 2.0 requires a first observed timestamp!\");\n      if (!this.lastObserved) throw Error(\"STIX 2.0 requires a last observed timestamp!\");\n      if (!this.numberObserved) throw Error(\"STIX 2.0 requires a number of times the data was observed!\");\n      if (!this.objects || this.objects.length === 0) throw Error(\"STIX 2.0 requires at least 1 object in the observed data!\");\n\n      var output = _get(_getPrototypeOf(ObservedData.prototype), \"toJSON\", this).call(this);\n\n      output.first_observed = this.firstObserved;\n      output.last_observed = this.lastObserved;\n      output.number_observed = this.numberObserved;\n      var objects = [];\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.objects[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var i = _step.value;\n          objects.push(i.toJSON());\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n            _iterator[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      output.objects = objects;\n      return output;\n    }\n  }]);\n\n  return ObservedData;\n}(_baseObject.BaseObject);\n\nvar _default = ObservedData;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm9ic2VydmVkRGF0YS5qcyJdLCJuYW1lcyI6WyJPYnNlcnZlZERhdGEiLCJudW0iLCJOdW1iZXIiLCJFcnJvciIsIm51bWJlck9ic2VydmVkIiwib2JqZWN0IiwicGhhc2UiLCJLaWxsQ2hhaW5QaGFzZSIsIm9iamVjdHMiLCJwdXNoIiwiZmlyc3RPYnNlcnZlZCIsImxhc3RPYnNlcnZlZCIsImxlbmd0aCIsIm91dHB1dCIsImZpcnN0X29ic2VydmVkIiwibGFzdF9vYnNlcnZlZCIsIm51bWJlcl9vYnNlcnZlZCIsImkiLCJ0b0pTT04iLCJCYXNlT2JqZWN0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBRU1BLFk7Ozs7O0FBT0YsMEJBQWM7QUFBQTs7QUFBQTs7QUFDVixzRkFBTSxlQUFOOztBQURVLG9FQUxFLElBS0Y7O0FBQUEsbUVBSkMsSUFJRDs7QUFBQSxxRUFIRyxJQUdIOztBQUFBLDhEQUZKLEVBRUk7O0FBQUE7QUFFYjs7OztzQ0FFaUJDLEcsRUFBSztBQUNuQixVQUFJLEVBQUVBLEdBQUcsWUFBWUMsTUFBakIsQ0FBSixFQUNJLE1BQU1DLEtBQUssQ0FBQyxxQ0FBRCxDQUFYO0FBRUosVUFBSUYsR0FBRyxHQUFHLENBQU4sSUFBV0EsR0FBRyxHQUFHLFNBQXJCLEVBQ0ksTUFBTUUsS0FBSyxDQUFDLG1EQUFELENBQVg7QUFFSixXQUFLQyxjQUFMLEdBQXNCSCxHQUF0QjtBQUNIOzs7OEJBRVNJLE0sRUFBUTtBQUNkO0FBQ0EsVUFBSSxFQUFFQyxLQUFLLFlBQVlDLGNBQW5CLENBQUosRUFDSSxNQUFNSixLQUFLLENBQUMsMERBQUQsQ0FBWDtBQUVKLFdBQUtLLE9BQUwsQ0FBYUMsSUFBYixDQUFrQkosTUFBbEI7QUFDSDs7OzZCQUVRO0FBQ0wsVUFBSSxDQUFDLEtBQUtLLGFBQVYsRUFDSSxNQUFNUCxLQUFLLGlEQUFYO0FBQ0osVUFBSSxDQUFDLEtBQUtRLFlBQVYsRUFDSSxNQUFNUixLQUFLLGdEQUFYO0FBQ0osVUFBSSxDQUFDLEtBQUtDLGNBQVYsRUFDSSxNQUFNRCxLQUFLLDhEQUFYO0FBQ0osVUFBSSxDQUFDLEtBQUtLLE9BQU4sSUFBaUIsS0FBS0EsT0FBTCxDQUFhSSxNQUFiLEtBQXdCLENBQTdDLEVBQ0ksTUFBTVQsS0FBSyw2REFBWDs7QUFFSixVQUFJVSxNQUFNLDJFQUFWOztBQUNBQSxNQUFBQSxNQUFNLENBQUNDLGNBQVAsR0FBd0IsS0FBS0osYUFBN0I7QUFDQUcsTUFBQUEsTUFBTSxDQUFDRSxhQUFQLEdBQXVCLEtBQUtKLFlBQTVCO0FBQ0FFLE1BQUFBLE1BQU0sQ0FBQ0csZUFBUCxHQUF5QixLQUFLWixjQUE5QjtBQUVBLFVBQUlJLE9BQU8sR0FBRyxFQUFkO0FBZks7QUFBQTtBQUFBOztBQUFBO0FBZ0JMLDZCQUFjLEtBQUtBLE9BQW5CO0FBQUEsY0FBU1MsQ0FBVDtBQUNJVCxVQUFBQSxPQUFPLENBQUNDLElBQVIsQ0FBYVEsQ0FBQyxDQUFDQyxNQUFGLEVBQWI7QUFESjtBQWhCSztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBOztBQWtCTEwsTUFBQUEsTUFBTSxDQUFDTCxPQUFQLEdBQWlCQSxPQUFqQjtBQUVBLGFBQU9LLE1BQVA7QUFDSDs7OztFQWxEc0JNLHNCOztlQXFEWm5CLFkiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxaYWNoIFNoYW1lc1xcRG9jdW1lbnRzXFxEZXZlbG9wbWVudFxcanMtMi1zdGl4XFxsaWJcXG9iamVjdHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCYXNlT2JqZWN0IH0gZnJvbSBcIi4vYmFzZU9iamVjdFwiXHJcblxyXG5jbGFzcyBPYnNlcnZlZERhdGEgZXh0ZW5kcyBCYXNlT2JqZWN0IHtcclxuXHJcbiAgICBmaXJzdE9ic2VydmVkID0gbnVsbFxyXG4gICAgbGFzdE9ic2VydmVkID0gbnVsbFxyXG4gICAgbnVtYmVyT2JzZXJ2ZWQgPSBudWxsXHJcbiAgICBvYmplY3RzID0gW11cclxuICAgIFxyXG4gICAgY29uc3RydWN0b3IoKSB7XHJcbiAgICAgICAgc3VwZXIoJ29ic2VydmVkLWRhdGEnKVxyXG4gICAgfVxyXG5cclxuICAgIHNldE51bWJlck9ic2VydmVkKG51bSkge1xyXG4gICAgICAgIGlmICghKG51bSBpbnN0YW5jZW9mIE51bWJlcikpXHJcbiAgICAgICAgICAgIHRocm93IEVycm9yKCdOdW1iZXIgT2JzZXJ2ZWQgbXVzdCBiZSBhbiBpbnRlZ2VyIScpXHJcblxyXG4gICAgICAgIGlmIChudW0gPCAxIHx8IG51bSA+IDk5OTk5OTk5OSlcclxuICAgICAgICAgICAgdGhyb3cgRXJyb3IoJ051bWJlciBPYnNlcnZlZCBtdXN0IGJlIHdpdGhpbiAxIGFuZCA5OTksOTk5LDk5OSEnKVxyXG5cclxuICAgICAgICB0aGlzLm51bWJlck9ic2VydmVkID0gbnVtXHJcbiAgICB9XHJcblxyXG4gICAgYWRkT2JqZWN0KG9iamVjdCkge1xyXG4gICAgICAgIC8vIFRPRE86IFNldCB0aGlzIHRvIE9ic2VydmFibGUgT2JqZWN0XHJcbiAgICAgICAgaWYgKCEocGhhc2UgaW5zdGFuY2VvZiBLaWxsQ2hhaW5QaGFzZSkpXHJcbiAgICAgICAgICAgIHRocm93IEVycm9yKCdZb3UgY2FuIG9ubHkgYWRkIGFuIG9iamVjdCBvZiB0aGUgT2JzZXJ2YWJsZU9iamVjdCB0eXBlIScpXHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgIHRoaXMub2JqZWN0cy5wdXNoKG9iamVjdClcclxuICAgIH1cclxuXHJcbiAgICB0b0pTT04oKSB7XHJcbiAgICAgICAgaWYgKCF0aGlzLmZpcnN0T2JzZXJ2ZWQpXHJcbiAgICAgICAgICAgIHRocm93IEVycm9yKGBTVElYIDIuMCByZXF1aXJlcyBhIGZpcnN0IG9ic2VydmVkIHRpbWVzdGFtcCFgKVxyXG4gICAgICAgIGlmICghdGhpcy5sYXN0T2JzZXJ2ZWQpXHJcbiAgICAgICAgICAgIHRocm93IEVycm9yKGBTVElYIDIuMCByZXF1aXJlcyBhIGxhc3Qgb2JzZXJ2ZWQgdGltZXN0YW1wIWApXHJcbiAgICAgICAgaWYgKCF0aGlzLm51bWJlck9ic2VydmVkKVxyXG4gICAgICAgICAgICB0aHJvdyBFcnJvcihgU1RJWCAyLjAgcmVxdWlyZXMgYSBudW1iZXIgb2YgdGltZXMgdGhlIGRhdGEgd2FzIG9ic2VydmVkIWApXHJcbiAgICAgICAgaWYgKCF0aGlzLm9iamVjdHMgfHwgdGhpcy5vYmplY3RzLmxlbmd0aCA9PT0gMClcclxuICAgICAgICAgICAgdGhyb3cgRXJyb3IoYFNUSVggMi4wIHJlcXVpcmVzIGF0IGxlYXN0IDEgb2JqZWN0IGluIHRoZSBvYnNlcnZlZCBkYXRhIWApXHJcblxyXG4gICAgICAgIGxldCBvdXRwdXQgPSBzdXBlci50b0pTT04oKVxyXG4gICAgICAgIG91dHB1dC5maXJzdF9vYnNlcnZlZCA9IHRoaXMuZmlyc3RPYnNlcnZlZFxyXG4gICAgICAgIG91dHB1dC5sYXN0X29ic2VydmVkID0gdGhpcy5sYXN0T2JzZXJ2ZWRcclxuICAgICAgICBvdXRwdXQubnVtYmVyX29ic2VydmVkID0gdGhpcy5udW1iZXJPYnNlcnZlZFxyXG5cclxuICAgICAgICBsZXQgb2JqZWN0cyA9IFtdXHJcbiAgICAgICAgZm9yIChsZXQgaSBvZiB0aGlzLm9iamVjdHMpXHJcbiAgICAgICAgICAgIG9iamVjdHMucHVzaChpLnRvSlNPTigpKVxyXG4gICAgICAgIG91dHB1dC5vYmplY3RzID0gb2JqZWN0c1xyXG5cclxuICAgICAgICByZXR1cm4gb3V0cHV0XHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IE9ic2VydmVkRGF0YSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "observedData.js"
      ],
      "names": [
        "ObservedData",
        "num",
        "Number",
        "Error",
        "numberObserved",
        "object",
        "phase",
        "KillChainPhase",
        "objects",
        "push",
        "firstObserved",
        "lastObserved",
        "length",
        "output",
        "first_observed",
        "last_observed",
        "number_observed",
        "i",
        "toJSON",
        "BaseObject"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;IAEMA,Y;;;;;AAOF,0BAAc;AAAA;;AAAA;;AACV,sFAAM,eAAN;;AADU,oEALE,IAKF;;AAAA,mEAJC,IAID;;AAAA,qEAHG,IAGH;;AAAA,8DAFJ,EAEI;;AAAA;AAEb;;;;sCAEiBC,G,EAAK;AACnB,UAAI,EAAEA,GAAG,YAAYC,MAAjB,CAAJ,EACI,MAAMC,KAAK,CAAC,qCAAD,CAAX;AAEJ,UAAIF,GAAG,GAAG,CAAN,IAAWA,GAAG,GAAG,SAArB,EACI,MAAME,KAAK,CAAC,mDAAD,CAAX;AAEJ,WAAKC,cAAL,GAAsBH,GAAtB;AACH;;;8BAESI,M,EAAQ;AACd;AACA,UAAI,EAAEC,KAAK,YAAYC,cAAnB,CAAJ,EACI,MAAMJ,KAAK,CAAC,0DAAD,CAAX;AAEJ,WAAKK,OAAL,CAAaC,IAAb,CAAkBJ,MAAlB;AACH;;;6BAEQ;AACL,UAAI,CAAC,KAAKK,aAAV,EACI,MAAMP,KAAK,iDAAX;AACJ,UAAI,CAAC,KAAKQ,YAAV,EACI,MAAMR,KAAK,gDAAX;AACJ,UAAI,CAAC,KAAKC,cAAV,EACI,MAAMD,KAAK,8DAAX;AACJ,UAAI,CAAC,KAAKK,OAAN,IAAiB,KAAKA,OAAL,CAAaI,MAAb,KAAwB,CAA7C,EACI,MAAMT,KAAK,6DAAX;;AAEJ,UAAIU,MAAM,2EAAV;;AACAA,MAAAA,MAAM,CAACC,cAAP,GAAwB,KAAKJ,aAA7B;AACAG,MAAAA,MAAM,CAACE,aAAP,GAAuB,KAAKJ,YAA5B;AACAE,MAAAA,MAAM,CAACG,eAAP,GAAyB,KAAKZ,cAA9B;AAEA,UAAII,OAAO,GAAG,EAAd;AAfK;AAAA;AAAA;;AAAA;AAgBL,6BAAc,KAAKA,OAAnB;AAAA,cAASS,CAAT;AACIT,UAAAA,OAAO,CAACC,IAAR,CAAaQ,CAAC,CAACC,MAAF,EAAb;AADJ;AAhBK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAkBLL,MAAAA,MAAM,CAACL,OAAP,GAAiBA,OAAjB;AAEA,aAAOK,MAAP;AACH;;;;EAlDsBM,sB;;eAqDZnB,Y",
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects",
      "sourcesContent": [
        "import { BaseObject } from \"./baseObject\"\r\n\r\nclass ObservedData extends BaseObject {\r\n\r\n    firstObserved = null\r\n    lastObserved = null\r\n    numberObserved = null\r\n    objects = []\r\n    \r\n    constructor() {\r\n        super('observed-data')\r\n    }\r\n\r\n    setNumberObserved(num) {\r\n        if (!(num instanceof Number))\r\n            throw Error('Number Observed must be an integer!')\r\n\r\n        if (num < 1 || num > 999999999)\r\n            throw Error('Number Observed must be within 1 and 999,999,999!')\r\n\r\n        this.numberObserved = num\r\n    }\r\n\r\n    addObject(object) {\r\n        // TODO: Set this to Observable Object\r\n        if (!(phase instanceof KillChainPhase))\r\n            throw Error('You can only add an object of the ObservableObject type!')\r\n            \r\n        this.objects.push(object)\r\n    }\r\n\r\n    toJSON() {\r\n        if (!this.firstObserved)\r\n            throw Error(`STIX 2.0 requires a first observed timestamp!`)\r\n        if (!this.lastObserved)\r\n            throw Error(`STIX 2.0 requires a last observed timestamp!`)\r\n        if (!this.numberObserved)\r\n            throw Error(`STIX 2.0 requires a number of times the data was observed!`)\r\n        if (!this.objects || this.objects.length === 0)\r\n            throw Error(`STIX 2.0 requires at least 1 object in the observed data!`)\r\n\r\n        let output = super.toJSON()\r\n        output.first_observed = this.firstObserved\r\n        output.last_observed = this.lastObserved\r\n        output.number_observed = this.numberObserved\r\n\r\n        let objects = []\r\n        for (let i of this.objects)\r\n            objects.push(i.toJSON())\r\n        output.objects = objects\r\n\r\n        return output\r\n    }\r\n}\r\n\r\nexport default ObservedData"
      ]
    },
    "sourceType": "script",
    "mtime": 1565912432533
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\lib\\\\objects\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"filename\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\lib\\\\objects\\\\relationship.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects\\relationship.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects\\relationship.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects\\relationship.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects",
        "sourceFileName": "relationship.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _baseObject = require(\"./baseObject\");\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar Relationship =\n/*#__PURE__*/\nfunction (_BaseObject) {\n  _inherits(Relationship, _BaseObject);\n\n  function Relationship(relationshipType) {\n    var _this;\n\n    _classCallCheck(this, Relationship);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Relationship).call(this, 'relationship'));\n\n    _defineProperty(_assertThisInitialized(_this), \"relationshipType\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"description\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"sourceRef\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"targetRef\", null);\n\n    _this.targetRef = null;\n    _this.relationshipType = relationshipType;\n    return _this;\n  }\n\n  _createClass(Relationship, [{\n    key: \"setSourceRef\",\n    value: function setSourceRef(ref) {\n      if (ref instanceof _baseObject.BaseObject) this.sourceRef = ref.id;else this.sourceRef = ref;\n    }\n  }, {\n    key: \"setTargetRef\",\n    value: function setTargetRef(ref) {\n      if (ref instanceof _baseObject.BaseObject) this.targetRef = ref.id;else this.targetRef = ref;\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      if (!this.relationshipType) throw Error(\"STIX 2.0 requires a relationship type!\");\n      if (!this.sourceRef) throw Error(\"STIX 2.0 requires a source reference!\");\n      if (!this.targetRef) throw Error(\"STIX 2.0 requires a target reference!\");\n\n      var output = _get(_getPrototypeOf(Relationship.prototype), \"toJSON\", this).call(this);\n\n      output.relationship_type = this.relationshipType;\n      output.source_ref = this.sourceRef;\n      output.target_ref = this.targetRef;\n      if (this.description) output.description = this.description;\n      return output;\n    }\n  }]);\n\n  return Relationship;\n}(_baseObject.BaseObject);\n\nvar _default = Relationship;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlbGF0aW9uc2hpcC5qcyJdLCJuYW1lcyI6WyJSZWxhdGlvbnNoaXAiLCJyZWxhdGlvbnNoaXBUeXBlIiwidGFyZ2V0UmVmIiwicmVmIiwiQmFzZU9iamVjdCIsInNvdXJjZVJlZiIsImlkIiwiRXJyb3IiLCJvdXRwdXQiLCJyZWxhdGlvbnNoaXBfdHlwZSIsInNvdXJjZV9yZWYiLCJ0YXJnZXRfcmVmIiwiZGVzY3JpcHRpb24iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFFTUEsWTs7Ozs7QUFPRix3QkFBWUMsZ0JBQVosRUFBOEI7QUFBQTs7QUFBQTs7QUFDMUIsc0ZBQU0sY0FBTjs7QUFEMEIsdUVBTFgsSUFLVzs7QUFBQSxrRUFKaEIsSUFJZ0I7O0FBQUEsZ0VBSGxCLElBR2tCOztBQUFBLGdFQUZsQixJQUVrQjs7QUFHMUIsVUFBS0MsU0FBTCxHQUFpQixJQUFqQjtBQUNBLFVBQUtELGdCQUFMLEdBQXdCQSxnQkFBeEI7QUFKMEI7QUFLN0I7Ozs7aUNBRVlFLEcsRUFBSztBQUNkLFVBQUlBLEdBQUcsWUFBWUMsc0JBQW5CLEVBQ0ksS0FBS0MsU0FBTCxHQUFpQkYsR0FBRyxDQUFDRyxFQUFyQixDQURKLEtBR0ksS0FBS0QsU0FBTCxHQUFpQkYsR0FBakI7QUFDUDs7O2lDQUVZQSxHLEVBQUs7QUFDZCxVQUFJQSxHQUFHLFlBQVlDLHNCQUFuQixFQUNJLEtBQUtGLFNBQUwsR0FBaUJDLEdBQUcsQ0FBQ0csRUFBckIsQ0FESixLQUdJLEtBQUtKLFNBQUwsR0FBaUJDLEdBQWpCO0FBQ1A7Ozs2QkFFUTtBQUNMLFVBQUksQ0FBQyxLQUFLRixnQkFBVixFQUNJLE1BQU1NLEtBQUssMENBQVg7QUFDSixVQUFJLENBQUMsS0FBS0YsU0FBVixFQUNJLE1BQU1FLEtBQUsseUNBQVg7QUFDSixVQUFJLENBQUMsS0FBS0wsU0FBVixFQUNJLE1BQU1LLEtBQUsseUNBQVg7O0FBRUosVUFBSUMsTUFBTSwyRUFBVjs7QUFDQUEsTUFBQUEsTUFBTSxDQUFDQyxpQkFBUCxHQUEyQixLQUFLUixnQkFBaEM7QUFDQU8sTUFBQUEsTUFBTSxDQUFDRSxVQUFQLEdBQW9CLEtBQUtMLFNBQXpCO0FBQ0FHLE1BQUFBLE1BQU0sQ0FBQ0csVUFBUCxHQUFvQixLQUFLVCxTQUF6QjtBQUVBLFVBQUksS0FBS1UsV0FBVCxFQUNJSixNQUFNLENBQUNJLFdBQVAsR0FBcUIsS0FBS0EsV0FBMUI7QUFFSixhQUFPSixNQUFQO0FBQ0g7Ozs7RUE3Q3NCSixzQjs7ZUFnRFpKLFkiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxaYWNoIFNoYW1lc1xcRG9jdW1lbnRzXFxEZXZlbG9wbWVudFxcanMtMi1zdGl4XFxsaWJcXG9iamVjdHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCYXNlT2JqZWN0IH0gZnJvbSBcIi4vYmFzZU9iamVjdFwiXHJcblxyXG5jbGFzcyBSZWxhdGlvbnNoaXAgZXh0ZW5kcyBCYXNlT2JqZWN0IHtcclxuXHJcbiAgICByZWxhdGlvbnNoaXBUeXBlID0gbnVsbFxyXG4gICAgZGVzY3JpcHRpb24gPSBudWxsXHJcbiAgICBzb3VyY2VSZWYgPSBudWxsXHJcbiAgICB0YXJnZXRSZWYgPSBudWxsXHJcbiAgICBcclxuICAgIGNvbnN0cnVjdG9yKHJlbGF0aW9uc2hpcFR5cGUpIHtcclxuICAgICAgICBzdXBlcigncmVsYXRpb25zaGlwJylcclxuXHJcbiAgICAgICAgdGhpcy50YXJnZXRSZWYgPSBudWxsXHJcbiAgICAgICAgdGhpcy5yZWxhdGlvbnNoaXBUeXBlID0gcmVsYXRpb25zaGlwVHlwZVxyXG4gICAgfVxyXG5cclxuICAgIHNldFNvdXJjZVJlZihyZWYpIHtcclxuICAgICAgICBpZiAocmVmIGluc3RhbmNlb2YgQmFzZU9iamVjdClcclxuICAgICAgICAgICAgdGhpcy5zb3VyY2VSZWYgPSByZWYuaWRcclxuICAgICAgICBlbHNlXHJcbiAgICAgICAgICAgIHRoaXMuc291cmNlUmVmID0gcmVmXHJcbiAgICB9XHJcblxyXG4gICAgc2V0VGFyZ2V0UmVmKHJlZikge1xyXG4gICAgICAgIGlmIChyZWYgaW5zdGFuY2VvZiBCYXNlT2JqZWN0KVxyXG4gICAgICAgICAgICB0aGlzLnRhcmdldFJlZiA9IHJlZi5pZFxyXG4gICAgICAgIGVsc2VcclxuICAgICAgICAgICAgdGhpcy50YXJnZXRSZWYgPSByZWZcclxuICAgIH1cclxuXHJcbiAgICB0b0pTT04oKSB7XHJcbiAgICAgICAgaWYgKCF0aGlzLnJlbGF0aW9uc2hpcFR5cGUpXHJcbiAgICAgICAgICAgIHRocm93IEVycm9yKGBTVElYIDIuMCByZXF1aXJlcyBhIHJlbGF0aW9uc2hpcCB0eXBlIWApXHJcbiAgICAgICAgaWYgKCF0aGlzLnNvdXJjZVJlZilcclxuICAgICAgICAgICAgdGhyb3cgRXJyb3IoYFNUSVggMi4wIHJlcXVpcmVzIGEgc291cmNlIHJlZmVyZW5jZSFgKVxyXG4gICAgICAgIGlmICghdGhpcy50YXJnZXRSZWYpXHJcbiAgICAgICAgICAgIHRocm93IEVycm9yKGBTVElYIDIuMCByZXF1aXJlcyBhIHRhcmdldCByZWZlcmVuY2UhYClcclxuXHJcbiAgICAgICAgbGV0IG91dHB1dCA9IHN1cGVyLnRvSlNPTigpXHJcbiAgICAgICAgb3V0cHV0LnJlbGF0aW9uc2hpcF90eXBlID0gdGhpcy5yZWxhdGlvbnNoaXBUeXBlXHJcbiAgICAgICAgb3V0cHV0LnNvdXJjZV9yZWYgPSB0aGlzLnNvdXJjZVJlZlxyXG4gICAgICAgIG91dHB1dC50YXJnZXRfcmVmID0gdGhpcy50YXJnZXRSZWZcclxuXHJcbiAgICAgICAgaWYgKHRoaXMuZGVzY3JpcHRpb24pXHJcbiAgICAgICAgICAgIG91dHB1dC5kZXNjcmlwdGlvbiA9IHRoaXMuZGVzY3JpcHRpb25cclxuXHJcbiAgICAgICAgcmV0dXJuIG91dHB1dFxyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBSZWxhdGlvbnNoaXAiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "relationship.js"
      ],
      "names": [
        "Relationship",
        "relationshipType",
        "targetRef",
        "ref",
        "BaseObject",
        "sourceRef",
        "id",
        "Error",
        "output",
        "relationship_type",
        "source_ref",
        "target_ref",
        "description"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;IAEMA,Y;;;;;AAOF,wBAAYC,gBAAZ,EAA8B;AAAA;;AAAA;;AAC1B,sFAAM,cAAN;;AAD0B,uEALX,IAKW;;AAAA,kEAJhB,IAIgB;;AAAA,gEAHlB,IAGkB;;AAAA,gEAFlB,IAEkB;;AAG1B,UAAKC,SAAL,GAAiB,IAAjB;AACA,UAAKD,gBAAL,GAAwBA,gBAAxB;AAJ0B;AAK7B;;;;iCAEYE,G,EAAK;AACd,UAAIA,GAAG,YAAYC,sBAAnB,EACI,KAAKC,SAAL,GAAiBF,GAAG,CAACG,EAArB,CADJ,KAGI,KAAKD,SAAL,GAAiBF,GAAjB;AACP;;;iCAEYA,G,EAAK;AACd,UAAIA,GAAG,YAAYC,sBAAnB,EACI,KAAKF,SAAL,GAAiBC,GAAG,CAACG,EAArB,CADJ,KAGI,KAAKJ,SAAL,GAAiBC,GAAjB;AACP;;;6BAEQ;AACL,UAAI,CAAC,KAAKF,gBAAV,EACI,MAAMM,KAAK,0CAAX;AACJ,UAAI,CAAC,KAAKF,SAAV,EACI,MAAME,KAAK,yCAAX;AACJ,UAAI,CAAC,KAAKL,SAAV,EACI,MAAMK,KAAK,yCAAX;;AAEJ,UAAIC,MAAM,2EAAV;;AACAA,MAAAA,MAAM,CAACC,iBAAP,GAA2B,KAAKR,gBAAhC;AACAO,MAAAA,MAAM,CAACE,UAAP,GAAoB,KAAKL,SAAzB;AACAG,MAAAA,MAAM,CAACG,UAAP,GAAoB,KAAKT,SAAzB;AAEA,UAAI,KAAKU,WAAT,EACIJ,MAAM,CAACI,WAAP,GAAqB,KAAKA,WAA1B;AAEJ,aAAOJ,MAAP;AACH;;;;EA7CsBJ,sB;;eAgDZJ,Y",
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects",
      "sourcesContent": [
        "import { BaseObject } from \"./baseObject\"\r\n\r\nclass Relationship extends BaseObject {\r\n\r\n    relationshipType = null\r\n    description = null\r\n    sourceRef = null\r\n    targetRef = null\r\n    \r\n    constructor(relationshipType) {\r\n        super('relationship')\r\n\r\n        this.targetRef = null\r\n        this.relationshipType = relationshipType\r\n    }\r\n\r\n    setSourceRef(ref) {\r\n        if (ref instanceof BaseObject)\r\n            this.sourceRef = ref.id\r\n        else\r\n            this.sourceRef = ref\r\n    }\r\n\r\n    setTargetRef(ref) {\r\n        if (ref instanceof BaseObject)\r\n            this.targetRef = ref.id\r\n        else\r\n            this.targetRef = ref\r\n    }\r\n\r\n    toJSON() {\r\n        if (!this.relationshipType)\r\n            throw Error(`STIX 2.0 requires a relationship type!`)\r\n        if (!this.sourceRef)\r\n            throw Error(`STIX 2.0 requires a source reference!`)\r\n        if (!this.targetRef)\r\n            throw Error(`STIX 2.0 requires a target reference!`)\r\n\r\n        let output = super.toJSON()\r\n        output.relationship_type = this.relationshipType\r\n        output.source_ref = this.sourceRef\r\n        output.target_ref = this.targetRef\r\n\r\n        if (this.description)\r\n            output.description = this.description\r\n\r\n        return output\r\n    }\r\n}\r\n\r\nexport default Relationship"
      ]
    },
    "sourceType": "script",
    "mtime": 1565912601987
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\lib\\\\objects\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"filename\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\lib\\\\objects\\\\report.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects\\report.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects\\report.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects\\report.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects",
        "sourceFileName": "report.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _baseObject = require(\"./baseObject\");\n\nvar _vocabulary = require(\"../definitions/vocabulary\");\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar Report =\n/*#__PURE__*/\nfunction (_BaseObject) {\n  _inherits(Report, _BaseObject);\n\n  function Report(name) {\n    var _this;\n\n    _classCallCheck(this, Report);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Report).call(this, 'report'));\n\n    _defineProperty(_assertThisInitialized(_this), \"name\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"description\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"published\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"objectRefs\", []);\n\n    _this.name = name;\n    return _this;\n  }\n\n  _createClass(Report, [{\n    key: \"addObjectRef\",\n    value: function addObjectRef(ref) {\n      if (ref.indexOf('--') === -1) throw Error('Invalid object identifier!');\n      this.objectRefs.push(ref);\n    }\n  }, {\n    key: \"addLabel\",\n    value: function addLabel(label) {\n      if (Object.values(_vocabulary.ReportLabels).indexOf(label.toLowerCase()) === -1) throw Error(\"Invalid report label! Must be one of the following: \".concat(Array(Object.values(_vocabulary.ReportLabels)).join(', ')));\n      this.labels.push(label.toLowerCase());\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      if (!this.labels) throw Error(\"STIX 2.0 requires report labels!\");\n      if (!this.name) throw Error(\"STIX 2.0 requires a report name!\");\n      if (!this.published) throw Error(\"STIX 2.0 requires a published timestamp!\");\n      if (!this.objectRefs || this.objectRefs.length === 0) throw Error(\"STIX 2.0 requires at least 1 object reference!\");\n\n      var output = _get(_getPrototypeOf(Report.prototype), \"toJSON\", this).call(this);\n\n      output.name = this.name;\n      output.published = this.published;\n      output.object_refs = this.objectRefs;\n      if (this.description) output.description = this.description;\n      if (this.labels) output.labels = labels;\n      return output;\n    }\n  }]);\n\n  return Report;\n}(_baseObject.BaseObject);\n\nvar _default = Report;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlcG9ydC5qcyJdLCJuYW1lcyI6WyJSZXBvcnQiLCJuYW1lIiwicmVmIiwiaW5kZXhPZiIsIkVycm9yIiwib2JqZWN0UmVmcyIsInB1c2giLCJsYWJlbCIsIk9iamVjdCIsInZhbHVlcyIsIlJlcG9ydExhYmVscyIsInRvTG93ZXJDYXNlIiwiQXJyYXkiLCJqb2luIiwibGFiZWxzIiwicHVibGlzaGVkIiwibGVuZ3RoIiwib3V0cHV0Iiwib2JqZWN0X3JlZnMiLCJkZXNjcmlwdGlvbiIsIkJhc2VPYmplY3QiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFFTUEsTTs7Ozs7QUFPRixrQkFBWUMsSUFBWixFQUFrQjtBQUFBOztBQUFBOztBQUNkLGdGQUFNLFFBQU47O0FBRGMsMkRBTFgsSUFLVzs7QUFBQSxrRUFKSixJQUlJOztBQUFBLGdFQUhOLElBR007O0FBQUEsaUVBRkwsRUFFSzs7QUFHZCxVQUFLQSxJQUFMLEdBQVlBLElBQVo7QUFIYztBQUlqQjs7OztpQ0FFWUMsRyxFQUFLO0FBQ2QsVUFBSUEsR0FBRyxDQUFDQyxPQUFKLENBQVksSUFBWixNQUFzQixDQUFDLENBQTNCLEVBQ0ksTUFBTUMsS0FBSyxDQUFDLDRCQUFELENBQVg7QUFFSixXQUFLQyxVQUFMLENBQWdCQyxJQUFoQixDQUFxQkosR0FBckI7QUFDSDs7OzZCQUVRSyxLLEVBQU87QUFDWixVQUFJQyxNQUFNLENBQUNDLE1BQVAsQ0FBY0Msd0JBQWQsRUFBNEJQLE9BQTVCLENBQW9DSSxLQUFLLENBQUNJLFdBQU4sRUFBcEMsTUFBNkQsQ0FBQyxDQUFsRSxFQUNJLE1BQU1QLEtBQUssK0RBQXdEUSxLQUFLLENBQUNKLE1BQU0sQ0FBQ0MsTUFBUCxDQUFjQyx3QkFBZCxDQUFELENBQUwsQ0FBbUNHLElBQW5DLENBQXdDLElBQXhDLENBQXhELEVBQVg7QUFFSixXQUFLQyxNQUFMLENBQVlSLElBQVosQ0FBaUJDLEtBQUssQ0FBQ0ksV0FBTixFQUFqQjtBQUNIOzs7NkJBRVE7QUFDTCxVQUFJLENBQUMsS0FBS0csTUFBVixFQUNJLE1BQU1WLEtBQUssb0NBQVg7QUFDSixVQUFJLENBQUMsS0FBS0gsSUFBVixFQUNJLE1BQU1HLEtBQUssb0NBQVg7QUFDSixVQUFJLENBQUMsS0FBS1csU0FBVixFQUNJLE1BQU1YLEtBQUssNENBQVg7QUFDSixVQUFJLENBQUMsS0FBS0MsVUFBTixJQUFvQixLQUFLQSxVQUFMLENBQWdCVyxNQUFoQixLQUEyQixDQUFuRCxFQUNJLE1BQU1aLEtBQUssa0RBQVg7O0FBRUosVUFBSWEsTUFBTSxxRUFBVjs7QUFDQUEsTUFBQUEsTUFBTSxDQUFDaEIsSUFBUCxHQUFjLEtBQUtBLElBQW5CO0FBQ0FnQixNQUFBQSxNQUFNLENBQUNGLFNBQVAsR0FBbUIsS0FBS0EsU0FBeEI7QUFDQUUsTUFBQUEsTUFBTSxDQUFDQyxXQUFQLEdBQXFCLEtBQUtiLFVBQTFCO0FBRUEsVUFBSSxLQUFLYyxXQUFULEVBQ0lGLE1BQU0sQ0FBQ0UsV0FBUCxHQUFxQixLQUFLQSxXQUExQjtBQUNKLFVBQUksS0FBS0wsTUFBVCxFQUNJRyxNQUFNLENBQUNILE1BQVAsR0FBZ0JBLE1BQWhCO0FBRUosYUFBT0csTUFBUDtBQUNIOzs7O0VBaERnQkcsc0I7O2VBbUROcEIsTSIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXFphY2ggU2hhbWVzXFxEb2N1bWVudHNcXERldmVsb3BtZW50XFxqcy0yLXN0aXhcXGxpYlxcb2JqZWN0cyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJhc2VPYmplY3QgfSBmcm9tIFwiLi9iYXNlT2JqZWN0XCJcclxuaW1wb3J0IHsgUmVwb3J0TGFiZWxzIH0gZnJvbSAnLi4vZGVmaW5pdGlvbnMvdm9jYWJ1bGFyeSdcclxuXHJcbmNsYXNzIFJlcG9ydCBleHRlbmRzIEJhc2VPYmplY3Qge1xyXG5cclxuICAgIG5hbWUgPSBudWxsXHJcbiAgICBkZXNjcmlwdGlvbiA9IG51bGxcclxuICAgIHB1Ymxpc2hlZCA9IG51bGxcclxuICAgIG9iamVjdFJlZnMgPSBbXVxyXG4gICAgXHJcbiAgICBjb25zdHJ1Y3RvcihuYW1lKSB7XHJcbiAgICAgICAgc3VwZXIoJ3JlcG9ydCcpXHJcblxyXG4gICAgICAgIHRoaXMubmFtZSA9IG5hbWVcclxuICAgIH1cclxuXHJcbiAgICBhZGRPYmplY3RSZWYocmVmKSB7XHJcbiAgICAgICAgaWYgKHJlZi5pbmRleE9mKCctLScpID09PSAtMSlcclxuICAgICAgICAgICAgdGhyb3cgRXJyb3IoJ0ludmFsaWQgb2JqZWN0IGlkZW50aWZpZXIhJylcclxuXHJcbiAgICAgICAgdGhpcy5vYmplY3RSZWZzLnB1c2gocmVmKVxyXG4gICAgfVxyXG5cclxuICAgIGFkZExhYmVsKGxhYmVsKSB7XHJcbiAgICAgICAgaWYgKE9iamVjdC52YWx1ZXMoUmVwb3J0TGFiZWxzKS5pbmRleE9mKGxhYmVsLnRvTG93ZXJDYXNlKCkpID09PSAtMSlcclxuICAgICAgICAgICAgdGhyb3cgRXJyb3IoYEludmFsaWQgcmVwb3J0IGxhYmVsISBNdXN0IGJlIG9uZSBvZiB0aGUgZm9sbG93aW5nOiAke0FycmF5KE9iamVjdC52YWx1ZXMoUmVwb3J0TGFiZWxzKSkuam9pbignLCAnKX1gKVxyXG5cclxuICAgICAgICB0aGlzLmxhYmVscy5wdXNoKGxhYmVsLnRvTG93ZXJDYXNlKCkpXHJcbiAgICB9XHJcblxyXG4gICAgdG9KU09OKCkge1xyXG4gICAgICAgIGlmICghdGhpcy5sYWJlbHMpXHJcbiAgICAgICAgICAgIHRocm93IEVycm9yKGBTVElYIDIuMCByZXF1aXJlcyByZXBvcnQgbGFiZWxzIWApXHJcbiAgICAgICAgaWYgKCF0aGlzLm5hbWUpXHJcbiAgICAgICAgICAgIHRocm93IEVycm9yKGBTVElYIDIuMCByZXF1aXJlcyBhIHJlcG9ydCBuYW1lIWApXHJcbiAgICAgICAgaWYgKCF0aGlzLnB1Ymxpc2hlZClcclxuICAgICAgICAgICAgdGhyb3cgRXJyb3IoYFNUSVggMi4wIHJlcXVpcmVzIGEgcHVibGlzaGVkIHRpbWVzdGFtcCFgKVxyXG4gICAgICAgIGlmICghdGhpcy5vYmplY3RSZWZzIHx8IHRoaXMub2JqZWN0UmVmcy5sZW5ndGggPT09IDApXHJcbiAgICAgICAgICAgIHRocm93IEVycm9yKGBTVElYIDIuMCByZXF1aXJlcyBhdCBsZWFzdCAxIG9iamVjdCByZWZlcmVuY2UhYClcclxuXHJcbiAgICAgICAgbGV0IG91dHB1dCA9IHN1cGVyLnRvSlNPTigpXHJcbiAgICAgICAgb3V0cHV0Lm5hbWUgPSB0aGlzLm5hbWVcclxuICAgICAgICBvdXRwdXQucHVibGlzaGVkID0gdGhpcy5wdWJsaXNoZWRcclxuICAgICAgICBvdXRwdXQub2JqZWN0X3JlZnMgPSB0aGlzLm9iamVjdFJlZnNcclxuXHJcbiAgICAgICAgaWYgKHRoaXMuZGVzY3JpcHRpb24pXHJcbiAgICAgICAgICAgIG91dHB1dC5kZXNjcmlwdGlvbiA9IHRoaXMuZGVzY3JpcHRpb25cclxuICAgICAgICBpZiAodGhpcy5sYWJlbHMpXHJcbiAgICAgICAgICAgIG91dHB1dC5sYWJlbHMgPSBsYWJlbHNcclxuXHJcbiAgICAgICAgcmV0dXJuIG91dHB1dFxyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBSZXBvcnQiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "report.js"
      ],
      "names": [
        "Report",
        "name",
        "ref",
        "indexOf",
        "Error",
        "objectRefs",
        "push",
        "label",
        "Object",
        "values",
        "ReportLabels",
        "toLowerCase",
        "Array",
        "join",
        "labels",
        "published",
        "length",
        "output",
        "object_refs",
        "description",
        "BaseObject"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;IAEMA,M;;;;;AAOF,kBAAYC,IAAZ,EAAkB;AAAA;;AAAA;;AACd,gFAAM,QAAN;;AADc,2DALX,IAKW;;AAAA,kEAJJ,IAII;;AAAA,gEAHN,IAGM;;AAAA,iEAFL,EAEK;;AAGd,UAAKA,IAAL,GAAYA,IAAZ;AAHc;AAIjB;;;;iCAEYC,G,EAAK;AACd,UAAIA,GAAG,CAACC,OAAJ,CAAY,IAAZ,MAAsB,CAAC,CAA3B,EACI,MAAMC,KAAK,CAAC,4BAAD,CAAX;AAEJ,WAAKC,UAAL,CAAgBC,IAAhB,CAAqBJ,GAArB;AACH;;;6BAEQK,K,EAAO;AACZ,UAAIC,MAAM,CAACC,MAAP,CAAcC,wBAAd,EAA4BP,OAA5B,CAAoCI,KAAK,CAACI,WAAN,EAApC,MAA6D,CAAC,CAAlE,EACI,MAAMP,KAAK,+DAAwDQ,KAAK,CAACJ,MAAM,CAACC,MAAP,CAAcC,wBAAd,CAAD,CAAL,CAAmCG,IAAnC,CAAwC,IAAxC,CAAxD,EAAX;AAEJ,WAAKC,MAAL,CAAYR,IAAZ,CAAiBC,KAAK,CAACI,WAAN,EAAjB;AACH;;;6BAEQ;AACL,UAAI,CAAC,KAAKG,MAAV,EACI,MAAMV,KAAK,oCAAX;AACJ,UAAI,CAAC,KAAKH,IAAV,EACI,MAAMG,KAAK,oCAAX;AACJ,UAAI,CAAC,KAAKW,SAAV,EACI,MAAMX,KAAK,4CAAX;AACJ,UAAI,CAAC,KAAKC,UAAN,IAAoB,KAAKA,UAAL,CAAgBW,MAAhB,KAA2B,CAAnD,EACI,MAAMZ,KAAK,kDAAX;;AAEJ,UAAIa,MAAM,qEAAV;;AACAA,MAAAA,MAAM,CAAChB,IAAP,GAAc,KAAKA,IAAnB;AACAgB,MAAAA,MAAM,CAACF,SAAP,GAAmB,KAAKA,SAAxB;AACAE,MAAAA,MAAM,CAACC,WAAP,GAAqB,KAAKb,UAA1B;AAEA,UAAI,KAAKc,WAAT,EACIF,MAAM,CAACE,WAAP,GAAqB,KAAKA,WAA1B;AACJ,UAAI,KAAKL,MAAT,EACIG,MAAM,CAACH,MAAP,GAAgBA,MAAhB;AAEJ,aAAOG,MAAP;AACH;;;;EAhDgBG,sB;;eAmDNpB,M",
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects",
      "sourcesContent": [
        "import { BaseObject } from \"./baseObject\"\r\nimport { ReportLabels } from '../definitions/vocabulary'\r\n\r\nclass Report extends BaseObject {\r\n\r\n    name = null\r\n    description = null\r\n    published = null\r\n    objectRefs = []\r\n    \r\n    constructor(name) {\r\n        super('report')\r\n\r\n        this.name = name\r\n    }\r\n\r\n    addObjectRef(ref) {\r\n        if (ref.indexOf('--') === -1)\r\n            throw Error('Invalid object identifier!')\r\n\r\n        this.objectRefs.push(ref)\r\n    }\r\n\r\n    addLabel(label) {\r\n        if (Object.values(ReportLabels).indexOf(label.toLowerCase()) === -1)\r\n            throw Error(`Invalid report label! Must be one of the following: ${Array(Object.values(ReportLabels)).join(', ')}`)\r\n\r\n        this.labels.push(label.toLowerCase())\r\n    }\r\n\r\n    toJSON() {\r\n        if (!this.labels)\r\n            throw Error(`STIX 2.0 requires report labels!`)\r\n        if (!this.name)\r\n            throw Error(`STIX 2.0 requires a report name!`)\r\n        if (!this.published)\r\n            throw Error(`STIX 2.0 requires a published timestamp!`)\r\n        if (!this.objectRefs || this.objectRefs.length === 0)\r\n            throw Error(`STIX 2.0 requires at least 1 object reference!`)\r\n\r\n        let output = super.toJSON()\r\n        output.name = this.name\r\n        output.published = this.published\r\n        output.object_refs = this.objectRefs\r\n\r\n        if (this.description)\r\n            output.description = this.description\r\n        if (this.labels)\r\n            output.labels = labels\r\n\r\n        return output\r\n    }\r\n}\r\n\r\nexport default Report"
      ]
    },
    "sourceType": "script",
    "mtime": 1565912413546
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\lib\\\\objects\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"filename\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\lib\\\\objects\\\\sighting.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects\\sighting.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects\\sighting.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects\\sighting.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects",
        "sourceFileName": "sighting.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _baseObject = require(\"./baseObject\");\n\nvar _observedData = require(\"./observedData\");\n\nvar _identity = require(\"./identity\");\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar Sighting =\n/*#__PURE__*/\nfunction (_BaseObject) {\n  _inherits(Sighting, _BaseObject);\n\n  function Sighting(sightingOfRef) {\n    var _this;\n\n    _classCallCheck(this, Sighting);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Sighting).call(this, 'sighting'));\n\n    _defineProperty(_assertThisInitialized(_this), \"count\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"firstSeen\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"lastSeen\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"sightingOfRef\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"observedDataRefs\", []);\n\n    _defineProperty(_assertThisInitialized(_this), \"whereSightedRefs\", []);\n\n    _defineProperty(_assertThisInitialized(_this), \"summary\", false);\n\n    _this.sightingOfRef = sightingOfRef;\n    return _this;\n  }\n\n  _createClass(Sighting, [{\n    key: \"setCount\",\n    value: function setCount(value) {\n      if (!(value instanceof Number)) throw Error('You can only set the sighting count to a number!');\n      this.count = value;\n    }\n  }, {\n    key: \"setSummary\",\n    value: function setSummary(value) {\n      if (!(value instanceof Boolean)) throw Error('You can only set summary to a boolean (true/false)!');\n      this.count = value;\n    }\n  }, {\n    key: \"setSightingOfRef\",\n    value: function setSightingOfRef(ref) {\n      if (ref instanceof _baseObject.BaseObject) this.sightingOfRef = ref.id;else this.sightingOfRef = ref;\n    }\n  }, {\n    key: \"addObservedDataRef\",\n    value: function addObservedDataRef(ref) {\n      if (ref instanceof _observedData.ObservedData) this.observedDataRefs.push(ref.id);else this.observedDataRefs.push(ref);\n    }\n  }, {\n    key: \"addWhereSightedRefs\",\n    value: function addWhereSightedRefs(ref) {\n      if (ref instanceof _identity.Identity) this.observedDataRefs.push(ref.id);else this.observedDataRefs.push(ref);\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      if (!this.sightingOfRef) throw Error(\"STIX 2.0 requires a reference to the object sighted!\");\n\n      var output = _get(_getPrototypeOf(Sighting.prototype), \"toJSON\", this).call(this);\n\n      output.sighting_of_ref = this.sightingOfRef;\n      output.summary = this.summary;\n      if (this.firstSeen) output.first_seen = this.firstSeen;\n      if (this.lastSeen) output.last_seen = this.lastSeen;\n      if (this.count) output.count = this.count;\n      if (this.observedDataRefs && this.observedDataRefs.length > 0) output.observed_data_refs = this.observedDataRefs;\n      if (this.whereSightedRefs && this.whereSightedRefs.length > 0) output.where_sighted_refs = this.whereSightedRefs;\n      return output;\n    }\n  }]);\n\n  return Sighting;\n}(_baseObject.BaseObject);\n\nvar _default = Sighting;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNpZ2h0aW5nLmpzIl0sIm5hbWVzIjpbIlNpZ2h0aW5nIiwic2lnaHRpbmdPZlJlZiIsInZhbHVlIiwiTnVtYmVyIiwiRXJyb3IiLCJjb3VudCIsIkJvb2xlYW4iLCJyZWYiLCJCYXNlT2JqZWN0IiwiaWQiLCJPYnNlcnZlZERhdGEiLCJvYnNlcnZlZERhdGFSZWZzIiwicHVzaCIsIklkZW50aXR5Iiwib3V0cHV0Iiwic2lnaHRpbmdfb2ZfcmVmIiwic3VtbWFyeSIsImZpcnN0U2VlbiIsImZpcnN0X3NlZW4iLCJsYXN0U2VlbiIsImxhc3Rfc2VlbiIsImxlbmd0aCIsIm9ic2VydmVkX2RhdGFfcmVmcyIsIndoZXJlU2lnaHRlZFJlZnMiLCJ3aGVyZV9zaWdodGVkX3JlZnMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFFTUEsUTs7Ozs7QUFVRixvQkFBWUMsYUFBWixFQUEyQjtBQUFBOztBQUFBOztBQUN2QixrRkFBTSxVQUFOOztBQUR1Qiw0REFSbkIsQ0FRbUI7O0FBQUEsZ0VBUGYsSUFPZTs7QUFBQSwrREFOaEIsSUFNZ0I7O0FBQUEsb0VBTFgsSUFLVzs7QUFBQSx1RUFKUixFQUlROztBQUFBLHVFQUhSLEVBR1E7O0FBQUEsOERBRmpCLEtBRWlCOztBQUd2QixVQUFLQSxhQUFMLEdBQXFCQSxhQUFyQjtBQUh1QjtBQUkxQjs7Ozs2QkFFUUMsSyxFQUFPO0FBQ1osVUFBSSxFQUFFQSxLQUFLLFlBQVlDLE1BQW5CLENBQUosRUFDSSxNQUFNQyxLQUFLLENBQUMsa0RBQUQsQ0FBWDtBQUVKLFdBQUtDLEtBQUwsR0FBYUgsS0FBYjtBQUNIOzs7K0JBRVVBLEssRUFBTztBQUNkLFVBQUksRUFBRUEsS0FBSyxZQUFZSSxPQUFuQixDQUFKLEVBQ0ksTUFBTUYsS0FBSyxDQUFDLHFEQUFELENBQVg7QUFFSixXQUFLQyxLQUFMLEdBQWFILEtBQWI7QUFDSDs7O3FDQUVnQkssRyxFQUFLO0FBQ2xCLFVBQUlBLEdBQUcsWUFBWUMsc0JBQW5CLEVBQ0ksS0FBS1AsYUFBTCxHQUFxQk0sR0FBRyxDQUFDRSxFQUF6QixDQURKLEtBR0ksS0FBS1IsYUFBTCxHQUFxQk0sR0FBckI7QUFDUDs7O3VDQUVrQkEsRyxFQUFLO0FBQ3BCLFVBQUlBLEdBQUcsWUFBWUcsMEJBQW5CLEVBQ0ksS0FBS0MsZ0JBQUwsQ0FBc0JDLElBQXRCLENBQTJCTCxHQUFHLENBQUNFLEVBQS9CLEVBREosS0FHSSxLQUFLRSxnQkFBTCxDQUFzQkMsSUFBdEIsQ0FBMkJMLEdBQTNCO0FBQ1A7Ozt3Q0FFbUJBLEcsRUFBSztBQUNyQixVQUFJQSxHQUFHLFlBQVlNLGtCQUFuQixFQUNJLEtBQUtGLGdCQUFMLENBQXNCQyxJQUF0QixDQUEyQkwsR0FBRyxDQUFDRSxFQUEvQixFQURKLEtBR0ksS0FBS0UsZ0JBQUwsQ0FBc0JDLElBQXRCLENBQTJCTCxHQUEzQjtBQUNQOzs7NkJBRVE7QUFDTCxVQUFJLENBQUMsS0FBS04sYUFBVixFQUNJLE1BQU1HLEtBQUssd0RBQVg7O0FBRUosVUFBSVUsTUFBTSx1RUFBVjs7QUFDQUEsTUFBQUEsTUFBTSxDQUFDQyxlQUFQLEdBQXlCLEtBQUtkLGFBQTlCO0FBQ0FhLE1BQUFBLE1BQU0sQ0FBQ0UsT0FBUCxHQUFpQixLQUFLQSxPQUF0QjtBQUVBLFVBQUksS0FBS0MsU0FBVCxFQUNJSCxNQUFNLENBQUNJLFVBQVAsR0FBb0IsS0FBS0QsU0FBekI7QUFDSixVQUFJLEtBQUtFLFFBQVQsRUFDSUwsTUFBTSxDQUFDTSxTQUFQLEdBQW1CLEtBQUtELFFBQXhCO0FBQ0osVUFBSSxLQUFLZCxLQUFULEVBQ0lTLE1BQU0sQ0FBQ1QsS0FBUCxHQUFlLEtBQUtBLEtBQXBCO0FBQ0osVUFBSSxLQUFLTSxnQkFBTCxJQUF5QixLQUFLQSxnQkFBTCxDQUFzQlUsTUFBdEIsR0FBK0IsQ0FBNUQsRUFDSVAsTUFBTSxDQUFDUSxrQkFBUCxHQUE0QixLQUFLWCxnQkFBakM7QUFDSixVQUFJLEtBQUtZLGdCQUFMLElBQXlCLEtBQUtBLGdCQUFMLENBQXNCRixNQUF0QixHQUErQixDQUE1RCxFQUNJUCxNQUFNLENBQUNVLGtCQUFQLEdBQTRCLEtBQUtELGdCQUFqQztBQUVKLGFBQU9ULE1BQVA7QUFDSDs7OztFQXZFa0JOLHNCOztlQTBFUlIsUSIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXFphY2ggU2hhbWVzXFxEb2N1bWVudHNcXERldmVsb3BtZW50XFxqcy0yLXN0aXhcXGxpYlxcb2JqZWN0cyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJhc2VPYmplY3QgfSBmcm9tIFwiLi9iYXNlT2JqZWN0XCJcclxuaW1wb3J0IHsgT2JzZXJ2ZWREYXRhIH0gZnJvbSAnLi9vYnNlcnZlZERhdGEnXHJcbmltcG9ydCB7IElkZW50aXR5IH0gZnJvbSAnLi9pZGVudGl0eSdcclxuXHJcbmNsYXNzIFNpZ2h0aW5nIGV4dGVuZHMgQmFzZU9iamVjdCB7XHJcblxyXG4gICAgY291bnQgPSAwXHJcbiAgICBmaXJzdFNlZW4gPSBudWxsXHJcbiAgICBsYXN0U2VlbiA9IG51bGxcclxuICAgIHNpZ2h0aW5nT2ZSZWYgPSBudWxsXHJcbiAgICBvYnNlcnZlZERhdGFSZWZzID0gW11cclxuICAgIHdoZXJlU2lnaHRlZFJlZnMgPSBbXVxyXG4gICAgc3VtbWFyeSA9IGZhbHNlXHJcblxyXG4gICAgY29uc3RydWN0b3Ioc2lnaHRpbmdPZlJlZikge1xyXG4gICAgICAgIHN1cGVyKCdzaWdodGluZycpXHJcblxyXG4gICAgICAgIHRoaXMuc2lnaHRpbmdPZlJlZiA9IHNpZ2h0aW5nT2ZSZWZcclxuICAgIH1cclxuXHJcbiAgICBzZXRDb3VudCh2YWx1ZSkge1xyXG4gICAgICAgIGlmICghKHZhbHVlIGluc3RhbmNlb2YgTnVtYmVyKSlcclxuICAgICAgICAgICAgdGhyb3cgRXJyb3IoJ1lvdSBjYW4gb25seSBzZXQgdGhlIHNpZ2h0aW5nIGNvdW50IHRvIGEgbnVtYmVyIScpXHJcblxyXG4gICAgICAgIHRoaXMuY291bnQgPSB2YWx1ZVxyXG4gICAgfVxyXG5cclxuICAgIHNldFN1bW1hcnkodmFsdWUpIHtcclxuICAgICAgICBpZiAoISh2YWx1ZSBpbnN0YW5jZW9mIEJvb2xlYW4pKVxyXG4gICAgICAgICAgICB0aHJvdyBFcnJvcignWW91IGNhbiBvbmx5IHNldCBzdW1tYXJ5IHRvIGEgYm9vbGVhbiAodHJ1ZS9mYWxzZSkhJylcclxuXHJcbiAgICAgICAgdGhpcy5jb3VudCA9IHZhbHVlXHJcbiAgICB9XHJcblxyXG4gICAgc2V0U2lnaHRpbmdPZlJlZihyZWYpIHtcclxuICAgICAgICBpZiAocmVmIGluc3RhbmNlb2YgQmFzZU9iamVjdClcclxuICAgICAgICAgICAgdGhpcy5zaWdodGluZ09mUmVmID0gcmVmLmlkXHJcbiAgICAgICAgZWxzZVxyXG4gICAgICAgICAgICB0aGlzLnNpZ2h0aW5nT2ZSZWYgPSByZWZcclxuICAgIH1cclxuXHJcbiAgICBhZGRPYnNlcnZlZERhdGFSZWYocmVmKSB7XHJcbiAgICAgICAgaWYgKHJlZiBpbnN0YW5jZW9mIE9ic2VydmVkRGF0YSlcclxuICAgICAgICAgICAgdGhpcy5vYnNlcnZlZERhdGFSZWZzLnB1c2gocmVmLmlkKVxyXG4gICAgICAgIGVsc2VcclxuICAgICAgICAgICAgdGhpcy5vYnNlcnZlZERhdGFSZWZzLnB1c2gocmVmKVxyXG4gICAgfVxyXG5cclxuICAgIGFkZFdoZXJlU2lnaHRlZFJlZnMocmVmKSB7XHJcbiAgICAgICAgaWYgKHJlZiBpbnN0YW5jZW9mIElkZW50aXR5KVxyXG4gICAgICAgICAgICB0aGlzLm9ic2VydmVkRGF0YVJlZnMucHVzaChyZWYuaWQpXHJcbiAgICAgICAgZWxzZVxyXG4gICAgICAgICAgICB0aGlzLm9ic2VydmVkRGF0YVJlZnMucHVzaChyZWYpXHJcbiAgICB9XHJcblxyXG4gICAgdG9KU09OKCkge1xyXG4gICAgICAgIGlmICghdGhpcy5zaWdodGluZ09mUmVmKVxyXG4gICAgICAgICAgICB0aHJvdyBFcnJvcihgU1RJWCAyLjAgcmVxdWlyZXMgYSByZWZlcmVuY2UgdG8gdGhlIG9iamVjdCBzaWdodGVkIWApXHJcblxyXG4gICAgICAgIGxldCBvdXRwdXQgPSBzdXBlci50b0pTT04oKVxyXG4gICAgICAgIG91dHB1dC5zaWdodGluZ19vZl9yZWYgPSB0aGlzLnNpZ2h0aW5nT2ZSZWZcclxuICAgICAgICBvdXRwdXQuc3VtbWFyeSA9IHRoaXMuc3VtbWFyeVxyXG5cclxuICAgICAgICBpZiAodGhpcy5maXJzdFNlZW4pXHJcbiAgICAgICAgICAgIG91dHB1dC5maXJzdF9zZWVuID0gdGhpcy5maXJzdFNlZW5cclxuICAgICAgICBpZiAodGhpcy5sYXN0U2VlbilcclxuICAgICAgICAgICAgb3V0cHV0Lmxhc3Rfc2VlbiA9IHRoaXMubGFzdFNlZW5cclxuICAgICAgICBpZiAodGhpcy5jb3VudClcclxuICAgICAgICAgICAgb3V0cHV0LmNvdW50ID0gdGhpcy5jb3VudFxyXG4gICAgICAgIGlmICh0aGlzLm9ic2VydmVkRGF0YVJlZnMgJiYgdGhpcy5vYnNlcnZlZERhdGFSZWZzLmxlbmd0aCA+IDApXHJcbiAgICAgICAgICAgIG91dHB1dC5vYnNlcnZlZF9kYXRhX3JlZnMgPSB0aGlzLm9ic2VydmVkRGF0YVJlZnNcclxuICAgICAgICBpZiAodGhpcy53aGVyZVNpZ2h0ZWRSZWZzICYmIHRoaXMud2hlcmVTaWdodGVkUmVmcy5sZW5ndGggPiAwKVxyXG4gICAgICAgICAgICBvdXRwdXQud2hlcmVfc2lnaHRlZF9yZWZzID0gdGhpcy53aGVyZVNpZ2h0ZWRSZWZzXHJcblxyXG4gICAgICAgIHJldHVybiBvdXRwdXRcclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgU2lnaHRpbmciXX0=",
    "map": {
      "version": 3,
      "sources": [
        "sighting.js"
      ],
      "names": [
        "Sighting",
        "sightingOfRef",
        "value",
        "Number",
        "Error",
        "count",
        "Boolean",
        "ref",
        "BaseObject",
        "id",
        "ObservedData",
        "observedDataRefs",
        "push",
        "Identity",
        "output",
        "sighting_of_ref",
        "summary",
        "firstSeen",
        "first_seen",
        "lastSeen",
        "last_seen",
        "length",
        "observed_data_refs",
        "whereSightedRefs",
        "where_sighted_refs"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;IAEMA,Q;;;;;AAUF,oBAAYC,aAAZ,EAA2B;AAAA;;AAAA;;AACvB,kFAAM,UAAN;;AADuB,4DARnB,CAQmB;;AAAA,gEAPf,IAOe;;AAAA,+DANhB,IAMgB;;AAAA,oEALX,IAKW;;AAAA,uEAJR,EAIQ;;AAAA,uEAHR,EAGQ;;AAAA,8DAFjB,KAEiB;;AAGvB,UAAKA,aAAL,GAAqBA,aAArB;AAHuB;AAI1B;;;;6BAEQC,K,EAAO;AACZ,UAAI,EAAEA,KAAK,YAAYC,MAAnB,CAAJ,EACI,MAAMC,KAAK,CAAC,kDAAD,CAAX;AAEJ,WAAKC,KAAL,GAAaH,KAAb;AACH;;;+BAEUA,K,EAAO;AACd,UAAI,EAAEA,KAAK,YAAYI,OAAnB,CAAJ,EACI,MAAMF,KAAK,CAAC,qDAAD,CAAX;AAEJ,WAAKC,KAAL,GAAaH,KAAb;AACH;;;qCAEgBK,G,EAAK;AAClB,UAAIA,GAAG,YAAYC,sBAAnB,EACI,KAAKP,aAAL,GAAqBM,GAAG,CAACE,EAAzB,CADJ,KAGI,KAAKR,aAAL,GAAqBM,GAArB;AACP;;;uCAEkBA,G,EAAK;AACpB,UAAIA,GAAG,YAAYG,0BAAnB,EACI,KAAKC,gBAAL,CAAsBC,IAAtB,CAA2BL,GAAG,CAACE,EAA/B,EADJ,KAGI,KAAKE,gBAAL,CAAsBC,IAAtB,CAA2BL,GAA3B;AACP;;;wCAEmBA,G,EAAK;AACrB,UAAIA,GAAG,YAAYM,kBAAnB,EACI,KAAKF,gBAAL,CAAsBC,IAAtB,CAA2BL,GAAG,CAACE,EAA/B,EADJ,KAGI,KAAKE,gBAAL,CAAsBC,IAAtB,CAA2BL,GAA3B;AACP;;;6BAEQ;AACL,UAAI,CAAC,KAAKN,aAAV,EACI,MAAMG,KAAK,wDAAX;;AAEJ,UAAIU,MAAM,uEAAV;;AACAA,MAAAA,MAAM,CAACC,eAAP,GAAyB,KAAKd,aAA9B;AACAa,MAAAA,MAAM,CAACE,OAAP,GAAiB,KAAKA,OAAtB;AAEA,UAAI,KAAKC,SAAT,EACIH,MAAM,CAACI,UAAP,GAAoB,KAAKD,SAAzB;AACJ,UAAI,KAAKE,QAAT,EACIL,MAAM,CAACM,SAAP,GAAmB,KAAKD,QAAxB;AACJ,UAAI,KAAKd,KAAT,EACIS,MAAM,CAACT,KAAP,GAAe,KAAKA,KAApB;AACJ,UAAI,KAAKM,gBAAL,IAAyB,KAAKA,gBAAL,CAAsBU,MAAtB,GAA+B,CAA5D,EACIP,MAAM,CAACQ,kBAAP,GAA4B,KAAKX,gBAAjC;AACJ,UAAI,KAAKY,gBAAL,IAAyB,KAAKA,gBAAL,CAAsBF,MAAtB,GAA+B,CAA5D,EACIP,MAAM,CAACU,kBAAP,GAA4B,KAAKD,gBAAjC;AAEJ,aAAOT,MAAP;AACH;;;;EAvEkBN,sB;;eA0ERR,Q",
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects",
      "sourcesContent": [
        "import { BaseObject } from \"./baseObject\"\r\nimport { ObservedData } from './observedData'\r\nimport { Identity } from './identity'\r\n\r\nclass Sighting extends BaseObject {\r\n\r\n    count = 0\r\n    firstSeen = null\r\n    lastSeen = null\r\n    sightingOfRef = null\r\n    observedDataRefs = []\r\n    whereSightedRefs = []\r\n    summary = false\r\n\r\n    constructor(sightingOfRef) {\r\n        super('sighting')\r\n\r\n        this.sightingOfRef = sightingOfRef\r\n    }\r\n\r\n    setCount(value) {\r\n        if (!(value instanceof Number))\r\n            throw Error('You can only set the sighting count to a number!')\r\n\r\n        this.count = value\r\n    }\r\n\r\n    setSummary(value) {\r\n        if (!(value instanceof Boolean))\r\n            throw Error('You can only set summary to a boolean (true/false)!')\r\n\r\n        this.count = value\r\n    }\r\n\r\n    setSightingOfRef(ref) {\r\n        if (ref instanceof BaseObject)\r\n            this.sightingOfRef = ref.id\r\n        else\r\n            this.sightingOfRef = ref\r\n    }\r\n\r\n    addObservedDataRef(ref) {\r\n        if (ref instanceof ObservedData)\r\n            this.observedDataRefs.push(ref.id)\r\n        else\r\n            this.observedDataRefs.push(ref)\r\n    }\r\n\r\n    addWhereSightedRefs(ref) {\r\n        if (ref instanceof Identity)\r\n            this.observedDataRefs.push(ref.id)\r\n        else\r\n            this.observedDataRefs.push(ref)\r\n    }\r\n\r\n    toJSON() {\r\n        if (!this.sightingOfRef)\r\n            throw Error(`STIX 2.0 requires a reference to the object sighted!`)\r\n\r\n        let output = super.toJSON()\r\n        output.sighting_of_ref = this.sightingOfRef\r\n        output.summary = this.summary\r\n\r\n        if (this.firstSeen)\r\n            output.first_seen = this.firstSeen\r\n        if (this.lastSeen)\r\n            output.last_seen = this.lastSeen\r\n        if (this.count)\r\n            output.count = this.count\r\n        if (this.observedDataRefs && this.observedDataRefs.length > 0)\r\n            output.observed_data_refs = this.observedDataRefs\r\n        if (this.whereSightedRefs && this.whereSightedRefs.length > 0)\r\n            output.where_sighted_refs = this.whereSightedRefs\r\n\r\n        return output\r\n    }\r\n}\r\n\r\nexport default Sighting"
      ]
    },
    "sourceType": "script",
    "mtime": 1565912395183
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\lib\\\\objects\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"filename\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\lib\\\\objects\\\\threatActor.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects\\threatActor.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects\\threatActor.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects\\threatActor.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects",
        "sourceFileName": "threatActor.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _baseObject = require(\"./baseObject\");\n\nvar _vocabulary = require(\"../definitions/vocabulary\");\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar ThreatActor =\n/*#__PURE__*/\nfunction (_BaseObject) {\n  _inherits(ThreatActor, _BaseObject);\n\n  function ThreatActor(name) {\n    var _this;\n\n    _classCallCheck(this, ThreatActor);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ThreatActor).call(this, 'threat-actor'));\n\n    _defineProperty(_assertThisInitialized(_this), \"name\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"description\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"aliases\", []);\n\n    _defineProperty(_assertThisInitialized(_this), \"roles\", []);\n\n    _defineProperty(_assertThisInitialized(_this), \"goals\", []);\n\n    _defineProperty(_assertThisInitialized(_this), \"sophistication\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"resourceLevel\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"primaryMotivation\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"secondaryMotivations\", []);\n\n    _defineProperty(_assertThisInitialized(_this), \"personalMotivations\", []);\n\n    _this.name = name;\n    return _this;\n  }\n\n  _createClass(ThreatActor, [{\n    key: \"setSophistication\",\n    value: function setSophistication(value) {\n      if (Object.values(_vocabulary.ThreatActorSophistications).indexOf(value.toLowerCase()) === -1) throw Error(\"Invalid threat actor sophistication! Must be one of the following: \".concat(Array(Object.values(_vocabulary.ThreatActorSophistications)).join(', ')));\n      this.sophistication = value.toLowerCase();\n    }\n  }, {\n    key: \"setResourceLevel\",\n    value: function setResourceLevel(level) {\n      if (Object.values(_vocabulary.AttackResourceLevels).indexOf(level.toLowerCase()) === -1) throw Error(\"Invalid threat actor resource level! Must be one of the following: \".concat(Array(Object.values(_vocabulary.AttackResourceLevels)).join(', ')));\n      this.resourceLevel = level.toLowerCase();\n    }\n  }, {\n    key: \"addAlias\",\n    value: function addAlias(alias) {\n      if (this.aliases.indexOf(alias) === -1) this.aliases.push(alias);\n    }\n  }, {\n    key: \"addGoal\",\n    value: function addGoal(goal) {\n      if (this.goals.indexOf(goal) === -1) this.goals.push(goal);\n    }\n  }, {\n    key: \"addRole\",\n    value: function addRole(role) {\n      if (Object.values(_vocabulary.ThreatActorRoles).indexOf(role.toLowerCase()) === -1) throw Error(\"Invalid threat actor role! Must be one of the following: \".concat(Array(Object.values(_vocabulary.ThreatActorRoles)).join(', ')));\n      this.roles.push(role.toLowerCase());\n    }\n  }, {\n    key: \"addLabel\",\n    value: function addLabel(label) {\n      if (Object.values(_vocabulary.ThreatActorLabels).indexOf(label.toLowerCase()) === -1) throw Error(\"Invalid threat actor label! Must be one of the following: \".concat(Array(Object.values(_vocabulary.ThreatActorLabels)).join(', ')));\n      this.labels.push(label.toLowerCase());\n    }\n  }, {\n    key: \"addPrimaryMotivation\",\n    value: function addPrimaryMotivation(motivation) {\n      if (Object.values(_vocabulary.AttackMotivations).indexOf(motivation.toLowerCase()) === -1) throw Error(\"Invalid motivation! Must be one of the following: \".concat(Array(Object.values(_vocabulary.AttackMotivations)).join(', ')));\n      this.primaryMotivation = motivation.toLowerCase();\n    }\n  }, {\n    key: \"addSecondaryMotivation\",\n    value: function addSecondaryMotivation(motivation) {\n      if (Object.values(_vocabulary.AttackMotivations).indexOf(motivation.toLowerCase()) === -1) throw Error(\"Invalid motivation! Must be one of the following: \".concat(Array(Object.values(_vocabulary.AttackMotivations)).join(', ')));\n      if (this.primaryMotivation !== motivation && this.secondaryMotivations.indexOf(motivation.toLowerCase()) === -1) this.secondaryMotivations.push(motivation.toLowerCase());\n    }\n  }, {\n    key: \"addPersonalMotivation\",\n    value: function addPersonalMotivation(motivation) {\n      if (Object.values(_vocabulary.AttackMotivations).indexOf(motivation.toLowerCase()) === -1) throw Error(\"Invalid threat actor personal motivation! Must be one of the following: \".concat(Array(Object.values(_vocabulary.AttackMotivations)).join(', ')));\n      this.personalMotivations.push(motivation.toLowerCase());\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      if (!this.labels) throw Error(\"STIX 2.0 requires threat actor labels!\");\n      if (!this.name) throw Error(\"STIX 2.0 requires a threat actor name!\");\n      if (!this.labels) throw Error(\"STIX 2.0 requires at least 1 threat actor label!\");\n\n      var output = _get(_getPrototypeOf(ThreatActor.prototype), \"toJSON\", this).call(this);\n\n      output.name = this.name;\n      output.labels = this.labels;\n      if (this.description) output.description = this.description;\n      if (this.aliases && this.aliases.length > 0) output.aliases = this.aliases;\n      if (this.roles && this.roles.length > 0) output.roles = this.roles;\n      if (this.goals && this.goals.length > 0) output.goals = this.goals;\n      if (this.sophistication) output.sophistication = this.sophistication;\n      if (this.resourceLevel) output.resource_level = this.resourceLevel;\n      if (this.primaryMotivation) output.primary_motivation = this.primaryMotivation;\n      if (this.secondaryMotivations && this.secondaryMotivations.length > 0) output.secondary_motivations = this.secondaryMotivations;\n      if (this.personalMotivations && this.personalMotivations.length > 0) output.personal_motivations = this.personalMotivations;\n      return output;\n    }\n  }]);\n\n  return ThreatActor;\n}(_baseObject.BaseObject);\n\nvar _default = ThreatActor;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRocmVhdEFjdG9yLmpzIl0sIm5hbWVzIjpbIlRocmVhdEFjdG9yIiwibmFtZSIsInZhbHVlIiwiT2JqZWN0IiwidmFsdWVzIiwiVGhyZWF0QWN0b3JTb3BoaXN0aWNhdGlvbnMiLCJpbmRleE9mIiwidG9Mb3dlckNhc2UiLCJFcnJvciIsIkFycmF5Iiwiam9pbiIsInNvcGhpc3RpY2F0aW9uIiwibGV2ZWwiLCJBdHRhY2tSZXNvdXJjZUxldmVscyIsInJlc291cmNlTGV2ZWwiLCJhbGlhcyIsImFsaWFzZXMiLCJwdXNoIiwiZ29hbCIsImdvYWxzIiwicm9sZSIsIlRocmVhdEFjdG9yUm9sZXMiLCJyb2xlcyIsImxhYmVsIiwiVGhyZWF0QWN0b3JMYWJlbHMiLCJsYWJlbHMiLCJtb3RpdmF0aW9uIiwiQXR0YWNrTW90aXZhdGlvbnMiLCJwcmltYXJ5TW90aXZhdGlvbiIsInNlY29uZGFyeU1vdGl2YXRpb25zIiwicGVyc29uYWxNb3RpdmF0aW9ucyIsIm91dHB1dCIsImRlc2NyaXB0aW9uIiwibGVuZ3RoIiwicmVzb3VyY2VfbGV2ZWwiLCJwcmltYXJ5X21vdGl2YXRpb24iLCJzZWNvbmRhcnlfbW90aXZhdGlvbnMiLCJwZXJzb25hbF9tb3RpdmF0aW9ucyIsIkJhc2VPYmplY3QiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFFTUEsVzs7Ozs7QUFjRix1QkFBWUMsSUFBWixFQUFrQjtBQUFBOztBQUFBOztBQUNkLHFGQUFNLGNBQU47O0FBRGMsMkRBWlgsSUFZVzs7QUFBQSxrRUFYSixJQVdJOztBQUFBLDhEQVZSLEVBVVE7O0FBQUEsNERBVFYsRUFTVTs7QUFBQSw0REFSVixFQVFVOztBQUFBLHFFQVBELElBT0M7O0FBQUEsb0VBTkYsSUFNRTs7QUFBQSx3RUFMRSxJQUtGOztBQUFBLDJFQUpLLEVBSUw7O0FBQUEsMEVBSEksRUFHSjs7QUFHZCxVQUFLQSxJQUFMLEdBQVlBLElBQVo7QUFIYztBQUlqQjs7OztzQ0FFaUJDLEssRUFBTztBQUNyQixVQUFJQyxNQUFNLENBQUNDLE1BQVAsQ0FBY0Msc0NBQWQsRUFBMENDLE9BQTFDLENBQWtESixLQUFLLENBQUNLLFdBQU4sRUFBbEQsTUFBMkUsQ0FBQyxDQUFoRixFQUNJLE1BQU1DLEtBQUssOEVBQXVFQyxLQUFLLENBQUNOLE1BQU0sQ0FBQ0MsTUFBUCxDQUFjQyxzQ0FBZCxDQUFELENBQUwsQ0FBaURLLElBQWpELENBQXNELElBQXRELENBQXZFLEVBQVg7QUFFSixXQUFLQyxjQUFMLEdBQXNCVCxLQUFLLENBQUNLLFdBQU4sRUFBdEI7QUFDSDs7O3FDQUVnQkssSyxFQUFPO0FBQ3BCLFVBQUlULE1BQU0sQ0FBQ0MsTUFBUCxDQUFjUyxnQ0FBZCxFQUFvQ1AsT0FBcEMsQ0FBNENNLEtBQUssQ0FBQ0wsV0FBTixFQUE1QyxNQUFxRSxDQUFDLENBQTFFLEVBQ0ksTUFBTUMsS0FBSyw4RUFBdUVDLEtBQUssQ0FBQ04sTUFBTSxDQUFDQyxNQUFQLENBQWNTLGdDQUFkLENBQUQsQ0FBTCxDQUEyQ0gsSUFBM0MsQ0FBZ0QsSUFBaEQsQ0FBdkUsRUFBWDtBQUVKLFdBQUtJLGFBQUwsR0FBcUJGLEtBQUssQ0FBQ0wsV0FBTixFQUFyQjtBQUNIOzs7NkJBRVFRLEssRUFBTztBQUNaLFVBQUksS0FBS0MsT0FBTCxDQUFhVixPQUFiLENBQXFCUyxLQUFyQixNQUFnQyxDQUFDLENBQXJDLEVBQ0ksS0FBS0MsT0FBTCxDQUFhQyxJQUFiLENBQWtCRixLQUFsQjtBQUNQOzs7NEJBRU9HLEksRUFBTTtBQUNWLFVBQUksS0FBS0MsS0FBTCxDQUFXYixPQUFYLENBQW1CWSxJQUFuQixNQUE2QixDQUFDLENBQWxDLEVBQ0ksS0FBS0MsS0FBTCxDQUFXRixJQUFYLENBQWdCQyxJQUFoQjtBQUNQOzs7NEJBRU9FLEksRUFBTTtBQUNWLFVBQUlqQixNQUFNLENBQUNDLE1BQVAsQ0FBY2lCLDRCQUFkLEVBQWdDZixPQUFoQyxDQUF3Q2MsSUFBSSxDQUFDYixXQUFMLEVBQXhDLE1BQWdFLENBQUMsQ0FBckUsRUFDSSxNQUFNQyxLQUFLLG9FQUE2REMsS0FBSyxDQUFDTixNQUFNLENBQUNDLE1BQVAsQ0FBY2lCLDRCQUFkLENBQUQsQ0FBTCxDQUF1Q1gsSUFBdkMsQ0FBNEMsSUFBNUMsQ0FBN0QsRUFBWDtBQUVKLFdBQUtZLEtBQUwsQ0FBV0wsSUFBWCxDQUFnQkcsSUFBSSxDQUFDYixXQUFMLEVBQWhCO0FBQ0g7Ozs2QkFFUWdCLEssRUFBTztBQUNaLFVBQUlwQixNQUFNLENBQUNDLE1BQVAsQ0FBY29CLDZCQUFkLEVBQWlDbEIsT0FBakMsQ0FBeUNpQixLQUFLLENBQUNoQixXQUFOLEVBQXpDLE1BQWtFLENBQUMsQ0FBdkUsRUFDSSxNQUFNQyxLQUFLLHFFQUE4REMsS0FBSyxDQUFDTixNQUFNLENBQUNDLE1BQVAsQ0FBY29CLDZCQUFkLENBQUQsQ0FBTCxDQUF3Q2QsSUFBeEMsQ0FBNkMsSUFBN0MsQ0FBOUQsRUFBWDtBQUVKLFdBQUtlLE1BQUwsQ0FBWVIsSUFBWixDQUFpQk0sS0FBSyxDQUFDaEIsV0FBTixFQUFqQjtBQUNIOzs7eUNBRW9CbUIsVSxFQUFZO0FBQzdCLFVBQUl2QixNQUFNLENBQUNDLE1BQVAsQ0FBY3VCLDZCQUFkLEVBQWlDckIsT0FBakMsQ0FBeUNvQixVQUFVLENBQUNuQixXQUFYLEVBQXpDLE1BQXVFLENBQUMsQ0FBNUUsRUFDSSxNQUFNQyxLQUFLLDZEQUFzREMsS0FBSyxDQUFDTixNQUFNLENBQUNDLE1BQVAsQ0FBY3VCLDZCQUFkLENBQUQsQ0FBTCxDQUF3Q2pCLElBQXhDLENBQTZDLElBQTdDLENBQXRELEVBQVg7QUFFSixXQUFLa0IsaUJBQUwsR0FBeUJGLFVBQVUsQ0FBQ25CLFdBQVgsRUFBekI7QUFDSDs7OzJDQUVzQm1CLFUsRUFBWTtBQUMvQixVQUFJdkIsTUFBTSxDQUFDQyxNQUFQLENBQWN1Qiw2QkFBZCxFQUFpQ3JCLE9BQWpDLENBQXlDb0IsVUFBVSxDQUFDbkIsV0FBWCxFQUF6QyxNQUF1RSxDQUFDLENBQTVFLEVBQ0ksTUFBTUMsS0FBSyw2REFBc0RDLEtBQUssQ0FBQ04sTUFBTSxDQUFDQyxNQUFQLENBQWN1Qiw2QkFBZCxDQUFELENBQUwsQ0FBd0NqQixJQUF4QyxDQUE2QyxJQUE3QyxDQUF0RCxFQUFYO0FBRUosVUFBSSxLQUFLa0IsaUJBQUwsS0FBMkJGLFVBQTNCLElBQXlDLEtBQUtHLG9CQUFMLENBQTBCdkIsT0FBMUIsQ0FBa0NvQixVQUFVLENBQUNuQixXQUFYLEVBQWxDLE1BQWdFLENBQUMsQ0FBOUcsRUFDSSxLQUFLc0Isb0JBQUwsQ0FBMEJaLElBQTFCLENBQStCUyxVQUFVLENBQUNuQixXQUFYLEVBQS9CO0FBQ1A7OzswQ0FFcUJtQixVLEVBQVk7QUFDOUIsVUFBSXZCLE1BQU0sQ0FBQ0MsTUFBUCxDQUFjdUIsNkJBQWQsRUFBaUNyQixPQUFqQyxDQUF5Q29CLFVBQVUsQ0FBQ25CLFdBQVgsRUFBekMsTUFBdUUsQ0FBQyxDQUE1RSxFQUNJLE1BQU1DLEtBQUssbUZBQTRFQyxLQUFLLENBQUNOLE1BQU0sQ0FBQ0MsTUFBUCxDQUFjdUIsNkJBQWQsQ0FBRCxDQUFMLENBQXdDakIsSUFBeEMsQ0FBNkMsSUFBN0MsQ0FBNUUsRUFBWDtBQUVKLFdBQUtvQixtQkFBTCxDQUF5QmIsSUFBekIsQ0FBOEJTLFVBQVUsQ0FBQ25CLFdBQVgsRUFBOUI7QUFDSDs7OzZCQUVRO0FBQ0wsVUFBSSxDQUFDLEtBQUtrQixNQUFWLEVBQ0ksTUFBTWpCLEtBQUssMENBQVg7QUFDSixVQUFJLENBQUMsS0FBS1AsSUFBVixFQUNJLE1BQU1PLEtBQUssMENBQVg7QUFDSixVQUFJLENBQUMsS0FBS2lCLE1BQVYsRUFDSSxNQUFNakIsS0FBSyxvREFBWDs7QUFFSixVQUFJdUIsTUFBTSwwRUFBVjs7QUFDQUEsTUFBQUEsTUFBTSxDQUFDOUIsSUFBUCxHQUFjLEtBQUtBLElBQW5CO0FBQ0E4QixNQUFBQSxNQUFNLENBQUNOLE1BQVAsR0FBZ0IsS0FBS0EsTUFBckI7QUFFQSxVQUFJLEtBQUtPLFdBQVQsRUFDSUQsTUFBTSxDQUFDQyxXQUFQLEdBQXFCLEtBQUtBLFdBQTFCO0FBQ0osVUFBSSxLQUFLaEIsT0FBTCxJQUFnQixLQUFLQSxPQUFMLENBQWFpQixNQUFiLEdBQXNCLENBQTFDLEVBQ0lGLE1BQU0sQ0FBQ2YsT0FBUCxHQUFpQixLQUFLQSxPQUF0QjtBQUNKLFVBQUksS0FBS00sS0FBTCxJQUFjLEtBQUtBLEtBQUwsQ0FBV1csTUFBWCxHQUFvQixDQUF0QyxFQUNJRixNQUFNLENBQUNULEtBQVAsR0FBZSxLQUFLQSxLQUFwQjtBQUNKLFVBQUksS0FBS0gsS0FBTCxJQUFjLEtBQUtBLEtBQUwsQ0FBV2MsTUFBWCxHQUFvQixDQUF0QyxFQUNJRixNQUFNLENBQUNaLEtBQVAsR0FBZSxLQUFLQSxLQUFwQjtBQUNKLFVBQUksS0FBS1IsY0FBVCxFQUNJb0IsTUFBTSxDQUFDcEIsY0FBUCxHQUF3QixLQUFLQSxjQUE3QjtBQUNKLFVBQUksS0FBS0csYUFBVCxFQUNJaUIsTUFBTSxDQUFDRyxjQUFQLEdBQXdCLEtBQUtwQixhQUE3QjtBQUNKLFVBQUksS0FBS2MsaUJBQVQsRUFDSUcsTUFBTSxDQUFDSSxrQkFBUCxHQUE0QixLQUFLUCxpQkFBakM7QUFDSixVQUFJLEtBQUtDLG9CQUFMLElBQTZCLEtBQUtBLG9CQUFMLENBQTBCSSxNQUExQixHQUFtQyxDQUFwRSxFQUNJRixNQUFNLENBQUNLLHFCQUFQLEdBQStCLEtBQUtQLG9CQUFwQztBQUNKLFVBQUksS0FBS0MsbUJBQUwsSUFBNEIsS0FBS0EsbUJBQUwsQ0FBeUJHLE1BQXpCLEdBQWtDLENBQWxFLEVBQ0lGLE1BQU0sQ0FBQ00sb0JBQVAsR0FBOEIsS0FBS1AsbUJBQW5DO0FBRUosYUFBT0MsTUFBUDtBQUNIOzs7O0VBaEhxQk8sc0I7O2VBbUhYdEMsVyIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXFphY2ggU2hhbWVzXFxEb2N1bWVudHNcXERldmVsb3BtZW50XFxqcy0yLXN0aXhcXGxpYlxcb2JqZWN0cyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJhc2VPYmplY3QgfSBmcm9tIFwiLi9iYXNlT2JqZWN0XCJcclxuaW1wb3J0IHsgVGhyZWF0QWN0b3JMYWJlbHMsIFRocmVhdEFjdG9yUm9sZXMsIFRocmVhdEFjdG9yU29waGlzdGljYXRpb25zLCBBdHRhY2tSZXNvdXJjZUxldmVscywgQXR0YWNrTW90aXZhdGlvbnMgfSBmcm9tICcuLi9kZWZpbml0aW9ucy92b2NhYnVsYXJ5J1xyXG5cclxuY2xhc3MgVGhyZWF0QWN0b3IgZXh0ZW5kcyBCYXNlT2JqZWN0IHtcclxuXHJcbiAgICBuYW1lID0gbnVsbFxyXG4gICAgZGVzY3JpcHRpb24gPSBudWxsXHJcbiAgICBhbGlhc2VzID0gW11cclxuICAgIHJvbGVzID0gW11cclxuICAgIGdvYWxzID0gW11cclxuICAgIHNvcGhpc3RpY2F0aW9uID0gbnVsbFxyXG4gICAgcmVzb3VyY2VMZXZlbCA9IG51bGxcclxuICAgIHByaW1hcnlNb3RpdmF0aW9uID0gbnVsbFxyXG4gICAgc2Vjb25kYXJ5TW90aXZhdGlvbnMgPSBbXVxyXG4gICAgcGVyc29uYWxNb3RpdmF0aW9ucyA9IFtdXHJcblxyXG4gICAgXHJcbiAgICBjb25zdHJ1Y3RvcihuYW1lKSB7XHJcbiAgICAgICAgc3VwZXIoJ3RocmVhdC1hY3RvcicpXHJcblxyXG4gICAgICAgIHRoaXMubmFtZSA9IG5hbWVcclxuICAgIH1cclxuXHJcbiAgICBzZXRTb3BoaXN0aWNhdGlvbih2YWx1ZSkge1xyXG4gICAgICAgIGlmIChPYmplY3QudmFsdWVzKFRocmVhdEFjdG9yU29waGlzdGljYXRpb25zKS5pbmRleE9mKHZhbHVlLnRvTG93ZXJDYXNlKCkpID09PSAtMSlcclxuICAgICAgICAgICAgdGhyb3cgRXJyb3IoYEludmFsaWQgdGhyZWF0IGFjdG9yIHNvcGhpc3RpY2F0aW9uISBNdXN0IGJlIG9uZSBvZiB0aGUgZm9sbG93aW5nOiAke0FycmF5KE9iamVjdC52YWx1ZXMoVGhyZWF0QWN0b3JTb3BoaXN0aWNhdGlvbnMpKS5qb2luKCcsICcpfWApXHJcblxyXG4gICAgICAgIHRoaXMuc29waGlzdGljYXRpb24gPSB2YWx1ZS50b0xvd2VyQ2FzZSgpXHJcbiAgICB9XHJcblxyXG4gICAgc2V0UmVzb3VyY2VMZXZlbChsZXZlbCkge1xyXG4gICAgICAgIGlmIChPYmplY3QudmFsdWVzKEF0dGFja1Jlc291cmNlTGV2ZWxzKS5pbmRleE9mKGxldmVsLnRvTG93ZXJDYXNlKCkpID09PSAtMSlcclxuICAgICAgICAgICAgdGhyb3cgRXJyb3IoYEludmFsaWQgdGhyZWF0IGFjdG9yIHJlc291cmNlIGxldmVsISBNdXN0IGJlIG9uZSBvZiB0aGUgZm9sbG93aW5nOiAke0FycmF5KE9iamVjdC52YWx1ZXMoQXR0YWNrUmVzb3VyY2VMZXZlbHMpKS5qb2luKCcsICcpfWApXHJcblxyXG4gICAgICAgIHRoaXMucmVzb3VyY2VMZXZlbCA9IGxldmVsLnRvTG93ZXJDYXNlKClcclxuICAgIH1cclxuXHJcbiAgICBhZGRBbGlhcyhhbGlhcykge1xyXG4gICAgICAgIGlmICh0aGlzLmFsaWFzZXMuaW5kZXhPZihhbGlhcykgPT09IC0xKVxyXG4gICAgICAgICAgICB0aGlzLmFsaWFzZXMucHVzaChhbGlhcylcclxuICAgIH1cclxuXHJcbiAgICBhZGRHb2FsKGdvYWwpIHtcclxuICAgICAgICBpZiAodGhpcy5nb2Fscy5pbmRleE9mKGdvYWwpID09PSAtMSlcclxuICAgICAgICAgICAgdGhpcy5nb2Fscy5wdXNoKGdvYWwpXHJcbiAgICB9XHJcblxyXG4gICAgYWRkUm9sZShyb2xlKSB7XHJcbiAgICAgICAgaWYgKE9iamVjdC52YWx1ZXMoVGhyZWF0QWN0b3JSb2xlcykuaW5kZXhPZihyb2xlLnRvTG93ZXJDYXNlKCkpID09PSAtMSlcclxuICAgICAgICAgICAgdGhyb3cgRXJyb3IoYEludmFsaWQgdGhyZWF0IGFjdG9yIHJvbGUhIE11c3QgYmUgb25lIG9mIHRoZSBmb2xsb3dpbmc6ICR7QXJyYXkoT2JqZWN0LnZhbHVlcyhUaHJlYXRBY3RvclJvbGVzKSkuam9pbignLCAnKX1gKVxyXG5cclxuICAgICAgICB0aGlzLnJvbGVzLnB1c2gocm9sZS50b0xvd2VyQ2FzZSgpKVxyXG4gICAgfVxyXG5cclxuICAgIGFkZExhYmVsKGxhYmVsKSB7XHJcbiAgICAgICAgaWYgKE9iamVjdC52YWx1ZXMoVGhyZWF0QWN0b3JMYWJlbHMpLmluZGV4T2YobGFiZWwudG9Mb3dlckNhc2UoKSkgPT09IC0xKVxyXG4gICAgICAgICAgICB0aHJvdyBFcnJvcihgSW52YWxpZCB0aHJlYXQgYWN0b3IgbGFiZWwhIE11c3QgYmUgb25lIG9mIHRoZSBmb2xsb3dpbmc6ICR7QXJyYXkoT2JqZWN0LnZhbHVlcyhUaHJlYXRBY3RvckxhYmVscykpLmpvaW4oJywgJyl9YClcclxuXHJcbiAgICAgICAgdGhpcy5sYWJlbHMucHVzaChsYWJlbC50b0xvd2VyQ2FzZSgpKVxyXG4gICAgfVxyXG5cclxuICAgIGFkZFByaW1hcnlNb3RpdmF0aW9uKG1vdGl2YXRpb24pIHtcclxuICAgICAgICBpZiAoT2JqZWN0LnZhbHVlcyhBdHRhY2tNb3RpdmF0aW9ucykuaW5kZXhPZihtb3RpdmF0aW9uLnRvTG93ZXJDYXNlKCkpID09PSAtMSlcclxuICAgICAgICAgICAgdGhyb3cgRXJyb3IoYEludmFsaWQgbW90aXZhdGlvbiEgTXVzdCBiZSBvbmUgb2YgdGhlIGZvbGxvd2luZzogJHtBcnJheShPYmplY3QudmFsdWVzKEF0dGFja01vdGl2YXRpb25zKSkuam9pbignLCAnKX1gKVxyXG5cclxuICAgICAgICB0aGlzLnByaW1hcnlNb3RpdmF0aW9uID0gbW90aXZhdGlvbi50b0xvd2VyQ2FzZSgpXHJcbiAgICB9XHJcblxyXG4gICAgYWRkU2Vjb25kYXJ5TW90aXZhdGlvbihtb3RpdmF0aW9uKSB7XHJcbiAgICAgICAgaWYgKE9iamVjdC52YWx1ZXMoQXR0YWNrTW90aXZhdGlvbnMpLmluZGV4T2YobW90aXZhdGlvbi50b0xvd2VyQ2FzZSgpKSA9PT0gLTEpXHJcbiAgICAgICAgICAgIHRocm93IEVycm9yKGBJbnZhbGlkIG1vdGl2YXRpb24hIE11c3QgYmUgb25lIG9mIHRoZSBmb2xsb3dpbmc6ICR7QXJyYXkoT2JqZWN0LnZhbHVlcyhBdHRhY2tNb3RpdmF0aW9ucykpLmpvaW4oJywgJyl9YClcclxuXHJcbiAgICAgICAgaWYgKHRoaXMucHJpbWFyeU1vdGl2YXRpb24gIT09IG1vdGl2YXRpb24gJiYgdGhpcy5zZWNvbmRhcnlNb3RpdmF0aW9ucy5pbmRleE9mKG1vdGl2YXRpb24udG9Mb3dlckNhc2UoKSkgPT09IC0xKVxyXG4gICAgICAgICAgICB0aGlzLnNlY29uZGFyeU1vdGl2YXRpb25zLnB1c2gobW90aXZhdGlvbi50b0xvd2VyQ2FzZSgpKVxyXG4gICAgfVxyXG5cclxuICAgIGFkZFBlcnNvbmFsTW90aXZhdGlvbihtb3RpdmF0aW9uKSB7XHJcbiAgICAgICAgaWYgKE9iamVjdC52YWx1ZXMoQXR0YWNrTW90aXZhdGlvbnMpLmluZGV4T2YobW90aXZhdGlvbi50b0xvd2VyQ2FzZSgpKSA9PT0gLTEpXHJcbiAgICAgICAgICAgIHRocm93IEVycm9yKGBJbnZhbGlkIHRocmVhdCBhY3RvciBwZXJzb25hbCBtb3RpdmF0aW9uISBNdXN0IGJlIG9uZSBvZiB0aGUgZm9sbG93aW5nOiAke0FycmF5KE9iamVjdC52YWx1ZXMoQXR0YWNrTW90aXZhdGlvbnMpKS5qb2luKCcsICcpfWApXHJcblxyXG4gICAgICAgIHRoaXMucGVyc29uYWxNb3RpdmF0aW9ucy5wdXNoKG1vdGl2YXRpb24udG9Mb3dlckNhc2UoKSlcclxuICAgIH1cclxuXHJcbiAgICB0b0pTT04oKSB7XHJcbiAgICAgICAgaWYgKCF0aGlzLmxhYmVscylcclxuICAgICAgICAgICAgdGhyb3cgRXJyb3IoYFNUSVggMi4wIHJlcXVpcmVzIHRocmVhdCBhY3RvciBsYWJlbHMhYClcclxuICAgICAgICBpZiAoIXRoaXMubmFtZSlcclxuICAgICAgICAgICAgdGhyb3cgRXJyb3IoYFNUSVggMi4wIHJlcXVpcmVzIGEgdGhyZWF0IGFjdG9yIG5hbWUhYClcclxuICAgICAgICBpZiAoIXRoaXMubGFiZWxzKVxyXG4gICAgICAgICAgICB0aHJvdyBFcnJvcihgU1RJWCAyLjAgcmVxdWlyZXMgYXQgbGVhc3QgMSB0aHJlYXQgYWN0b3IgbGFiZWwhYClcclxuXHJcbiAgICAgICAgbGV0IG91dHB1dCA9IHN1cGVyLnRvSlNPTigpXHJcbiAgICAgICAgb3V0cHV0Lm5hbWUgPSB0aGlzLm5hbWVcclxuICAgICAgICBvdXRwdXQubGFiZWxzID0gdGhpcy5sYWJlbHNcclxuXHJcbiAgICAgICAgaWYgKHRoaXMuZGVzY3JpcHRpb24pXHJcbiAgICAgICAgICAgIG91dHB1dC5kZXNjcmlwdGlvbiA9IHRoaXMuZGVzY3JpcHRpb25cclxuICAgICAgICBpZiAodGhpcy5hbGlhc2VzICYmIHRoaXMuYWxpYXNlcy5sZW5ndGggPiAwKVxyXG4gICAgICAgICAgICBvdXRwdXQuYWxpYXNlcyA9IHRoaXMuYWxpYXNlc1xyXG4gICAgICAgIGlmICh0aGlzLnJvbGVzICYmIHRoaXMucm9sZXMubGVuZ3RoID4gMClcclxuICAgICAgICAgICAgb3V0cHV0LnJvbGVzID0gdGhpcy5yb2xlc1xyXG4gICAgICAgIGlmICh0aGlzLmdvYWxzICYmIHRoaXMuZ29hbHMubGVuZ3RoID4gMClcclxuICAgICAgICAgICAgb3V0cHV0LmdvYWxzID0gdGhpcy5nb2Fsc1xyXG4gICAgICAgIGlmICh0aGlzLnNvcGhpc3RpY2F0aW9uKVxyXG4gICAgICAgICAgICBvdXRwdXQuc29waGlzdGljYXRpb24gPSB0aGlzLnNvcGhpc3RpY2F0aW9uXHJcbiAgICAgICAgaWYgKHRoaXMucmVzb3VyY2VMZXZlbClcclxuICAgICAgICAgICAgb3V0cHV0LnJlc291cmNlX2xldmVsID0gdGhpcy5yZXNvdXJjZUxldmVsXHJcbiAgICAgICAgaWYgKHRoaXMucHJpbWFyeU1vdGl2YXRpb24pXHJcbiAgICAgICAgICAgIG91dHB1dC5wcmltYXJ5X21vdGl2YXRpb24gPSB0aGlzLnByaW1hcnlNb3RpdmF0aW9uXHJcbiAgICAgICAgaWYgKHRoaXMuc2Vjb25kYXJ5TW90aXZhdGlvbnMgJiYgdGhpcy5zZWNvbmRhcnlNb3RpdmF0aW9ucy5sZW5ndGggPiAwKVxyXG4gICAgICAgICAgICBvdXRwdXQuc2Vjb25kYXJ5X21vdGl2YXRpb25zID0gdGhpcy5zZWNvbmRhcnlNb3RpdmF0aW9uc1xyXG4gICAgICAgIGlmICh0aGlzLnBlcnNvbmFsTW90aXZhdGlvbnMgJiYgdGhpcy5wZXJzb25hbE1vdGl2YXRpb25zLmxlbmd0aCA+IDApXHJcbiAgICAgICAgICAgIG91dHB1dC5wZXJzb25hbF9tb3RpdmF0aW9ucyA9IHRoaXMucGVyc29uYWxNb3RpdmF0aW9uc1xyXG5cclxuICAgICAgICByZXR1cm4gb3V0cHV0XHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IFRocmVhdEFjdG9yIl19",
    "map": {
      "version": 3,
      "sources": [
        "threatActor.js"
      ],
      "names": [
        "ThreatActor",
        "name",
        "value",
        "Object",
        "values",
        "ThreatActorSophistications",
        "indexOf",
        "toLowerCase",
        "Error",
        "Array",
        "join",
        "sophistication",
        "level",
        "AttackResourceLevels",
        "resourceLevel",
        "alias",
        "aliases",
        "push",
        "goal",
        "goals",
        "role",
        "ThreatActorRoles",
        "roles",
        "label",
        "ThreatActorLabels",
        "labels",
        "motivation",
        "AttackMotivations",
        "primaryMotivation",
        "secondaryMotivations",
        "personalMotivations",
        "output",
        "description",
        "length",
        "resource_level",
        "primary_motivation",
        "secondary_motivations",
        "personal_motivations",
        "BaseObject"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;IAEMA,W;;;;;AAcF,uBAAYC,IAAZ,EAAkB;AAAA;;AAAA;;AACd,qFAAM,cAAN;;AADc,2DAZX,IAYW;;AAAA,kEAXJ,IAWI;;AAAA,8DAVR,EAUQ;;AAAA,4DATV,EASU;;AAAA,4DARV,EAQU;;AAAA,qEAPD,IAOC;;AAAA,oEANF,IAME;;AAAA,wEALE,IAKF;;AAAA,2EAJK,EAIL;;AAAA,0EAHI,EAGJ;;AAGd,UAAKA,IAAL,GAAYA,IAAZ;AAHc;AAIjB;;;;sCAEiBC,K,EAAO;AACrB,UAAIC,MAAM,CAACC,MAAP,CAAcC,sCAAd,EAA0CC,OAA1C,CAAkDJ,KAAK,CAACK,WAAN,EAAlD,MAA2E,CAAC,CAAhF,EACI,MAAMC,KAAK,8EAAuEC,KAAK,CAACN,MAAM,CAACC,MAAP,CAAcC,sCAAd,CAAD,CAAL,CAAiDK,IAAjD,CAAsD,IAAtD,CAAvE,EAAX;AAEJ,WAAKC,cAAL,GAAsBT,KAAK,CAACK,WAAN,EAAtB;AACH;;;qCAEgBK,K,EAAO;AACpB,UAAIT,MAAM,CAACC,MAAP,CAAcS,gCAAd,EAAoCP,OAApC,CAA4CM,KAAK,CAACL,WAAN,EAA5C,MAAqE,CAAC,CAA1E,EACI,MAAMC,KAAK,8EAAuEC,KAAK,CAACN,MAAM,CAACC,MAAP,CAAcS,gCAAd,CAAD,CAAL,CAA2CH,IAA3C,CAAgD,IAAhD,CAAvE,EAAX;AAEJ,WAAKI,aAAL,GAAqBF,KAAK,CAACL,WAAN,EAArB;AACH;;;6BAEQQ,K,EAAO;AACZ,UAAI,KAAKC,OAAL,CAAaV,OAAb,CAAqBS,KAArB,MAAgC,CAAC,CAArC,EACI,KAAKC,OAAL,CAAaC,IAAb,CAAkBF,KAAlB;AACP;;;4BAEOG,I,EAAM;AACV,UAAI,KAAKC,KAAL,CAAWb,OAAX,CAAmBY,IAAnB,MAA6B,CAAC,CAAlC,EACI,KAAKC,KAAL,CAAWF,IAAX,CAAgBC,IAAhB;AACP;;;4BAEOE,I,EAAM;AACV,UAAIjB,MAAM,CAACC,MAAP,CAAciB,4BAAd,EAAgCf,OAAhC,CAAwCc,IAAI,CAACb,WAAL,EAAxC,MAAgE,CAAC,CAArE,EACI,MAAMC,KAAK,oEAA6DC,KAAK,CAACN,MAAM,CAACC,MAAP,CAAciB,4BAAd,CAAD,CAAL,CAAuCX,IAAvC,CAA4C,IAA5C,CAA7D,EAAX;AAEJ,WAAKY,KAAL,CAAWL,IAAX,CAAgBG,IAAI,CAACb,WAAL,EAAhB;AACH;;;6BAEQgB,K,EAAO;AACZ,UAAIpB,MAAM,CAACC,MAAP,CAAcoB,6BAAd,EAAiClB,OAAjC,CAAyCiB,KAAK,CAAChB,WAAN,EAAzC,MAAkE,CAAC,CAAvE,EACI,MAAMC,KAAK,qEAA8DC,KAAK,CAACN,MAAM,CAACC,MAAP,CAAcoB,6BAAd,CAAD,CAAL,CAAwCd,IAAxC,CAA6C,IAA7C,CAA9D,EAAX;AAEJ,WAAKe,MAAL,CAAYR,IAAZ,CAAiBM,KAAK,CAAChB,WAAN,EAAjB;AACH;;;yCAEoBmB,U,EAAY;AAC7B,UAAIvB,MAAM,CAACC,MAAP,CAAcuB,6BAAd,EAAiCrB,OAAjC,CAAyCoB,UAAU,CAACnB,WAAX,EAAzC,MAAuE,CAAC,CAA5E,EACI,MAAMC,KAAK,6DAAsDC,KAAK,CAACN,MAAM,CAACC,MAAP,CAAcuB,6BAAd,CAAD,CAAL,CAAwCjB,IAAxC,CAA6C,IAA7C,CAAtD,EAAX;AAEJ,WAAKkB,iBAAL,GAAyBF,UAAU,CAACnB,WAAX,EAAzB;AACH;;;2CAEsBmB,U,EAAY;AAC/B,UAAIvB,MAAM,CAACC,MAAP,CAAcuB,6BAAd,EAAiCrB,OAAjC,CAAyCoB,UAAU,CAACnB,WAAX,EAAzC,MAAuE,CAAC,CAA5E,EACI,MAAMC,KAAK,6DAAsDC,KAAK,CAACN,MAAM,CAACC,MAAP,CAAcuB,6BAAd,CAAD,CAAL,CAAwCjB,IAAxC,CAA6C,IAA7C,CAAtD,EAAX;AAEJ,UAAI,KAAKkB,iBAAL,KAA2BF,UAA3B,IAAyC,KAAKG,oBAAL,CAA0BvB,OAA1B,CAAkCoB,UAAU,CAACnB,WAAX,EAAlC,MAAgE,CAAC,CAA9G,EACI,KAAKsB,oBAAL,CAA0BZ,IAA1B,CAA+BS,UAAU,CAACnB,WAAX,EAA/B;AACP;;;0CAEqBmB,U,EAAY;AAC9B,UAAIvB,MAAM,CAACC,MAAP,CAAcuB,6BAAd,EAAiCrB,OAAjC,CAAyCoB,UAAU,CAACnB,WAAX,EAAzC,MAAuE,CAAC,CAA5E,EACI,MAAMC,KAAK,mFAA4EC,KAAK,CAACN,MAAM,CAACC,MAAP,CAAcuB,6BAAd,CAAD,CAAL,CAAwCjB,IAAxC,CAA6C,IAA7C,CAA5E,EAAX;AAEJ,WAAKoB,mBAAL,CAAyBb,IAAzB,CAA8BS,UAAU,CAACnB,WAAX,EAA9B;AACH;;;6BAEQ;AACL,UAAI,CAAC,KAAKkB,MAAV,EACI,MAAMjB,KAAK,0CAAX;AACJ,UAAI,CAAC,KAAKP,IAAV,EACI,MAAMO,KAAK,0CAAX;AACJ,UAAI,CAAC,KAAKiB,MAAV,EACI,MAAMjB,KAAK,oDAAX;;AAEJ,UAAIuB,MAAM,0EAAV;;AACAA,MAAAA,MAAM,CAAC9B,IAAP,GAAc,KAAKA,IAAnB;AACA8B,MAAAA,MAAM,CAACN,MAAP,GAAgB,KAAKA,MAArB;AAEA,UAAI,KAAKO,WAAT,EACID,MAAM,CAACC,WAAP,GAAqB,KAAKA,WAA1B;AACJ,UAAI,KAAKhB,OAAL,IAAgB,KAAKA,OAAL,CAAaiB,MAAb,GAAsB,CAA1C,EACIF,MAAM,CAACf,OAAP,GAAiB,KAAKA,OAAtB;AACJ,UAAI,KAAKM,KAAL,IAAc,KAAKA,KAAL,CAAWW,MAAX,GAAoB,CAAtC,EACIF,MAAM,CAACT,KAAP,GAAe,KAAKA,KAApB;AACJ,UAAI,KAAKH,KAAL,IAAc,KAAKA,KAAL,CAAWc,MAAX,GAAoB,CAAtC,EACIF,MAAM,CAACZ,KAAP,GAAe,KAAKA,KAApB;AACJ,UAAI,KAAKR,cAAT,EACIoB,MAAM,CAACpB,cAAP,GAAwB,KAAKA,cAA7B;AACJ,UAAI,KAAKG,aAAT,EACIiB,MAAM,CAACG,cAAP,GAAwB,KAAKpB,aAA7B;AACJ,UAAI,KAAKc,iBAAT,EACIG,MAAM,CAACI,kBAAP,GAA4B,KAAKP,iBAAjC;AACJ,UAAI,KAAKC,oBAAL,IAA6B,KAAKA,oBAAL,CAA0BI,MAA1B,GAAmC,CAApE,EACIF,MAAM,CAACK,qBAAP,GAA+B,KAAKP,oBAApC;AACJ,UAAI,KAAKC,mBAAL,IAA4B,KAAKA,mBAAL,CAAyBG,MAAzB,GAAkC,CAAlE,EACIF,MAAM,CAACM,oBAAP,GAA8B,KAAKP,mBAAnC;AAEJ,aAAOC,MAAP;AACH;;;;EAhHqBO,sB;;eAmHXtC,W",
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects",
      "sourcesContent": [
        "import { BaseObject } from \"./baseObject\"\r\nimport { ThreatActorLabels, ThreatActorRoles, ThreatActorSophistications, AttackResourceLevels, AttackMotivations } from '../definitions/vocabulary'\r\n\r\nclass ThreatActor extends BaseObject {\r\n\r\n    name = null\r\n    description = null\r\n    aliases = []\r\n    roles = []\r\n    goals = []\r\n    sophistication = null\r\n    resourceLevel = null\r\n    primaryMotivation = null\r\n    secondaryMotivations = []\r\n    personalMotivations = []\r\n\r\n    \r\n    constructor(name) {\r\n        super('threat-actor')\r\n\r\n        this.name = name\r\n    }\r\n\r\n    setSophistication(value) {\r\n        if (Object.values(ThreatActorSophistications).indexOf(value.toLowerCase()) === -1)\r\n            throw Error(`Invalid threat actor sophistication! Must be one of the following: ${Array(Object.values(ThreatActorSophistications)).join(', ')}`)\r\n\r\n        this.sophistication = value.toLowerCase()\r\n    }\r\n\r\n    setResourceLevel(level) {\r\n        if (Object.values(AttackResourceLevels).indexOf(level.toLowerCase()) === -1)\r\n            throw Error(`Invalid threat actor resource level! Must be one of the following: ${Array(Object.values(AttackResourceLevels)).join(', ')}`)\r\n\r\n        this.resourceLevel = level.toLowerCase()\r\n    }\r\n\r\n    addAlias(alias) {\r\n        if (this.aliases.indexOf(alias) === -1)\r\n            this.aliases.push(alias)\r\n    }\r\n\r\n    addGoal(goal) {\r\n        if (this.goals.indexOf(goal) === -1)\r\n            this.goals.push(goal)\r\n    }\r\n\r\n    addRole(role) {\r\n        if (Object.values(ThreatActorRoles).indexOf(role.toLowerCase()) === -1)\r\n            throw Error(`Invalid threat actor role! Must be one of the following: ${Array(Object.values(ThreatActorRoles)).join(', ')}`)\r\n\r\n        this.roles.push(role.toLowerCase())\r\n    }\r\n\r\n    addLabel(label) {\r\n        if (Object.values(ThreatActorLabels).indexOf(label.toLowerCase()) === -1)\r\n            throw Error(`Invalid threat actor label! Must be one of the following: ${Array(Object.values(ThreatActorLabels)).join(', ')}`)\r\n\r\n        this.labels.push(label.toLowerCase())\r\n    }\r\n\r\n    addPrimaryMotivation(motivation) {\r\n        if (Object.values(AttackMotivations).indexOf(motivation.toLowerCase()) === -1)\r\n            throw Error(`Invalid motivation! Must be one of the following: ${Array(Object.values(AttackMotivations)).join(', ')}`)\r\n\r\n        this.primaryMotivation = motivation.toLowerCase()\r\n    }\r\n\r\n    addSecondaryMotivation(motivation) {\r\n        if (Object.values(AttackMotivations).indexOf(motivation.toLowerCase()) === -1)\r\n            throw Error(`Invalid motivation! Must be one of the following: ${Array(Object.values(AttackMotivations)).join(', ')}`)\r\n\r\n        if (this.primaryMotivation !== motivation && this.secondaryMotivations.indexOf(motivation.toLowerCase()) === -1)\r\n            this.secondaryMotivations.push(motivation.toLowerCase())\r\n    }\r\n\r\n    addPersonalMotivation(motivation) {\r\n        if (Object.values(AttackMotivations).indexOf(motivation.toLowerCase()) === -1)\r\n            throw Error(`Invalid threat actor personal motivation! Must be one of the following: ${Array(Object.values(AttackMotivations)).join(', ')}`)\r\n\r\n        this.personalMotivations.push(motivation.toLowerCase())\r\n    }\r\n\r\n    toJSON() {\r\n        if (!this.labels)\r\n            throw Error(`STIX 2.0 requires threat actor labels!`)\r\n        if (!this.name)\r\n            throw Error(`STIX 2.0 requires a threat actor name!`)\r\n        if (!this.labels)\r\n            throw Error(`STIX 2.0 requires at least 1 threat actor label!`)\r\n\r\n        let output = super.toJSON()\r\n        output.name = this.name\r\n        output.labels = this.labels\r\n\r\n        if (this.description)\r\n            output.description = this.description\r\n        if (this.aliases && this.aliases.length > 0)\r\n            output.aliases = this.aliases\r\n        if (this.roles && this.roles.length > 0)\r\n            output.roles = this.roles\r\n        if (this.goals && this.goals.length > 0)\r\n            output.goals = this.goals\r\n        if (this.sophistication)\r\n            output.sophistication = this.sophistication\r\n        if (this.resourceLevel)\r\n            output.resource_level = this.resourceLevel\r\n        if (this.primaryMotivation)\r\n            output.primary_motivation = this.primaryMotivation\r\n        if (this.secondaryMotivations && this.secondaryMotivations.length > 0)\r\n            output.secondary_motivations = this.secondaryMotivations\r\n        if (this.personalMotivations && this.personalMotivations.length > 0)\r\n            output.personal_motivations = this.personalMotivations\r\n\r\n        return output\r\n    }\r\n}\r\n\r\nexport default ThreatActor"
      ]
    },
    "sourceType": "script",
    "mtime": 1565910127803
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\lib\\\\objects\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"filename\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\lib\\\\objects\\\\tool.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects\\tool.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects\\tool.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects\\tool.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects",
        "sourceFileName": "tool.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _baseObject = require(\"./baseObject\");\n\nvar _killChainPhase = require(\"./killChainPhase\");\n\nvar _vocabulary = require(\"../definitions/vocabulary\");\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar Tool =\n/*#__PURE__*/\nfunction (_BaseObject) {\n  _inherits(Tool, _BaseObject);\n\n  function Tool(name) {\n    var _this;\n\n    _classCallCheck(this, Tool);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Tool).call(this, 'tool'));\n\n    _defineProperty(_assertThisInitialized(_this), \"name\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"description\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"killChainPhases\", []);\n\n    _defineProperty(_assertThisInitialized(_this), \"toolVersion\", null);\n\n    _this.name = name;\n    return _this;\n  }\n\n  _createClass(Tool, [{\n    key: \"addKillChainPhase\",\n    value: function addKillChainPhase(phase) {\n      if (!(phase instanceof _killChainPhase.KillChainPhase)) throw Error('You can only add a kill chain phase of the KillChainPhase type!');\n      this.killChainPhases.push(phase);\n    }\n  }, {\n    key: \"addLabel\",\n    value: function addLabel(label) {\n      if (Object.values(_vocabulary.ToolLabels).indexOf(label.toLowerCase()) === -1) throw Error(\"Invalid tool label! Must be one of the following: \".concat(Array(Object.values(_vocabulary.ToolLabels)).join(', ')));\n      this.labels.push(label.toLowerCase());\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      if (!this.labels) throw Error(\"STIX 2.0 requires tool labels!\");\n      if (!this.name) throw Error(\"STIX 2.0 requires a tool name!\");\n\n      var output = _get(_getPrototypeOf(Tool.prototype), \"toJSON\", this).call(this);\n\n      output.name = this.name;\n      if (this.description) output.description = this.description;\n      if (this.toolVersion) output.tool_version = this.toolVersion;\n\n      if (this.killChainPhases && this.killChainPhases.length > 0) {\n        var killChainPhases = [];\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = this.killChainPhases[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var i = _step.value;\n            killChainPhases.push(i.toJSON());\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n              _iterator[\"return\"]();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n\n        output.kill_chain_phases = killChainPhases;\n      }\n\n      return output;\n    }\n  }]);\n\n  return Tool;\n}(_baseObject.BaseObject);\n\nvar _default = Tool;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRvb2wuanMiXSwibmFtZXMiOlsiVG9vbCIsIm5hbWUiLCJwaGFzZSIsIktpbGxDaGFpblBoYXNlIiwiRXJyb3IiLCJraWxsQ2hhaW5QaGFzZXMiLCJwdXNoIiwibGFiZWwiLCJPYmplY3QiLCJ2YWx1ZXMiLCJUb29sTGFiZWxzIiwiaW5kZXhPZiIsInRvTG93ZXJDYXNlIiwiQXJyYXkiLCJqb2luIiwibGFiZWxzIiwib3V0cHV0IiwiZGVzY3JpcHRpb24iLCJ0b29sVmVyc2lvbiIsInRvb2xfdmVyc2lvbiIsImxlbmd0aCIsImkiLCJ0b0pTT04iLCJraWxsX2NoYWluX3BoYXNlcyIsIkJhc2VPYmplY3QiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFFTUEsSTs7Ozs7QUFPRixnQkFBWUMsSUFBWixFQUFrQjtBQUFBOztBQUFBOztBQUNkLDhFQUFNLE1BQU47O0FBRGMsMkRBTFgsSUFLVzs7QUFBQSxrRUFKSixJQUlJOztBQUFBLHNFQUhBLEVBR0E7O0FBQUEsa0VBRkosSUFFSTs7QUFHZCxVQUFLQSxJQUFMLEdBQVlBLElBQVo7QUFIYztBQUlqQjs7OztzQ0FFaUJDLEssRUFBTztBQUNyQixVQUFJLEVBQUVBLEtBQUssWUFBWUMsOEJBQW5CLENBQUosRUFDSSxNQUFNQyxLQUFLLENBQUMsaUVBQUQsQ0FBWDtBQUVKLFdBQUtDLGVBQUwsQ0FBcUJDLElBQXJCLENBQTBCSixLQUExQjtBQUNIOzs7NkJBRVFLLEssRUFBTztBQUNaLFVBQUlDLE1BQU0sQ0FBQ0MsTUFBUCxDQUFjQyxzQkFBZCxFQUEwQkMsT0FBMUIsQ0FBa0NKLEtBQUssQ0FBQ0ssV0FBTixFQUFsQyxNQUEyRCxDQUFDLENBQWhFLEVBQ0ksTUFBTVIsS0FBSyw2REFBc0RTLEtBQUssQ0FBQ0wsTUFBTSxDQUFDQyxNQUFQLENBQWNDLHNCQUFkLENBQUQsQ0FBTCxDQUFpQ0ksSUFBakMsQ0FBc0MsSUFBdEMsQ0FBdEQsRUFBWDtBQUVKLFdBQUtDLE1BQUwsQ0FBWVQsSUFBWixDQUFpQkMsS0FBSyxDQUFDSyxXQUFOLEVBQWpCO0FBQ0g7Ozs2QkFFUTtBQUNMLFVBQUksQ0FBQyxLQUFLRyxNQUFWLEVBQ0ksTUFBTVgsS0FBSyxrQ0FBWDtBQUNKLFVBQUksQ0FBQyxLQUFLSCxJQUFWLEVBQ0ksTUFBTUcsS0FBSyxrQ0FBWDs7QUFFSixVQUFJWSxNQUFNLG1FQUFWOztBQUNBQSxNQUFBQSxNQUFNLENBQUNmLElBQVAsR0FBYyxLQUFLQSxJQUFuQjtBQUVBLFVBQUksS0FBS2dCLFdBQVQsRUFDSUQsTUFBTSxDQUFDQyxXQUFQLEdBQXFCLEtBQUtBLFdBQTFCO0FBQ0osVUFBSSxLQUFLQyxXQUFULEVBQ0lGLE1BQU0sQ0FBQ0csWUFBUCxHQUFzQixLQUFLRCxXQUEzQjs7QUFFSixVQUFJLEtBQUtiLGVBQUwsSUFBd0IsS0FBS0EsZUFBTCxDQUFxQmUsTUFBckIsR0FBOEIsQ0FBMUQsRUFBNkQ7QUFDekQsWUFBSWYsZUFBZSxHQUFHLEVBQXRCO0FBRHlEO0FBQUE7QUFBQTs7QUFBQTtBQUV6RCwrQkFBYyxLQUFLQSxlQUFuQjtBQUFBLGdCQUFTZ0IsQ0FBVDtBQUNJaEIsWUFBQUEsZUFBZSxDQUFDQyxJQUFoQixDQUFxQmUsQ0FBQyxDQUFDQyxNQUFGLEVBQXJCO0FBREo7QUFGeUQ7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFJekROLFFBQUFBLE1BQU0sQ0FBQ08saUJBQVAsR0FBMkJsQixlQUEzQjtBQUNIOztBQUVELGFBQU9XLE1BQVA7QUFDSDs7OztFQWpEY1Esc0I7O2VBb0RKeEIsSSIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXFphY2ggU2hhbWVzXFxEb2N1bWVudHNcXERldmVsb3BtZW50XFxqcy0yLXN0aXhcXGxpYlxcb2JqZWN0cyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJhc2VPYmplY3QgfSBmcm9tIFwiLi9iYXNlT2JqZWN0XCJcclxuaW1wb3J0IHsgS2lsbENoYWluUGhhc2UgfSBmcm9tICcuL2tpbGxDaGFpblBoYXNlJ1xyXG5pbXBvcnQgeyBUb29sTGFiZWxzIH0gZnJvbSAnLi4vZGVmaW5pdGlvbnMvdm9jYWJ1bGFyeSdcclxuXHJcbmNsYXNzIFRvb2wgZXh0ZW5kcyBCYXNlT2JqZWN0IHtcclxuXHJcbiAgICBuYW1lID0gbnVsbFxyXG4gICAgZGVzY3JpcHRpb24gPSBudWxsXHJcbiAgICBraWxsQ2hhaW5QaGFzZXMgPSBbXVxyXG4gICAgdG9vbFZlcnNpb24gPSBudWxsXHJcbiAgICBcclxuICAgIGNvbnN0cnVjdG9yKG5hbWUpIHtcclxuICAgICAgICBzdXBlcigndG9vbCcpXHJcblxyXG4gICAgICAgIHRoaXMubmFtZSA9IG5hbWVcclxuICAgIH1cclxuXHJcbiAgICBhZGRLaWxsQ2hhaW5QaGFzZShwaGFzZSkge1xyXG4gICAgICAgIGlmICghKHBoYXNlIGluc3RhbmNlb2YgS2lsbENoYWluUGhhc2UpKVxyXG4gICAgICAgICAgICB0aHJvdyBFcnJvcignWW91IGNhbiBvbmx5IGFkZCBhIGtpbGwgY2hhaW4gcGhhc2Ugb2YgdGhlIEtpbGxDaGFpblBoYXNlIHR5cGUhJylcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgdGhpcy5raWxsQ2hhaW5QaGFzZXMucHVzaChwaGFzZSlcclxuICAgIH1cclxuXHJcbiAgICBhZGRMYWJlbChsYWJlbCkge1xyXG4gICAgICAgIGlmIChPYmplY3QudmFsdWVzKFRvb2xMYWJlbHMpLmluZGV4T2YobGFiZWwudG9Mb3dlckNhc2UoKSkgPT09IC0xKVxyXG4gICAgICAgICAgICB0aHJvdyBFcnJvcihgSW52YWxpZCB0b29sIGxhYmVsISBNdXN0IGJlIG9uZSBvZiB0aGUgZm9sbG93aW5nOiAke0FycmF5KE9iamVjdC52YWx1ZXMoVG9vbExhYmVscykpLmpvaW4oJywgJyl9YClcclxuXHJcbiAgICAgICAgdGhpcy5sYWJlbHMucHVzaChsYWJlbC50b0xvd2VyQ2FzZSgpKVxyXG4gICAgfVxyXG5cclxuICAgIHRvSlNPTigpIHtcclxuICAgICAgICBpZiAoIXRoaXMubGFiZWxzKVxyXG4gICAgICAgICAgICB0aHJvdyBFcnJvcihgU1RJWCAyLjAgcmVxdWlyZXMgdG9vbCBsYWJlbHMhYClcclxuICAgICAgICBpZiAoIXRoaXMubmFtZSlcclxuICAgICAgICAgICAgdGhyb3cgRXJyb3IoYFNUSVggMi4wIHJlcXVpcmVzIGEgdG9vbCBuYW1lIWApXHJcblxyXG4gICAgICAgIGxldCBvdXRwdXQgPSBzdXBlci50b0pTT04oKVxyXG4gICAgICAgIG91dHB1dC5uYW1lID0gdGhpcy5uYW1lXHJcblxyXG4gICAgICAgIGlmICh0aGlzLmRlc2NyaXB0aW9uKVxyXG4gICAgICAgICAgICBvdXRwdXQuZGVzY3JpcHRpb24gPSB0aGlzLmRlc2NyaXB0aW9uXHJcbiAgICAgICAgaWYgKHRoaXMudG9vbFZlcnNpb24pXHJcbiAgICAgICAgICAgIG91dHB1dC50b29sX3ZlcnNpb24gPSB0aGlzLnRvb2xWZXJzaW9uXHJcblxyXG4gICAgICAgIGlmICh0aGlzLmtpbGxDaGFpblBoYXNlcyAmJiB0aGlzLmtpbGxDaGFpblBoYXNlcy5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICAgIGxldCBraWxsQ2hhaW5QaGFzZXMgPSBbXVxyXG4gICAgICAgICAgICBmb3IgKGxldCBpIG9mIHRoaXMua2lsbENoYWluUGhhc2VzKVxyXG4gICAgICAgICAgICAgICAga2lsbENoYWluUGhhc2VzLnB1c2goaS50b0pTT04oKSlcclxuICAgICAgICAgICAgb3V0cHV0LmtpbGxfY2hhaW5fcGhhc2VzID0ga2lsbENoYWluUGhhc2VzXHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICByZXR1cm4gb3V0cHV0XHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IFRvb2wiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "tool.js"
      ],
      "names": [
        "Tool",
        "name",
        "phase",
        "KillChainPhase",
        "Error",
        "killChainPhases",
        "push",
        "label",
        "Object",
        "values",
        "ToolLabels",
        "indexOf",
        "toLowerCase",
        "Array",
        "join",
        "labels",
        "output",
        "description",
        "toolVersion",
        "tool_version",
        "length",
        "i",
        "toJSON",
        "kill_chain_phases",
        "BaseObject"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;IAEMA,I;;;;;AAOF,gBAAYC,IAAZ,EAAkB;AAAA;;AAAA;;AACd,8EAAM,MAAN;;AADc,2DALX,IAKW;;AAAA,kEAJJ,IAII;;AAAA,sEAHA,EAGA;;AAAA,kEAFJ,IAEI;;AAGd,UAAKA,IAAL,GAAYA,IAAZ;AAHc;AAIjB;;;;sCAEiBC,K,EAAO;AACrB,UAAI,EAAEA,KAAK,YAAYC,8BAAnB,CAAJ,EACI,MAAMC,KAAK,CAAC,iEAAD,CAAX;AAEJ,WAAKC,eAAL,CAAqBC,IAArB,CAA0BJ,KAA1B;AACH;;;6BAEQK,K,EAAO;AACZ,UAAIC,MAAM,CAACC,MAAP,CAAcC,sBAAd,EAA0BC,OAA1B,CAAkCJ,KAAK,CAACK,WAAN,EAAlC,MAA2D,CAAC,CAAhE,EACI,MAAMR,KAAK,6DAAsDS,KAAK,CAACL,MAAM,CAACC,MAAP,CAAcC,sBAAd,CAAD,CAAL,CAAiCI,IAAjC,CAAsC,IAAtC,CAAtD,EAAX;AAEJ,WAAKC,MAAL,CAAYT,IAAZ,CAAiBC,KAAK,CAACK,WAAN,EAAjB;AACH;;;6BAEQ;AACL,UAAI,CAAC,KAAKG,MAAV,EACI,MAAMX,KAAK,kCAAX;AACJ,UAAI,CAAC,KAAKH,IAAV,EACI,MAAMG,KAAK,kCAAX;;AAEJ,UAAIY,MAAM,mEAAV;;AACAA,MAAAA,MAAM,CAACf,IAAP,GAAc,KAAKA,IAAnB;AAEA,UAAI,KAAKgB,WAAT,EACID,MAAM,CAACC,WAAP,GAAqB,KAAKA,WAA1B;AACJ,UAAI,KAAKC,WAAT,EACIF,MAAM,CAACG,YAAP,GAAsB,KAAKD,WAA3B;;AAEJ,UAAI,KAAKb,eAAL,IAAwB,KAAKA,eAAL,CAAqBe,MAArB,GAA8B,CAA1D,EAA6D;AACzD,YAAIf,eAAe,GAAG,EAAtB;AADyD;AAAA;AAAA;;AAAA;AAEzD,+BAAc,KAAKA,eAAnB;AAAA,gBAASgB,CAAT;AACIhB,YAAAA,eAAe,CAACC,IAAhB,CAAqBe,CAAC,CAACC,MAAF,EAArB;AADJ;AAFyD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIzDN,QAAAA,MAAM,CAACO,iBAAP,GAA2BlB,eAA3B;AACH;;AAED,aAAOW,MAAP;AACH;;;;EAjDcQ,sB;;eAoDJxB,I",
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects",
      "sourcesContent": [
        "import { BaseObject } from \"./baseObject\"\r\nimport { KillChainPhase } from './killChainPhase'\r\nimport { ToolLabels } from '../definitions/vocabulary'\r\n\r\nclass Tool extends BaseObject {\r\n\r\n    name = null\r\n    description = null\r\n    killChainPhases = []\r\n    toolVersion = null\r\n    \r\n    constructor(name) {\r\n        super('tool')\r\n\r\n        this.name = name\r\n    }\r\n\r\n    addKillChainPhase(phase) {\r\n        if (!(phase instanceof KillChainPhase))\r\n            throw Error('You can only add a kill chain phase of the KillChainPhase type!')\r\n            \r\n        this.killChainPhases.push(phase)\r\n    }\r\n\r\n    addLabel(label) {\r\n        if (Object.values(ToolLabels).indexOf(label.toLowerCase()) === -1)\r\n            throw Error(`Invalid tool label! Must be one of the following: ${Array(Object.values(ToolLabels)).join(', ')}`)\r\n\r\n        this.labels.push(label.toLowerCase())\r\n    }\r\n\r\n    toJSON() {\r\n        if (!this.labels)\r\n            throw Error(`STIX 2.0 requires tool labels!`)\r\n        if (!this.name)\r\n            throw Error(`STIX 2.0 requires a tool name!`)\r\n\r\n        let output = super.toJSON()\r\n        output.name = this.name\r\n\r\n        if (this.description)\r\n            output.description = this.description\r\n        if (this.toolVersion)\r\n            output.tool_version = this.toolVersion\r\n\r\n        if (this.killChainPhases && this.killChainPhases.length > 0) {\r\n            let killChainPhases = []\r\n            for (let i of this.killChainPhases)\r\n                killChainPhases.push(i.toJSON())\r\n            output.kill_chain_phases = killChainPhases\r\n        }\r\n\r\n        return output\r\n    }\r\n}\r\n\r\nexport default Tool"
      ]
    },
    "sourceType": "script",
    "mtime": 1565912351565
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\lib\\\\objects\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"filename\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\lib\\\\objects\\\\vulernability.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects\\vulernability.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects\\vulernability.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects\\vulernability.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects",
        "sourceFileName": "vulernability.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _baseObject = require(\"./baseObject\");\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar Vulnerability =\n/*#__PURE__*/\nfunction (_BaseObject) {\n  _inherits(Vulnerability, _BaseObject);\n\n  function Vulnerability(name) {\n    var _this;\n\n    _classCallCheck(this, Vulnerability);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Vulnerability).call(this, 'vulnerability'));\n\n    _defineProperty(_assertThisInitialized(_this), \"name\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"description\", null);\n\n    _this.name = name;\n    return _this;\n  }\n\n  _createClass(Vulnerability, [{\n    key: \"toJSON\",\n    value: function toJSON() {\n      if (!this.name) throw Error(\"STIX 2.0 requires a vulnerability name!\");\n\n      var output = _get(_getPrototypeOf(Vulnerability.prototype), \"toJSON\", this).call(this);\n\n      output.name = this.name;\n      if (this.description) output.description = this.description;\n      return output;\n    }\n  }]);\n\n  return Vulnerability;\n}(_baseObject.BaseObject);\n\nvar _default = Vulnerability;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZ1bGVybmFiaWxpdHkuanMiXSwibmFtZXMiOlsiVnVsbmVyYWJpbGl0eSIsIm5hbWUiLCJFcnJvciIsIm91dHB1dCIsImRlc2NyaXB0aW9uIiwiQmFzZU9iamVjdCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQUVNQSxhOzs7OztBQUtGLHlCQUFZQyxJQUFaLEVBQWtCO0FBQUE7O0FBQUE7O0FBQ2QsdUZBQU0sZUFBTjs7QUFEYywyREFIWCxJQUdXOztBQUFBLGtFQUZKLElBRUk7O0FBR2QsVUFBS0EsSUFBTCxHQUFZQSxJQUFaO0FBSGM7QUFJakI7Ozs7NkJBRVE7QUFDTCxVQUFJLENBQUMsS0FBS0EsSUFBVixFQUNJLE1BQU1DLEtBQUssMkNBQVg7O0FBRUosVUFBSUMsTUFBTSw0RUFBVjs7QUFDQUEsTUFBQUEsTUFBTSxDQUFDRixJQUFQLEdBQWMsS0FBS0EsSUFBbkI7QUFFQSxVQUFJLEtBQUtHLFdBQVQsRUFDSUQsTUFBTSxDQUFDQyxXQUFQLEdBQXFCLEtBQUtBLFdBQTFCO0FBRUosYUFBT0QsTUFBUDtBQUNIOzs7O0VBdEJ1QkUsc0I7O2VBeUJiTCxhIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcWmFjaCBTaGFtZXNcXERvY3VtZW50c1xcRGV2ZWxvcG1lbnRcXGpzLTItc3RpeFxcbGliXFxvYmplY3RzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQmFzZU9iamVjdCB9IGZyb20gXCIuL2Jhc2VPYmplY3RcIlxyXG5cclxuY2xhc3MgVnVsbmVyYWJpbGl0eSBleHRlbmRzIEJhc2VPYmplY3Qge1xyXG5cclxuICAgIG5hbWUgPSBudWxsXHJcbiAgICBkZXNjcmlwdGlvbiA9IG51bGxcclxuICAgIFxyXG4gICAgY29uc3RydWN0b3IobmFtZSkge1xyXG4gICAgICAgIHN1cGVyKCd2dWxuZXJhYmlsaXR5JylcclxuXHJcbiAgICAgICAgdGhpcy5uYW1lID0gbmFtZVxyXG4gICAgfVxyXG5cclxuICAgIHRvSlNPTigpIHtcclxuICAgICAgICBpZiAoIXRoaXMubmFtZSlcclxuICAgICAgICAgICAgdGhyb3cgRXJyb3IoYFNUSVggMi4wIHJlcXVpcmVzIGEgdnVsbmVyYWJpbGl0eSBuYW1lIWApXHJcblxyXG4gICAgICAgIGxldCBvdXRwdXQgPSBzdXBlci50b0pTT04oKVxyXG4gICAgICAgIG91dHB1dC5uYW1lID0gdGhpcy5uYW1lXHJcblxyXG4gICAgICAgIGlmICh0aGlzLmRlc2NyaXB0aW9uKVxyXG4gICAgICAgICAgICBvdXRwdXQuZGVzY3JpcHRpb24gPSB0aGlzLmRlc2NyaXB0aW9uXHJcblxyXG4gICAgICAgIHJldHVybiBvdXRwdXRcclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgVnVsbmVyYWJpbGl0eSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "vulernability.js"
      ],
      "names": [
        "Vulnerability",
        "name",
        "Error",
        "output",
        "description",
        "BaseObject"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;IAEMA,a;;;;;AAKF,yBAAYC,IAAZ,EAAkB;AAAA;;AAAA;;AACd,uFAAM,eAAN;;AADc,2DAHX,IAGW;;AAAA,kEAFJ,IAEI;;AAGd,UAAKA,IAAL,GAAYA,IAAZ;AAHc;AAIjB;;;;6BAEQ;AACL,UAAI,CAAC,KAAKA,IAAV,EACI,MAAMC,KAAK,2CAAX;;AAEJ,UAAIC,MAAM,4EAAV;;AACAA,MAAAA,MAAM,CAACF,IAAP,GAAc,KAAKA,IAAnB;AAEA,UAAI,KAAKG,WAAT,EACID,MAAM,CAACC,WAAP,GAAqB,KAAKA,WAA1B;AAEJ,aAAOD,MAAP;AACH;;;;EAtBuBE,sB;;eAyBbL,a",
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\objects",
      "sourcesContent": [
        "import { BaseObject } from \"./baseObject\"\r\n\r\nclass Vulnerability extends BaseObject {\r\n\r\n    name = null\r\n    description = null\r\n    \r\n    constructor(name) {\r\n        super('vulnerability')\r\n\r\n        this.name = name\r\n    }\r\n\r\n    toJSON() {\r\n        if (!this.name)\r\n            throw Error(`STIX 2.0 requires a vulnerability name!`)\r\n\r\n        let output = super.toJSON()\r\n        output.name = this.name\r\n\r\n        if (this.description)\r\n            output.description = this.description\r\n\r\n        return output\r\n    }\r\n}\r\n\r\nexport default Vulnerability"
      ]
    },
    "sourceType": "script",
    "mtime": 1565905252330
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\lib\\\\definitions\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"filename\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\\\\lib\\\\definitions\\\\vocabulary.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Zach Shames\\\\Documents\\\\Development\\\\js-2-stix\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\definitions",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\definitions\\vocabulary.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\definitions\\vocabulary.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\definitions\\vocabulary.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\definitions",
        "sourceFileName": "vocabulary.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TLPs = exports.DefinitionTypes = exports.RelationshipTypes = exports.ToolLabels = exports.ThreatActorSophistications = exports.ThreatActorRoles = exports.ThreatActorLabels = exports.ReportLabels = exports.MalwareLabels = exports.IndustrySectors = exports.IndicatorLabels = exports.IdentityClasses = exports.HashingAlgorithms = exports.AttackResourceLevels = exports.AttackMotivations = void 0;\nvar AttackMotivations = {\n  ACCIDENTAL: 'accidental',\n  COERCION: 'coercion',\n  DOMINANCE: 'dominance',\n  IDEOLOGY: 'ideology',\n  NOTORIETY: 'notoriety',\n  ORGANIZATIONAL_GAIN: 'organizational-gain',\n  PERSONAL_GAIN: 'personal-gain',\n  PERSONAL_SATISFACTION: 'personal-satisfaction',\n  REVENGE: 'revenge',\n  UNPREDICTABLE: 'unpredictable'\n};\nexports.AttackMotivations = AttackMotivations;\nvar AttackResourceLevels = {\n  INDIVIDUAL: 'individual',\n  CLUB: 'club',\n  CONTEST: 'contest',\n  TEAM: 'team',\n  ORGANIZATION: 'organization',\n  GOVERNMENT: 'government'\n};\nexports.AttackResourceLevels = AttackResourceLevels;\nvar HashingAlgorithms = {\n  MD5: 'MD5',\n  MD6: 'MD6',\n  RIPEMD_160: 'RIPEMD-160',\n  SHA_1: 'SHA-1',\n  SHA_224: 'SHA-224',\n  SHA_256: 'SHA-256',\n  SHA_384: 'SHA-384',\n  SHA_512: 'SHA-512',\n  SHA3_224: 'SHA3-224',\n  SHA3_256: 'SHA3-256',\n  SHA3_384: 'SHA3-384',\n  SHA3_512: 'SHA3-512',\n  SSDEEP: 'ssdeep',\n  WHIRLPOOL: 'WHIRLPOOL'\n};\nexports.HashingAlgorithms = HashingAlgorithms;\nvar IdentityClasses = {\n  INDIVIDUAL: 'individual',\n  GROUP: 'group',\n  ORGANIZATION: 'organization',\n  CLASS: 'class',\n  UNKNOWN: 'unknown'\n};\nexports.IdentityClasses = IdentityClasses;\nvar IndicatorLabels = {\n  ANOMALOUS_ACTIVITY: 'anomalous-activity',\n  ANONYMIZATION: 'anonymization',\n  BENIGN: 'benign',\n  COMPROMISED: 'compromised',\n  MALICIOUS_ACTIVITY: 'malicious-activity',\n  ATTRIBUTION: 'attribution'\n};\nexports.IndicatorLabels = IndicatorLabels;\nvar IndustrySectors = {\n  AGRICULTURE: 'agriculture',\n  AEROSPACE: 'aerospace',\n  AUTOMOTIVE: 'automotive',\n  COMMUNICATIONS: 'communications',\n  CONSTRUCTION: 'construction',\n  DEFENCE: 'defence',\n  EDUCATION: 'education',\n  ENERGY: 'energy',\n  ENTERTAINMENT: 'entertainment',\n  FINANCIAL_SERVICES: 'financial-services',\n  GOVERNMENT_NATIONAL: 'government-national',\n  GOVERNMENT_REGIONAL: 'government-regional',\n  GOVERNMENT_LOCAL: 'government-local',\n  GOVERNMENT_PUBLIC_SERVICES: 'government-public-services',\n  HEALTHCARE: 'healthcare',\n  HOSPITALITY_LEISURE: 'hospitality-leisure',\n  INFRASTRUCTURE: 'infrastructure',\n  INSURANCE: 'insurance',\n  MANUFACTURING: 'manufacturing',\n  MINING: 'mining',\n  NON_PROFIT: 'non-profit',\n  PHARMACEUTICALS: 'pharmaceuticals',\n  RETAIL: 'retail',\n  TECHNOLOGY: 'technology',\n  TELECOMMUNICATIONS: 'telecommunications',\n  TRANSPORTATION: 'transportation',\n  UTILITIES: 'utilities'\n};\nexports.IndustrySectors = IndustrySectors;\nvar MalwareLabels = {\n  ADWARE: 'adware',\n  BACKDOOR: 'backdoor',\n  BOT: 'bot',\n  DDOS: 'ddos',\n  DROPPER: 'dropper',\n  EXPLOT_KIT: 'explot-kit',\n  KEYLOGGER: 'keylogger',\n  RANSOMWARE: 'ransomware',\n  REMOTE_ACCESS_TROJAN: 'remote-access-trojan',\n  RESOURCE_EXPLOITATION: 'resource-exploitation',\n  ROGUE_SECURITY_SOFTWARE: 'rogue-security-software',\n  ROOTKIT: 'rootkit',\n  SCREEN_CAPTURE: 'screen-capture',\n  SPYWARE: 'spyware',\n  TROJAN: 'trojan',\n  VIRUS: 'virus',\n  WORM: 'worm'\n};\nexports.MalwareLabels = MalwareLabels;\nvar ReportLabels = {\n  THREAT_REPORT: 'threat-report',\n  ATTACK_PATTERN: 'attack-pattern',\n  CAMPAIGN: 'campaign',\n  IDENTITY: 'identity',\n  INDICATOR: 'indicator',\n  INTRUSION_SET: 'intrusion-set',\n  MALWARE: 'malware',\n  THREAT_ACTOR: 'threat-actor',\n  TOOL: 'tool',\n  VULNERABILITY: 'vulnerability'\n};\nexports.ReportLabels = ReportLabels;\nvar ThreatActorLabels = {\n  ACTIVIST: 'activist',\n  COMPETITOR: 'competitor',\n  CRIME_SYNDICATE: 'crime-syndicate',\n  CRIMINAL: 'criminal',\n  HACKER: 'hacker',\n  INSIDER_ACCIDENTAL: 'insider-accidental',\n  INSIDER_DISGRUNTLED: 'insider-disgruntled',\n  NATION_STATE: 'nation-state',\n  SENSATIONALIST: 'sensationalist',\n  SPY: 'spy',\n  TERRORIST: 'terrorist'\n};\nexports.ThreatActorLabels = ThreatActorLabels;\nvar ThreatActorRoles = {\n  AGENT: 'agent',\n  DIRECTOR: 'director',\n  INDEPENDENT: 'independent',\n  INFRASTRUCTURE_ARCHITECT: 'infrastructure-architect',\n  INFRASTRUCTURE_OPERATOR: 'infrastructure-operator',\n  MALWARE_AUTHOR: 'malware-author',\n  SPONSOR: 'sponsor'\n};\nexports.ThreatActorRoles = ThreatActorRoles;\nvar ThreatActorSophistications = {\n  NONE: 'none',\n  MINIMAL: 'minimal',\n  INTERMEDIATE: 'intermediate',\n  ADVANCED: 'advanced',\n  EXPERT: 'expert',\n  INNOVATOR: 'innovator',\n  STRATEGIC: 'strategic'\n};\nexports.ThreatActorSophistications = ThreatActorSophistications;\nvar ToolLabels = {\n  DENIAL_OF_SERVICE: 'denial-of-service',\n  EXPLOITATION: 'exploitation',\n  INFORMATION_GATHERING: 'information-gathering',\n  NETWORK_CAPTURE: 'network-capture',\n  CREDENTIAL_EXPLOITATION: 'credential-exploitation',\n  REMOTE_ACCESS: 'remote-access',\n  VULNERABILITY_SCANNING: 'vulnerability-scanning'\n};\nexports.ToolLabels = ToolLabels;\nvar RelationshipTypes = {\n  TARGETS: 'targets',\n  USES: 'uses',\n  ATTRIBUTED_TO: 'attributed-to',\n  MITIGATES: 'mitigates',\n  INDICATES: 'indicates',\n  VARIANT_OF: 'variant-of',\n  IMPERSONATES: 'impersonates'\n};\nexports.RelationshipTypes = RelationshipTypes;\nvar DefinitionTypes = {\n  TLP: 'tlp',\n  STATEMENT: 'statement'\n};\nexports.DefinitionTypes = DefinitionTypes;\nvar TLPs = {\n  WHITE: 'white',\n  GREEN: 'green',\n  AMBER: 'amber',\n  RED: 'red'\n};\nexports.TLPs = TLPs;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "vocabulary.js"
      ],
      "names": [
        "AttackMotivations",
        "ACCIDENTAL",
        "COERCION",
        "DOMINANCE",
        "IDEOLOGY",
        "NOTORIETY",
        "ORGANIZATIONAL_GAIN",
        "PERSONAL_GAIN",
        "PERSONAL_SATISFACTION",
        "REVENGE",
        "UNPREDICTABLE",
        "AttackResourceLevels",
        "INDIVIDUAL",
        "CLUB",
        "CONTEST",
        "TEAM",
        "ORGANIZATION",
        "GOVERNMENT",
        "HashingAlgorithms",
        "MD5",
        "MD6",
        "RIPEMD_160",
        "SHA_1",
        "SHA_224",
        "SHA_256",
        "SHA_384",
        "SHA_512",
        "SHA3_224",
        "SHA3_256",
        "SHA3_384",
        "SHA3_512",
        "SSDEEP",
        "WHIRLPOOL",
        "IdentityClasses",
        "GROUP",
        "CLASS",
        "UNKNOWN",
        "IndicatorLabels",
        "ANOMALOUS_ACTIVITY",
        "ANONYMIZATION",
        "BENIGN",
        "COMPROMISED",
        "MALICIOUS_ACTIVITY",
        "ATTRIBUTION",
        "IndustrySectors",
        "AGRICULTURE",
        "AEROSPACE",
        "AUTOMOTIVE",
        "COMMUNICATIONS",
        "CONSTRUCTION",
        "DEFENCE",
        "EDUCATION",
        "ENERGY",
        "ENTERTAINMENT",
        "FINANCIAL_SERVICES",
        "GOVERNMENT_NATIONAL",
        "GOVERNMENT_REGIONAL",
        "GOVERNMENT_LOCAL",
        "GOVERNMENT_PUBLIC_SERVICES",
        "HEALTHCARE",
        "HOSPITALITY_LEISURE",
        "INFRASTRUCTURE",
        "INSURANCE",
        "MANUFACTURING",
        "MINING",
        "NON_PROFIT",
        "PHARMACEUTICALS",
        "RETAIL",
        "TECHNOLOGY",
        "TELECOMMUNICATIONS",
        "TRANSPORTATION",
        "UTILITIES",
        "MalwareLabels",
        "ADWARE",
        "BACKDOOR",
        "BOT",
        "DDOS",
        "DROPPER",
        "EXPLOT_KIT",
        "KEYLOGGER",
        "RANSOMWARE",
        "REMOTE_ACCESS_TROJAN",
        "RESOURCE_EXPLOITATION",
        "ROGUE_SECURITY_SOFTWARE",
        "ROOTKIT",
        "SCREEN_CAPTURE",
        "SPYWARE",
        "TROJAN",
        "VIRUS",
        "WORM",
        "ReportLabels",
        "THREAT_REPORT",
        "ATTACK_PATTERN",
        "CAMPAIGN",
        "IDENTITY",
        "INDICATOR",
        "INTRUSION_SET",
        "MALWARE",
        "THREAT_ACTOR",
        "TOOL",
        "VULNERABILITY",
        "ThreatActorLabels",
        "ACTIVIST",
        "COMPETITOR",
        "CRIME_SYNDICATE",
        "CRIMINAL",
        "HACKER",
        "INSIDER_ACCIDENTAL",
        "INSIDER_DISGRUNTLED",
        "NATION_STATE",
        "SENSATIONALIST",
        "SPY",
        "TERRORIST",
        "ThreatActorRoles",
        "AGENT",
        "DIRECTOR",
        "INDEPENDENT",
        "INFRASTRUCTURE_ARCHITECT",
        "INFRASTRUCTURE_OPERATOR",
        "MALWARE_AUTHOR",
        "SPONSOR",
        "ThreatActorSophistications",
        "NONE",
        "MINIMAL",
        "INTERMEDIATE",
        "ADVANCED",
        "EXPERT",
        "INNOVATOR",
        "STRATEGIC",
        "ToolLabels",
        "DENIAL_OF_SERVICE",
        "EXPLOITATION",
        "INFORMATION_GATHERING",
        "NETWORK_CAPTURE",
        "CREDENTIAL_EXPLOITATION",
        "REMOTE_ACCESS",
        "VULNERABILITY_SCANNING",
        "RelationshipTypes",
        "TARGETS",
        "USES",
        "ATTRIBUTED_TO",
        "MITIGATES",
        "INDICATES",
        "VARIANT_OF",
        "IMPERSONATES",
        "DefinitionTypes",
        "TLP",
        "STATEMENT",
        "TLPs",
        "WHITE",
        "GREEN",
        "AMBER",
        "RED"
      ],
      "mappings": ";;;;;;AAAO,IAAMA,iBAAiB,GAAG;AAC7BC,EAAAA,UAAU,EAAE,YADiB;AAE7BC,EAAAA,QAAQ,EAAE,UAFmB;AAG7BC,EAAAA,SAAS,EAAE,WAHkB;AAI7BC,EAAAA,QAAQ,EAAE,UAJmB;AAK7BC,EAAAA,SAAS,EAAE,WALkB;AAM7BC,EAAAA,mBAAmB,EAAE,qBANQ;AAO7BC,EAAAA,aAAa,EAAE,eAPc;AAQ7BC,EAAAA,qBAAqB,EAAE,uBARM;AAS7BC,EAAAA,OAAO,EAAE,SAToB;AAU7BC,EAAAA,aAAa,EAAE;AAVc,CAA1B;;AAaA,IAAMC,oBAAoB,GAAG;AAChCC,EAAAA,UAAU,EAAE,YADoB;AAEhCC,EAAAA,IAAI,EAAE,MAF0B;AAGhCC,EAAAA,OAAO,EAAE,SAHuB;AAIhCC,EAAAA,IAAI,EAAE,MAJ0B;AAKhCC,EAAAA,YAAY,EAAE,cALkB;AAMhCC,EAAAA,UAAU,EAAE;AANoB,CAA7B;;AASA,IAAMC,iBAAiB,GAAG;AAC7BC,EAAAA,GAAG,EAAE,KADwB;AAE7BC,EAAAA,GAAG,EAAE,KAFwB;AAG7BC,EAAAA,UAAU,EAAE,YAHiB;AAI7BC,EAAAA,KAAK,EAAE,OAJsB;AAK7BC,EAAAA,OAAO,EAAE,SALoB;AAM7BC,EAAAA,OAAO,EAAE,SANoB;AAO7BC,EAAAA,OAAO,EAAE,SAPoB;AAQ7BC,EAAAA,OAAO,EAAE,SARoB;AAS7BC,EAAAA,QAAQ,EAAE,UATmB;AAU7BC,EAAAA,QAAQ,EAAE,UAVmB;AAW7BC,EAAAA,QAAQ,EAAE,UAXmB;AAY7BC,EAAAA,QAAQ,EAAE,UAZmB;AAa7BC,EAAAA,MAAM,EAAE,QAbqB;AAc7BC,EAAAA,SAAS,EAAE;AAdkB,CAA1B;;AAiBA,IAAMC,eAAe,GAAG;AAC3BrB,EAAAA,UAAU,EAAE,YADe;AAE3BsB,EAAAA,KAAK,EAAE,OAFoB;AAG3BlB,EAAAA,YAAY,EAAE,cAHa;AAI3BmB,EAAAA,KAAK,EAAE,OAJoB;AAK3BC,EAAAA,OAAO,EAAE;AALkB,CAAxB;;AAQA,IAAMC,eAAe,GAAG;AAC3BC,EAAAA,kBAAkB,EAAE,oBADO;AAE3BC,EAAAA,aAAa,EAAE,eAFY;AAG3BC,EAAAA,MAAM,EAAE,QAHmB;AAI3BC,EAAAA,WAAW,EAAE,aAJc;AAK3BC,EAAAA,kBAAkB,EAAE,oBALO;AAM3BC,EAAAA,WAAW,EAAE;AANc,CAAxB;;AASA,IAAMC,eAAe,GAAG;AAC3BC,EAAAA,WAAW,EAAE,aADc;AAE3BC,EAAAA,SAAS,EAAE,WAFgB;AAG3BC,EAAAA,UAAU,EAAE,YAHe;AAI3BC,EAAAA,cAAc,EAAE,gBAJW;AAK3BC,EAAAA,YAAY,EAAE,cALa;AAM3BC,EAAAA,OAAO,EAAE,SANkB;AAO3BC,EAAAA,SAAS,EAAE,WAPgB;AAQ3BC,EAAAA,MAAM,EAAE,QARmB;AAS3BC,EAAAA,aAAa,EAAE,eATY;AAU3BC,EAAAA,kBAAkB,EAAE,oBAVO;AAW3BC,EAAAA,mBAAmB,EAAE,qBAXM;AAY3BC,EAAAA,mBAAmB,EAAE,qBAZM;AAa3BC,EAAAA,gBAAgB,EAAE,kBAbS;AAc3BC,EAAAA,0BAA0B,EAAE,4BAdD;AAe3BC,EAAAA,UAAU,EAAE,YAfe;AAgB3BC,EAAAA,mBAAmB,EAAE,qBAhBM;AAiB3BC,EAAAA,cAAc,EAAE,gBAjBW;AAkB3BC,EAAAA,SAAS,EAAE,WAlBgB;AAmB3BC,EAAAA,aAAa,EAAE,eAnBY;AAoB3BC,EAAAA,MAAM,EAAE,QApBmB;AAqB3BC,EAAAA,UAAU,EAAE,YArBe;AAsB3BC,EAAAA,eAAe,EAAE,iBAtBU;AAuB3BC,EAAAA,MAAM,EAAE,QAvBmB;AAwB3BC,EAAAA,UAAU,EAAE,YAxBe;AAyB3BC,EAAAA,kBAAkB,EAAE,oBAzBO;AA0B3BC,EAAAA,cAAc,EAAE,gBA1BW;AA2B3BC,EAAAA,SAAS,EAAE;AA3BgB,CAAxB;;AA8BA,IAAMC,aAAa,GAAG;AACzBC,EAAAA,MAAM,EAAE,QADiB;AAEzBC,EAAAA,QAAQ,EAAE,UAFe;AAGzBC,EAAAA,GAAG,EAAE,KAHoB;AAIzBC,EAAAA,IAAI,EAAE,MAJmB;AAKzBC,EAAAA,OAAO,EAAE,SALgB;AAMzBC,EAAAA,UAAU,EAAE,YANa;AAOzBC,EAAAA,SAAS,EAAE,WAPc;AAQzBC,EAAAA,UAAU,EAAE,YARa;AASzBC,EAAAA,oBAAoB,EAAE,sBATG;AAUzBC,EAAAA,qBAAqB,EAAE,uBAVE;AAWzBC,EAAAA,uBAAuB,EAAE,yBAXA;AAYzBC,EAAAA,OAAO,EAAE,SAZgB;AAazBC,EAAAA,cAAc,EAAE,gBAbS;AAczBC,EAAAA,OAAO,EAAE,SAdgB;AAezBC,EAAAA,MAAM,EAAE,QAfiB;AAgBzBC,EAAAA,KAAK,EAAE,OAhBkB;AAiBzBC,EAAAA,IAAI,EAAE;AAjBmB,CAAtB;;AAoBA,IAAMC,YAAY,GAAG;AACxBC,EAAAA,aAAa,EAAE,eADS;AAExBC,EAAAA,cAAc,EAAE,gBAFQ;AAGxBC,EAAAA,QAAQ,EAAE,UAHc;AAIxBC,EAAAA,QAAQ,EAAE,UAJc;AAKxBC,EAAAA,SAAS,EAAE,WALa;AAMxBC,EAAAA,aAAa,EAAE,eANS;AAOxBC,EAAAA,OAAO,EAAE,SAPe;AAQxBC,EAAAA,YAAY,EAAE,cARU;AASxBC,EAAAA,IAAI,EAAE,MATkB;AAUxBC,EAAAA,aAAa,EAAE;AAVS,CAArB;;AAaA,IAAMC,iBAAiB,GAAG;AAC7BC,EAAAA,QAAQ,EAAE,UADmB;AAE7BC,EAAAA,UAAU,EAAE,YAFiB;AAG7BC,EAAAA,eAAe,EAAE,iBAHY;AAI7BC,EAAAA,QAAQ,EAAE,UAJmB;AAK7BC,EAAAA,MAAM,EAAE,QALqB;AAM7BC,EAAAA,kBAAkB,EAAE,oBANS;AAO7BC,EAAAA,mBAAmB,EAAE,qBAPQ;AAQ7BC,EAAAA,YAAY,EAAE,cARe;AAS7BC,EAAAA,cAAc,EAAE,gBATa;AAU7BC,EAAAA,GAAG,EAAE,KAVwB;AAW7BC,EAAAA,SAAS,EAAE;AAXkB,CAA1B;;AAcA,IAAMC,gBAAgB,GAAG;AAC5BC,EAAAA,KAAK,EAAE,OADqB;AAE5BC,EAAAA,QAAQ,EAAE,UAFkB;AAG5BC,EAAAA,WAAW,EAAE,aAHe;AAI5BC,EAAAA,wBAAwB,EAAE,0BAJE;AAK5BC,EAAAA,uBAAuB,EAAE,yBALG;AAM5BC,EAAAA,cAAc,EAAE,gBANY;AAO5BC,EAAAA,OAAO,EAAE;AAPmB,CAAzB;;AAUA,IAAMC,0BAA0B,GAAG;AACtCC,EAAAA,IAAI,EAAE,MADgC;AAEtCC,EAAAA,OAAO,EAAE,SAF6B;AAGtCC,EAAAA,YAAY,EAAE,cAHwB;AAItCC,EAAAA,QAAQ,EAAE,UAJ4B;AAKtCC,EAAAA,MAAM,EAAE,QAL8B;AAMtCC,EAAAA,SAAS,EAAE,WAN2B;AAOtCC,EAAAA,SAAS,EAAE;AAP2B,CAAnC;;AAUA,IAAMC,UAAU,GAAG;AACtBC,EAAAA,iBAAiB,EAAE,mBADG;AAEtBC,EAAAA,YAAY,EAAE,cAFQ;AAGtBC,EAAAA,qBAAqB,EAAE,uBAHD;AAItBC,EAAAA,eAAe,EAAE,iBAJK;AAKtBC,EAAAA,uBAAuB,EAAE,yBALH;AAMtBC,EAAAA,aAAa,EAAE,eANO;AAOtBC,EAAAA,sBAAsB,EAAE;AAPF,CAAnB;;AAUA,IAAMC,iBAAiB,GAAG;AAC7BC,EAAAA,OAAO,EAAE,SADoB;AAE7BC,EAAAA,IAAI,EAAE,MAFuB;AAG7BC,EAAAA,aAAa,EAAE,eAHc;AAI7BC,EAAAA,SAAS,EAAE,WAJkB;AAK7BC,EAAAA,SAAS,EAAE,WALkB;AAM7BC,EAAAA,UAAU,EAAE,YANiB;AAO7BC,EAAAA,YAAY,EAAE;AAPe,CAA1B;;AAUA,IAAMC,eAAe,GAAG;AAC3BC,EAAAA,GAAG,EAAE,KADsB;AAE3BC,EAAAA,SAAS,EAAE;AAFgB,CAAxB;;AAKA,IAAMC,IAAI,GAAG;AAChBC,EAAAA,KAAK,EAAE,OADS;AAEhBC,EAAAA,KAAK,EAAE,OAFS;AAGhBC,EAAAA,KAAK,EAAE,OAHS;AAIhBC,EAAAA,GAAG,EAAE;AAJW,CAAb",
      "sourceRoot": "C:\\Users\\Zach Shames\\Documents\\Development\\js-2-stix\\lib\\definitions",
      "sourcesContent": [
        "export const AttackMotivations = {\r\n    ACCIDENTAL: 'accidental',\r\n    COERCION: 'coercion',\r\n    DOMINANCE: 'dominance',\r\n    IDEOLOGY: 'ideology',\r\n    NOTORIETY: 'notoriety',\r\n    ORGANIZATIONAL_GAIN: 'organizational-gain',\r\n    PERSONAL_GAIN: 'personal-gain',\r\n    PERSONAL_SATISFACTION: 'personal-satisfaction',\r\n    REVENGE: 'revenge',\r\n    UNPREDICTABLE: 'unpredictable'\r\n}\r\n\r\nexport const AttackResourceLevels = {\r\n    INDIVIDUAL: 'individual',\r\n    CLUB: 'club',\r\n    CONTEST: 'contest',\r\n    TEAM: 'team',\r\n    ORGANIZATION: 'organization',\r\n    GOVERNMENT: 'government'\r\n}\r\n\r\nexport const HashingAlgorithms = {\r\n    MD5: 'MD5',\r\n    MD6: 'MD6',\r\n    RIPEMD_160: 'RIPEMD-160',\r\n    SHA_1: 'SHA-1',\r\n    SHA_224: 'SHA-224',\r\n    SHA_256: 'SHA-256',\r\n    SHA_384: 'SHA-384',\r\n    SHA_512: 'SHA-512',\r\n    SHA3_224: 'SHA3-224',\r\n    SHA3_256: 'SHA3-256',\r\n    SHA3_384: 'SHA3-384',\r\n    SHA3_512: 'SHA3-512',\r\n    SSDEEP: 'ssdeep',\r\n    WHIRLPOOL: 'WHIRLPOOL'\r\n}\r\n\r\nexport const IdentityClasses = {\r\n    INDIVIDUAL: 'individual',\r\n    GROUP: 'group',\r\n    ORGANIZATION: 'organization',\r\n    CLASS: 'class',\r\n    UNKNOWN: 'unknown'\r\n}\r\n\r\nexport const IndicatorLabels = {\r\n    ANOMALOUS_ACTIVITY: 'anomalous-activity',\r\n    ANONYMIZATION: 'anonymization',\r\n    BENIGN: 'benign',\r\n    COMPROMISED: 'compromised',\r\n    MALICIOUS_ACTIVITY: 'malicious-activity',\r\n    ATTRIBUTION: 'attribution'\r\n}\r\n\r\nexport const IndustrySectors = {\r\n    AGRICULTURE: 'agriculture',\r\n    AEROSPACE: 'aerospace',\r\n    AUTOMOTIVE: 'automotive',\r\n    COMMUNICATIONS: 'communications',\r\n    CONSTRUCTION: 'construction',\r\n    DEFENCE: 'defence',\r\n    EDUCATION: 'education',\r\n    ENERGY: 'energy',\r\n    ENTERTAINMENT: 'entertainment',\r\n    FINANCIAL_SERVICES: 'financial-services',\r\n    GOVERNMENT_NATIONAL: 'government-national',\r\n    GOVERNMENT_REGIONAL: 'government-regional',\r\n    GOVERNMENT_LOCAL: 'government-local',\r\n    GOVERNMENT_PUBLIC_SERVICES: 'government-public-services',\r\n    HEALTHCARE: 'healthcare',\r\n    HOSPITALITY_LEISURE: 'hospitality-leisure',\r\n    INFRASTRUCTURE: 'infrastructure',\r\n    INSURANCE: 'insurance',\r\n    MANUFACTURING: 'manufacturing',\r\n    MINING: 'mining',\r\n    NON_PROFIT: 'non-profit',\r\n    PHARMACEUTICALS: 'pharmaceuticals',\r\n    RETAIL: 'retail',\r\n    TECHNOLOGY: 'technology',\r\n    TELECOMMUNICATIONS: 'telecommunications',\r\n    TRANSPORTATION: 'transportation',\r\n    UTILITIES: 'utilities'\r\n}\r\n\r\nexport const MalwareLabels = {\r\n    ADWARE: 'adware',\r\n    BACKDOOR: 'backdoor',\r\n    BOT: 'bot',\r\n    DDOS: 'ddos',\r\n    DROPPER: 'dropper',\r\n    EXPLOT_KIT: 'explot-kit',\r\n    KEYLOGGER: 'keylogger',\r\n    RANSOMWARE: 'ransomware',\r\n    REMOTE_ACCESS_TROJAN: 'remote-access-trojan',\r\n    RESOURCE_EXPLOITATION: 'resource-exploitation',\r\n    ROGUE_SECURITY_SOFTWARE: 'rogue-security-software',\r\n    ROOTKIT: 'rootkit',\r\n    SCREEN_CAPTURE: 'screen-capture',\r\n    SPYWARE: 'spyware',\r\n    TROJAN: 'trojan',\r\n    VIRUS: 'virus',\r\n    WORM: 'worm'\r\n}\r\n\r\nexport const ReportLabels = {\r\n    THREAT_REPORT: 'threat-report',\r\n    ATTACK_PATTERN: 'attack-pattern',\r\n    CAMPAIGN: 'campaign',\r\n    IDENTITY: 'identity',\r\n    INDICATOR: 'indicator',\r\n    INTRUSION_SET: 'intrusion-set',\r\n    MALWARE: 'malware',\r\n    THREAT_ACTOR: 'threat-actor',\r\n    TOOL: 'tool',\r\n    VULNERABILITY: 'vulnerability'\r\n}\r\n\r\nexport const ThreatActorLabels = {\r\n    ACTIVIST: 'activist',\r\n    COMPETITOR: 'competitor',\r\n    CRIME_SYNDICATE: 'crime-syndicate',\r\n    CRIMINAL: 'criminal',\r\n    HACKER: 'hacker',\r\n    INSIDER_ACCIDENTAL: 'insider-accidental',\r\n    INSIDER_DISGRUNTLED: 'insider-disgruntled',\r\n    NATION_STATE: 'nation-state',\r\n    SENSATIONALIST: 'sensationalist',\r\n    SPY: 'spy',\r\n    TERRORIST: 'terrorist'\r\n}\r\n\r\nexport const ThreatActorRoles = {\r\n    AGENT: 'agent',\r\n    DIRECTOR: 'director',\r\n    INDEPENDENT: 'independent',\r\n    INFRASTRUCTURE_ARCHITECT: 'infrastructure-architect',\r\n    INFRASTRUCTURE_OPERATOR: 'infrastructure-operator',\r\n    MALWARE_AUTHOR: 'malware-author',\r\n    SPONSOR: 'sponsor'\r\n}\r\n\r\nexport const ThreatActorSophistications = {\r\n    NONE: 'none',\r\n    MINIMAL: 'minimal',\r\n    INTERMEDIATE: 'intermediate',\r\n    ADVANCED: 'advanced',\r\n    EXPERT: 'expert',\r\n    INNOVATOR: 'innovator',\r\n    STRATEGIC: 'strategic'\r\n}\r\n\r\nexport const ToolLabels = {\r\n    DENIAL_OF_SERVICE: 'denial-of-service',\r\n    EXPLOITATION: 'exploitation',\r\n    INFORMATION_GATHERING: 'information-gathering',\r\n    NETWORK_CAPTURE: 'network-capture',\r\n    CREDENTIAL_EXPLOITATION: 'credential-exploitation',\r\n    REMOTE_ACCESS: 'remote-access',\r\n    VULNERABILITY_SCANNING: 'vulnerability-scanning'\r\n}\r\n\r\nexport const RelationshipTypes = {\r\n    TARGETS: 'targets',\r\n    USES: 'uses',\r\n    ATTRIBUTED_TO: 'attributed-to',\r\n    MITIGATES: 'mitigates',\r\n    INDICATES: 'indicates',\r\n    VARIANT_OF: 'variant-of',\r\n    IMPERSONATES: 'impersonates'\r\n}\r\n\r\nexport const DefinitionTypes = {\r\n    TLP: 'tlp',\r\n    STATEMENT: 'statement'\r\n}\r\n\r\nexport const TLPs = {\r\n    WHITE: 'white',\r\n    GREEN: 'green',\r\n    AMBER: 'amber',\r\n    RED: 'red'\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1565907011690
  }
}